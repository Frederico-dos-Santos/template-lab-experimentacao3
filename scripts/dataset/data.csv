Repositório,Estrelas,Pull Requests,Estado PR,Título PR,Número PR,Data de Criação PR,Data de Fechamento PR,Data de Merge PR,Intervalo Criação e Última Atividadae,Status Revisão,Revisões,Arquivos Alterados,Linhas Adicionadas,Linhas Excluídas,Corpo PR,Caracteres Corpo PR,Participantes PR,Comentários PR
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,chore: remove unused /docs code,54334,2024-04-09 14:46:21+00:00,2024-04-09 16:31:40+00:00,2024-04-09 16:31:40+00:00,1.7552777777777777,APPROVED,2,3,0,31,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nRemoves the remaining /docs code. The code is unused as the folder has been moved to its own repo.",369,3,1
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,chore fix(curriculum): fix typos,54331,2024-04-09 05:17:49+00:00,2024-04-09 05:38:35+00:00,,0.3461111111111111,REVIEW_REQUIRED,1,1,1,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nfix a typo: funtcion->function",301,2,1
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,chore fix(curriculum): fix typos,54330,2024-04-09 01:45:12+00:00,2024-04-09 02:57:56+00:00,,1.2122222222222223,REVIEW_REQUIRED,0,2,2,2,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nfix some typos",285,2,2
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(curriculum): update instructions for step 24 of football team cards project ,54326,2024-04-08 15:17:59+00:00,2024-04-08 18:21:27+00:00,2024-04-08 18:21:26+00:00,3.057777777777778,APPROVED,2,1,1,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54320",284,3,0
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,Update .gitignore,54325,2024-04-08 13:57:58+00:00,2024-04-08 13:58:13+00:00,,0.004166666666666667,REVIEW_REQUIRED,0,1,1,0,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",284,1,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,"chore(i18n,learn): processed translations",54324,2024-04-08 13:26:20+00:00,2024-04-09 05:52:09+00:00,2024-04-09 05:52:09+00:00,16.43027777777778,APPROVED,2,3000,104539,9017,This PR was opened auto-magically by Crowdin.,45,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,"chore(i18n,client): processed translations",54323,2024-04-08 12:25:15+00:00,2024-04-08 15:57:23+00:00,2024-04-08 15:57:23+00:00,3.5355555555555553,APPROVED,3,12,95,49,This PR was opened auto-magically by Crowdin.,45,4,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,refactor: remove component library as internal dependency,54322,2024-04-08 09:44:06+00:00,2024-04-08 17:35:30+00:00,2024-04-08 17:35:30+00:00,7.8566666666666665,APPROVED,2,129,176,8920,"test(client): remove component library as a internal package\nfix: pnpm lock file\n\nChecklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",369,3,1
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,fix(curriculum): update logic and tests for step 29 football team,54318,2024-04-07 02:57:02+00:00,2024-04-07 06:46:40+00:00,,3.8272222222222223,REVIEW_REQUIRED,0,2,2,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nRelated to #54304",288,2,1
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,updated-step-29-of-football-team-cards-project,54317,2024-04-06 23:09:47+00:00,2024-04-08 06:43:27+00:00,,31.56111111111111,CHANGES_REQUESTED,1,1,2,2,"I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\nCloses #54304\nupdated and fixed\n\n\nlogic and tests for step 29 of football team cards project #54304",355,3,5
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,fix(curriculum): update logic and tests for step 29 football team,54315,2024-04-06 02:31:51+00:00,2024-04-09 03:05:47+00:00,,72.56555555555556,REVIEW_REQUIRED,1,20,21,20,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nRelated to #54304",288,4,2
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,BEST Patch 1,54314,2024-04-05 23:29:49+00:00,2024-04-06 00:29:21+00:00,,0.9922222222222222,,0,3000,343789,20092,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",284,30,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,"chore(e2e,playwright): remove unused test IDs",54309,2024-04-05 16:16:24+00:00,2024-04-05 18:26:30+00:00,2024-04-05 18:26:30+00:00,2.1683333333333334,APPROVED,2,1,3,14,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nThis PR:\n\nRemoves unused data-playwright-test-label\nIs related to: freeCodeCamp/ui#28 (comment)",369,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(tools): make the editing steps tool keep the challenge type,54308,2024-04-05 14:53:27+00:00,2024-04-08 18:27:42+00:00,2024-04-08 18:27:42+00:00,75.57083333333334,APPROVED,2,6,29,6,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54296\n\nThis PR was opened to make the editing steps tool keep the challengeType when the curriculum developers use the  ""Create Next Step"", ""Create Empty Steps"", or ""Insert Step"" button.\nThe code was tested locally, using Windows 11 Home PC with Chrome.",535,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(curriculum): update description and tests for step - 29 football card project,54307,2024-04-05 14:25:21+00:00,2024-04-09 05:51:48+00:00,2024-04-09 05:51:48+00:00,87.44083333333333,APPROVED,4,19,21,21,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54304",284,4,0
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,fix(curriculum): update logic and tests for step 29 of football team,54306,2024-04-05 03:21:39+00:00,2024-04-08 03:11:50+00:00,,71.83638888888889,REVIEW_REQUIRED,0,19,20,20,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54304",284,2,3
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(curriculum): fix navigate-previous and navigate-next english strings,54300,2024-04-04 14:10:41+00:00,2024-04-04 15:13:55+00:00,2024-04-04 15:13:54+00:00,1.0538888888888889,APPROVED,2,1,2,2,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nFixes the issue pointed out by @Sembauke , during the review of #54195\ncomments: #54195 (comment), #54195 (comment)",387,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,"test: check for navigation, not text",54298,2024-04-04 11:52:31+00:00,2024-04-04 13:32:06+00:00,2024-04-04 13:32:06+00:00,1.6597222222222223,APPROVED,2,1,9,6,"This test is still doing too much, but this change makes it more\nfocused. It doesn't matter (for this test) what text is in the page,\njust that it's navigated to the right page.\nChecklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.",446,3,0
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,refactor(client): remove bootstrap injection,54297,2024-04-04 11:30:55+00:00,2024-04-04 12:07:51+00:00,,0.6155555555555555,REVIEW_REQUIRED,0,3,16,23,"refactor(client): remove bootstrap injection\nfix: some issues with nav drawer\n\nChecklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",366,1,0
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,feat: added stat section to profile page,54293,2024-04-04 07:24:02+00:00,2024-04-04 15:29:11+00:00,,8.085833333333333,REVIEW_REQUIRED,0,18,177,88,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\n\n\nAdded stats section, removed streaks from heatmap component",334,2,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,refactor(curriculum): breaking down steps 12 and 13 of TODO app for simplicity ,54292,2024-04-04 00:56:01+00:00,2024-04-05 18:25:30+00:00,2024-04-05 18:25:30+00:00,41.49138888888889,APPROVED,3,55,2130,177,"Summary of changes\nLooking at the analytics, campers are spending a lot of time on steps 12 and 13 of the todo app project. There is a lot going on in step 12 in particular.\nThis PR breaks these steps down a little bit better and adds a console statement for testing and better understanding.\nChecklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.",561,3,0
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,changed the heading of the certificates,54290,2024-04-03 16:28:29+00:00,2024-04-03 16:32:20+00:00,,0.06416666666666666,REVIEW_REQUIRED,0,1,1,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",284,2,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,chore: remove react-bootstrap,54289,2024-04-03 14:56:50+00:00,2024-04-03 17:39:03+00:00,2024-04-03 17:39:03+00:00,2.703611111111111,APPROVED,4,9,55,177,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nThis PR:\n\nMigrates the remaining react-bootstrap usages to ui-components\nRemoves react-bootstrap 🌹\nIs related to #52030",394,4,3
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,refactor(curriculum): update lessons for arrow function music player project,54288,2024-04-03 14:34:34+00:00,2024-04-05 14:24:33+00:00,2024-04-05 14:24:33+00:00,47.83305555555555,APPROVED,7,90,4175,266,"Summary of changes\nA lot of campers on the forum and discord are confused on how arrow functions work. Since arrow function play a major role in this certification, I have added lessons to break it down a little bit better.\nChecklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.",491,3,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,"chore(i18n,learn): processed translations",54287,2024-04-03 13:15:38+00:00,2024-04-04 12:57:25+00:00,2024-04-04 12:57:25+00:00,23.69638888888889,APPROVED,5,281,932,712,This PR was opened auto-magically by Crowdin.,45,4,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,"chore(i18n,client): processed translations",54286,2024-04-03 12:25:43+00:00,2024-04-03 13:48:17+00:00,2024-04-03 13:48:17+00:00,1.376111111111111,APPROVED,2,2,24,24,This PR was opened auto-magically by Crowdin.,45,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix: update tests for new modal,54284,2024-04-03 03:57:26+00:00,2024-04-03 07:13:07+00:00,2024-04-03 07:13:07+00:00,3.261388888888889,APPROVED,2,1,3,3,"Checklist:\n\n\n I have read freeCodeCamp's contribution guidelines.\n My pull request has a descriptive title (not a vague title like Update index.md)\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",300,4,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,feat: accept donation animation ab test,54283,2024-04-03 03:50:52+00:00,2024-04-04 07:37:02+00:00,2024-04-04 07:37:02+00:00,27.769444444444446,APPROVED,2,4,26,396,"Checklist:\n\n\n I have read freeCodeCamp's contribution guidelines.\n My pull request has a descriptive title (not a vague title like Update index.md)\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",300,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix: clean wallet amount on prop change,54281,2024-04-03 01:50:56+00:00,2024-04-04 05:40:30+00:00,2024-04-04 05:40:30+00:00,27.82611111111111,APPROVED,2,1,5,0,"Checklist:\n\n\n I have read freeCodeCamp's contribution guidelines.\n My pull request has a descriptive title (not a vague title like Update index.md)\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54245",300,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(curriculum): Reordered lessons as per issue #54168,54280,2024-04-02 19:41:52+00:00,2024-04-03 05:01:38+00:00,2024-04-03 05:01:38+00:00,9.329444444444444,APPROVED,2,4,4,4,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54168",284,3,1
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,fix: removed extra blank link between sections,54279,2024-04-02 16:14:13+00:00,2024-04-02 16:14:24+00:00,,0.0030555555555555557,REVIEW_REQUIRED,0,1,0,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",284,1,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,feat(UI): added specific label for MacOS check-code button,54276,2024-04-02 10:24:59+00:00,2024-04-05 06:49:33+00:00,2024-04-05 06:49:33+00:00,68.40944444444445,APPROVED,6,4,24,23,"Checklist:\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\nCloses #54270\nAs suggested, I added the following label: “Check Your Code (⌘+ Enter)"".\nThis kind of label would be showed only on MacOS devices (detected by navigator.userAgent property); for other OS standard label will be showed",499,3,1
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,"feat(ui): added text for MacOS users ""Check Your Code (⌘+ Enter)"" in challenges lower-jaw.tsx component",54275,2024-04-02 10:19:53+00:00,2024-04-04 17:20:36+00:00,,55.011944444444445,CHANGES_REQUESTED,1,3,14,3,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54270",284,4,2
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,Readme file commited,54269,2024-04-01 19:22:43+00:00,2024-04-01 19:31:08+00:00,,0.14027777777777778,REVIEW_REQUIRED,0,1,3,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX\n\nI wrote some text for learning purpose...",329,2,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,"chore(i18n,learn): processed translations",54268,2024-04-01 16:43:22+00:00,2024-04-02 06:19:24+00:00,2024-04-02 06:19:24+00:00,13.600555555555555,APPROVED,2,2248,81224,2002,This PR was opened auto-magically by Crowdin.,45,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(curriculum): Update instructions Learn String Manipulation by Building a Cypher Step 3,54267,2024-04-01 16:28:19+00:00,2024-04-01 17:19:07+00:00,2024-04-01 17:19:07+00:00,0.8466666666666667,APPROVED,2,1,1,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54234",284,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,"fix: when in doubt, sudo?",54266,2024-04-01 15:35:14+00:00,2024-04-01 16:00:43+00:00,2024-04-01 16:00:43+00:00,0.4247222222222222,APPROVED,2,2,2,2,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",284,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,"chore(i18n,client): processed translations",54265,2024-04-01 12:25:51+00:00,2024-04-01 14:59:46+00:00,2024-04-01 14:59:46+00:00,2.5652777777777778,APPROVED,2,4,36,36,This PR was opened auto-magically by Crowdin.,45,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,refactor(client): migrate donation modal,54264,2024-04-01 08:45:10+00:00,2024-04-03 04:24:07+00:00,2024-04-03 04:24:07+00:00,43.649166666666666,APPROVED,3,6,42,32,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nThis PR:\n\nAdds borderless prop to the Modal component, in order to display the donation modal properly\nMigrates the donation modal to ui-components\nIs related to #52759\n\nScreenshots\nThe PR includes some CSS cleanup, so I thought I should add some screenshots (to show that the display is unchanged).\n\n\n\nDesktop\nMobile",600,3,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,feat(client): fallback image for portfolio page,54262,2024-04-01 05:21:55+00:00,2024-04-09 08:40:11+00:00,2024-04-09 08:40:11+00:00,195.30444444444444,APPROVED,3,1,9,3,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nRelated to #49146",288,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix: removed view project buttons from Python cert projects,54261,2024-04-01 05:14:11+00:00,2024-04-03 16:16:08+00:00,2024-04-03 16:16:08+00:00,59.0325,APPROVED,2,2,2,3,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #53929\n\nProblem\nClicking the ""View Project"" button for a multifile Python cert project resulted in a blank page\n\n  \n    \n    \n\n    Screen.Recording.2024-04-01.at.1.10.09.AM.mov\n    \n  \n\n  \n\n  \n\n\nSolution\nRemoved view project button from multifile Python cert projects\n\n  \n    \n    \n\n    Screen.Recording.2024-04-01.at.1.12.16.AM.mov",635,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,refactor(curriculum): flesh out object lessons in RPG game,54258,2024-03-31 18:34:51+00:00,2024-04-05 14:25:21+00:00,2024-04-05 14:25:21+00:00,115.84166666666667,APPROVED,2,129,1430,401,"Summary of changes\nThere was a lot of confusion on the forum about objects when it comes to bracket and dot notation. Also objects play an important role in this curriculum. So I added some more steps to flesh out the introduction to objects so campers will have more practice as well as  better understand bracket vs dot notation.\nChecklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.",599,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,"refactor(curriculum): expand split, reverse and join method lessons for date formatter project",54256,2024-03-30 19:11:01+00:00,2024-04-05 16:18:32+00:00,2024-04-05 16:18:32+00:00,141.12527777777777,APPROVED,6,13,1389,34,"Summary\nThe split method as well as the join methods are used a lot in later projects. But the current explanation was a little shallow. This PR adds a couple of steps to the date formatter to further break down the split method and how it works as well as the reverse and join methods. This way campers will have a better understanding and be able to use it better in future projects.\nChecklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.",653,3,0
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,fix(curriculum): typo on step61 of sudoku solver project,54254,2024-03-29 20:44:40+00:00,2024-03-29 23:32:03+00:00,,2.789722222222222,REVIEW_REQUIRED,0,1,1,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54253\nFixed the typo on Step 61 of Sudoku Solver project in Scientific Computing with Python (Beta) cert from ""withing"" to ""within"".",412,2,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(curriculum): typo on step 61,54253,2024-03-29 20:35:42+00:00,2024-03-29 23:30:18+00:00,2024-03-29 23:30:18+00:00,2.91,APPROVED,2,1,1,1,"Typo on Step 61 of Sudoku Solver project\nChecklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54250",326,3,0
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,fix(docs): Grammatical error correction,54252,2024-03-29 20:26:35+00:00,2024-03-29 20:29:31+00:00,,0.04888888888888889,REVIEW_REQUIRED,0,1,1,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54247\n\nMinor change in the text description to correct the error related to usage of article in English",384,2,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(curriculum): grammatical error correction,54251,2024-03-29 19:25:29+00:00,2024-03-29 20:27:52+00:00,2024-03-29 20:27:52+00:00,1.0397222222222222,APPROVED,2,1,1,1,"Checklist:\n\n[ X] I have read and followed the contribution guidelines.\n[ X] I have read and followed the how to open a pull request guide.\n[X ] My pull request targets the main branch of freeCodeCamp.\n[X ] I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54247",298,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(tools): correct file name,54249,2024-03-29 17:00:57+00:00,2024-03-29 17:58:43+00:00,2024-03-29 17:58:43+00:00,0.9627777777777777,APPROVED,2,1,1,1,"I'm dumb :3\nChecklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",297,3,0
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,Update move-bf.sh,54242,2024-03-28 12:22:35+00:00,2024-03-28 12:31:45+00:00,,0.1527777777777778,REVIEW_REQUIRED,0,1,1,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",284,2,1
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,Update auth.ts,54239,2024-03-28 10:06:23+00:00,2024-03-28 10:12:32+00:00,,0.1025,REVIEW_REQUIRED,0,1,1,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",284,2,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix: add correct freeCodeCamp banner in README,54238,2024-03-28 08:31:42+00:00,2024-03-28 09:20:04+00:00,2024-03-28 09:20:04+00:00,0.8061111111111111,REVIEW_REQUIRED,1,1,1,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",284,2,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(a11y): hide GreenPass icon of donation modal from a11y tree,54237,2024-03-28 05:41:39+00:00,2024-03-28 07:26:29+00:00,2024-03-28 07:26:29+00:00,1.7472222222222222,APPROVED,2,1,3,3,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nThe donation modal uses the GreenPass icon in its content:\n\nIt seems to me the icon is used only for decorative purposes, so it should be removed from the accessibility tree to reduce noise. The icon label is ""Passed"", so having it announced to the users could also confuse them.",552,3,0
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,chore(deps): bump sanitize-html from 2.11.0 to 2.12.1,54236,2024-03-27 22:31:31+00:00,2024-03-27 22:33:57+00:00,,0.04055555555555555,REVIEW_REQUIRED,0,2,132,250,"Bumps sanitize-html from 2.11.0 to 2.12.1.\n\nChangelog\nCommits\n\n\nupdated-dependencies:\n\ndependency-name: sanitize-html dependency-type: direct:production ...\n\nChecklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",452,1,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(curriculum): clarify registration-form name instructions,54235,2024-03-27 19:12:05+00:00,2024-03-28 04:00:22+00:00,2024-03-28 04:00:22+00:00,8.804722222222223,APPROVED,2,1,1,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nClarifies the instructions so Campers do not think they should remove the name attributes/values from the radio inputs.",390,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,chore: update curriculum-helpers to v3.2.0,54233,2024-03-27 17:09:19+00:00,2024-04-01 10:10:48+00:00,2024-04-01 10:10:48+00:00,113.02472222222222,APPROVED,2,2,13,31,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",284,3,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,refactor(curriculum): update calorie counter project steps 1 - 37,54231,2024-03-27 12:49:26+00:00,2024-04-08 15:11:19+00:00,2024-04-08 15:11:19+00:00,290.3647222222222,APPROVED,6,85,740,334,"Summary of changes\nThis PR is responsible for applying the feedback received for the calorie counter project. Overall, the current project is to hard for campers. This is one of a few PR's that breaks down the steps a little bit more and test the functions more so campers have a better understanding of what is going on and they can see the changes for themselves.\nlist of changes\n\nproviding more context in why certain changes are being made\nproviding more context behind the calorie counter and what the specific features are about\nprovide the campers the ability to test out the cleanInputString so they can understand what is going on better\nremoves the current steps 19-22. These steps, especially step 22, comes up a lot in the forums and discord. And even the analytics show that people are spending a lot of time with these steps. Simply put, there is just to much going on in these steps and it is later refactored to use regex instead in step 23. So I removed these steps and the split method will be taught in the date formatter project.\nadding tests for isInvalidInput so campers can see what happens\n\nChecklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.",1390,4,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,"chore(i18n,client): processed translations",54230,2024-03-27 12:25:42+00:00,2024-03-27 15:52:18+00:00,2024-03-27 15:52:17+00:00,3.4433333333333334,APPROVED,2,13,118,63,This PR was opened auto-magically by Crowdin.,45,3,0
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,checking,54229,2024-03-27 11:12:23+00:00,2024-03-27 11:19:47+00:00,,0.12333333333333334,REVIEW_REQUIRED,0,1,17,0,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",284,2,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(curriculum): improved instructions for better understanding of function call,54228,2024-03-27 07:56:50+00:00,2024-03-27 14:39:31+00:00,2024-03-27 14:39:31+00:00,6.711388888888889,APPROVED,2,1,3,1,"Made the instruction for STEP 61 more clear, about how to make a function call with passing an argument.\nChecklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54219\n\nThe issue:\nStep 61 states that you need to pass location argument to the update() function, some users might make a mistake as location is the name of parameter in update(), locations` is the argument name.\nSo they might use:\nfunction goTown() {\nupdate(location);\n}\nSolution:\nCurrent =>\n\nUpdated=>",700,3,2
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,typo or misleading instructions,54227,2024-03-27 04:59:23+00:00,2024-03-27 05:57:14+00:00,,0.9641666666666666,REVIEW_REQUIRED,0,1,3,1,"Checklist:\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\nCloses #54219",280,2,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(curriculum) : clarify description on step 47 of password generator project,54225,2024-03-26 20:30:03+00:00,2024-03-28 09:14:21+00:00,2024-03-28 09:14:21+00:00,36.73833333333334,APPROVED,3,1,1,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54157",284,4,0
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,fix(curriculum): improved instructions for better clarity between argument and paramenter name,54223,2024-03-26 16:08:03+00:00,2024-03-26 17:42:09+00:00,,1.5683333333333334,REVIEW_REQUIRED,0,1,1,1,"Made the instruction for STEP 61 more clear, for better understanding between locations as an argument and location as an parameter.\nChecklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54219\n\nThe issue:\nStep 61 states that you need to pass location argument to the update() function, some users might make a mistake as location is the name of parameter in update(), locations` is the argument name.\nSo they might use:\nfunction goTown() {\nupdate(location);\n}\nSolution:\nCurrent => You now need to pass the location argument into the update call. You pass arguments by including them within the parentheses of the function call.\nChange=> You now need to pass the locations array as an argument into the location parameter of update function call. You pass arguments by including them within the parentheses of the function call.",1063,2,1
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,feat: implementing new design for profile page (step 01),54222,2024-03-26 14:01:44+00:00,2024-03-27 07:56:09+00:00,,17.906944444444445,REVIEW_REQUIRED,0,4,28,15,"Checklist:\nit is only the first step of the big redesign of profile page task\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nrelated to #48234",356,3,6
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(api): use port 27017,54220,2024-03-26 10:17:39+00:00,2024-04-03 00:07:02+00:00,2024-04-03 00:07:02+00:00,181.82305555555556,APPROVED,3,2,1,8,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nThere is no reason to use a different port. Using a non-default port:\n\nRequires specific config to use mongosh/compass\nCatches me off-guard every time I switch context between old api and new api.",470,4,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(api): update backend project validation,54218,2024-03-26 09:15:42+00:00,2024-03-28 09:54:30+00:00,2024-03-28 09:54:30+00:00,48.64666666666667,APPROVED,4,3,58,6,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #53690",284,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(client): skip to content button overlapping the nav,54217,2024-03-26 09:12:32+00:00,2024-03-29 13:13:33+00:00,2024-03-29 13:13:33+00:00,76.01694444444445,APPROVED,7,1,1,2,"Checklist:\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\nUpdated 'left' position related to 'skip-to-content' button as stated in 54194 comments. Moreover I added a 'top' property in order to avoid button's outline to overlap freecodecamp header.\nThe result is as it follows:\nwidth >= 980px:\n\nwidth < 980px:",521,3,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(curriculum): Typo in Links and Images lessons,54216,2024-03-26 08:33:18+00:00,2024-03-26 18:04:23+00:00,2024-03-26 18:04:23+00:00,9.518055555555556,APPROVED,2,2,2,2,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54214",284,3,1
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,fix: false-postive lint error,54215,2024-03-26 07:27:35+00:00,2024-03-26 07:42:40+00:00,,0.2513888888888889,REVIEW_REQUIRED,0,1,3,3,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",284,1,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,chore(curriculum): add quotes to strings in JS number sorter,54212,2024-03-26 03:15:48+00:00,2024-03-27 10:35:09+00:00,2024-03-27 10:35:09+00:00,31.3225,APPROVED,2,6,10,10,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX\n\nThis PR relates to issue #51036\nSpecifically, it relates to the ""JavaScript Algorithms and Data Structures (Beta) --> Learn Basic Algorithmic Thinking by Building a Number Sorter"" curriculum\nThis PR makes changes to the following steps: 1, 4, 5, 26, 27, 33\n\nSteps 1, 4, 5: quotation marks added to clarify for campers that these are strings\nSteps 26, 27, 33: instructions slightly modified to clarify for campers that what is being referred to are the values stored at certain array positions (e.g. array[i], array[j], etc.), rather than the values stored in variables (e.g. i, j, etc.) that are being used to keep track of array indexes for the given sorting algorithm.",963,4,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(curriculum): clarify random property,54211,2024-03-26 00:52:56+00:00,2024-03-26 22:40:07+00:00,2024-03-26 22:40:07+00:00,21.78638888888889,APPROVED,4,1,1,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54040",284,5,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(UI): skip button outline visibility,54210,2024-03-25 20:44:50+00:00,2024-03-26 10:04:34+00:00,2024-03-26 10:04:34+00:00,13.328888888888889,APPROVED,3,1,10,2,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54194\n\nGreater than 980px\n\nLess than 980px",325,4,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,feat: make c# chinese live,54209,2024-03-25 17:27:43+00:00,2024-03-26 04:10:16+00:00,2024-03-26 04:10:16+00:00,10.709166666666667,APPROVED,2,1,0,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",284,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix: manually overwrite execute-brain.md,54208,2024-03-25 16:09:33+00:00,2024-03-25 17:55:25+00:00,2024-03-25 17:55:25+00:00,1.7644444444444445,APPROVED,2,2,16,0,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",284,3,4
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,Modifying skip content,54207,2024-03-25 15:31:30+00:00,2024-03-26 05:24:41+00:00,,13.886388888888888,REVIEW_REQUIRED,0,1,10,2,"Checklist:\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\nFix #54194\nI made a pull request based on this issue saying that skip content button is not aligned correctly missing outline it stick to edges of screen so i moved it a little from left its border not showing because page navbar covering it they overlap each other so i moved from top a little bit",564,3,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,"fix(client): Update misspelled word ""backgrounds""",54206,2024-03-25 14:19:31+00:00,2024-03-25 14:57:14+00:00,2024-03-25 14:57:14+00:00,0.6286111111111111,APPROVED,2,1,1,1,"Fixed ""backgrouns"" into ""backgrounds""\nChecklist:\n\n[x ] I have read and followed the contribution guidelines.\n[x ] I have read and followed the how to open a pull request guide.\n[ x] My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\nCloses #54204",331,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix: a href to an href,54205,2024-03-25 14:08:25+00:00,2024-03-26 10:02:35+00:00,2024-03-26 10:02:35+00:00,19.90277777777778,APPROVED,3,8,23,14,"Checklist:\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\nCloses: #54188",281,4,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,"chore(i18n,client): processed translations",54203,2024-03-25 12:25:29+00:00,2024-03-25 13:25:53+00:00,2024-03-25 13:25:53+00:00,1.0066666666666666,APPROVED,3,22,176,44,This PR was opened auto-magically by Crowdin.,45,3,0
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,"fix: ""a href"" to ""an href""",54202,2024-03-25 12:23:54+00:00,2024-03-25 13:45:38+00:00,,1.3622222222222222,REVIEW_REQUIRED,0,8,14,14,"Checklist:\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\nCloses #54188",280,1,0
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,feat(client): fallback image for portfolio page,54199,2024-03-25 00:01:58+00:00,2024-03-28 03:59:09+00:00,,75.95305555555555,REVIEW_REQUIRED,0,1,1,3,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #49146\n\nI could not access the portfolio page using GitPod, however I tested the code.",366,3,2
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,fix(curriculum): Typo in Step 8,54198,2024-03-24 18:41:06+00:00,2024-03-25 08:30:35+00:00,,13.824722222222222,REVIEW_REQUIRED,1,1,1,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nStep 8 of the responsive-web-design/learn-accessibility-by-building-a-quiz/ course had a typo which originally said:\n\nIn the example img {width: max(250px, 25vw);} img elements will have a minimum width of 250px.\n\nI believe that it was meant to say that the maximum width would be set at 250px instead. If i'm incorrect please close the PR without merging - I'm still learning and may be totally misunderstanding the concepts!\nThank you team!",718,3,2
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,"fix(curriculum): merge sort algorithm tests steps - 12,13,29",54196,2024-03-24 11:14:03+00:00,2024-04-08 10:04:55+00:00,2024-04-08 10:04:55+00:00,358.84777777777776,APPROVED,6,3,8,16,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nRelated to #53139\n\nNow the tests check if pass statement is properly removed as dictated by instructions, previously the tests would pass even if pass statement remains in the code",453,5,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,feat(curriculum): Add play scene keyboard shortcut,54195,2024-03-24 10:11:13+00:00,2024-04-04 13:38:43+00:00,2024-04-04 13:38:43+00:00,267.4583333333333,APPROVED,4,7,89,13,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #52696\n\nAdds ""ctrl + space"" keyboard shortcut for playing scene as suggested in #52696 (comment)\nAlso updates the shortcut modal with the new shortcut info\n\n Screenshot attached",460,5,5
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,Update alert.stories.tsx,54193,2024-03-24 00:09:52+00:00,2024-03-24 06:41:24+00:00,,6.525555555555556,REVIEW_REQUIRED,0,1,2,6,"I want to commit these changes\nChecklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX\n\nI want to commit these changes",350,2,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(api): add msUsername index to prisma,54187,2024-03-22 14:08:20+00:00,2024-04-02 16:15:01+00:00,2024-04-02 16:15:01+00:00,266.1113888888889,APPROVED,2,1,1,0,"I added this index to the production database so we can query msUsernames to help troubleshoot when users are having issues.\nChecklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",410,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,feat: change ad.txt to admanager,54186,2024-03-22 12:41:33+00:00,2024-03-28 08:29:21+00:00,2024-03-28 08:29:21+00:00,139.79666666666665,APPROVED,3,1,2,1,"This pr add the ad manager info the ad.txt\nChecklist:\n\n\n I have read freeCodeCamp's contribution guidelines.\n My pull request has a descriptive title (not a vague title like Update index.md)\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",344,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,changed short name to dashed name,54184,2024-03-22 12:18:38+00:00,2024-03-22 13:46:24+00:00,2024-03-22 13:46:24+00:00,1.4627777777777777,APPROVED,2,2,4,4,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX\n\nWe don't use short names, considering that our short names are for example learn-encapsulation-by-building-a-projectile-trajectory-calculator, it makes more sense to call them dashed names",476,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(api-server): fallback to username for cert,54183,2024-03-22 09:58:49+00:00,2024-04-03 01:21:04+00:00,2024-04-03 01:21:04+00:00,279.37083333333334,APPROVED,3,1,3,1,"Allow fallback to username, if no name is set AND name is private\nThe reasoning for this as opposed to ALWAYS falling back to the username is there is an assumption when Campers set their name to public, they expect it on their certifications.\nChecklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #41040",530,3,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,chore: update curriculum-helpers to v3.1.0,54181,2024-03-22 09:40:36+00:00,2024-03-22 11:05:03+00:00,2024-03-22 11:05:03+00:00,1.4075,APPROVED,2,2,68,48,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX",284,3,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,feat: migrate challenge modals,54179,2024-03-22 08:17:22+00:00,2024-04-03 12:28:13+00:00,2024-04-03 12:28:13+00:00,292.18083333333334,APPROVED,4,22,266,304,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nref #52759",281,3,1
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,fix(e2e): use latest firefox at cy tests,54178,2024-03-22 07:58:23+00:00,2024-03-22 08:14:28+00:00,,0.26805555555555555,REVIEW_REQUIRED,0,1,0,8,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54175",284,2,1
freeCodeCamp/freeCodeCamp,386773,35787,CLOSED,feat(curriculum): altered step 92 of Cipher project to additionally introduce python string quotation rules,54177,2024-03-22 07:56:30+00:00,2024-03-28 09:15:15+00:00,,145.3125,REVIEW_REQUIRED,0,4,33,8,"feat(curriculum): altered step 92 of Cipher project to additionally introduce python string quotation rules\nChecklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #53542\n\nAffected Pages\n\nhttps://www.freecodecamp.org/learn/scientific-computing-with-python/learn-string-manipulation-by-building-a-cipher/step-92\nhttps://www.freecodecamp.org/learn/scientific-computing-with-python/learn-string-manipulation-by-building-a-cipher/step-93\nhttps://www.freecodecamp.org/learn/scientific-computing-with-python/learn-string-manipulation-by-building-a-cipher/step-94\nhttps://www.freecodecamp.org/learn/scientific-computing-with-python/learn-string-manipulation-by-building-a-cipher/step-95\n\nReason for PR\nAs mentioned in #53542, it would be a good idea to introduce the concept of combining single and/or double quotes in a string without escape characters in Python to campers.\nThis concept is important since, as stated in the issue report, the PEP-8 style guide, advises against escaping quotations.\nConsensus seems to be that Step 92 of the Cipher project, which introduces escaping but only with the newline character \n, would be a good place to introduce the concept.\nPR Description\nAs the issue remains open, I came up with a pull request that revises Step 92 to include:\n\nthe concept of using quotes within strings without escape characters\nan additional criteria to the step which asks the camper to surround text within an fstring with double quotes.\n\nI have revised mainly this step including the description, hints, tests, and solution, although Steps 93, 94, and 95 I have also briefly edited to account for the new solution of the question.\nTesting\nI tested locally at the challenge, block, and superblock level with:\n\nFCC_CHALLENGE_ID=6555e43e783ed31a0532b1b2 pnpm run test:curriculum\nFCC_BLOCK='Learn String Manipulation by Building a Cipher' pnpm run test:curriculum\nFCC_SUPERBLOCK='scientific-computing-with-python' pnpm run test:curriculum\n\nAll tests passed.\nSystem\nDevice: Macbook Pro\nOS: Ventura 13.1\nBrowser: Chrome\nVersion: 122.0.6261.111 (Official Build) (x86_64)\nIf this pull request is not what freeCodeCamp is looking for, I am still interested in this issue and would be more than happy to adjust my PR as needed or start working in a different direction. I will continue to monitor #53542 and this PR closely. Feedback is greatly appreciated on the content and wording of my PR code and description!",2675,3,2
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,refactor(client): migrate C# modals,54176,2024-03-22 06:35:50+00:00,2024-04-03 13:01:50+00:00,2024-04-03 13:01:50+00:00,294.43333333333334,APPROVED,3,11,74,65,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nNote: #54112 should go in before this one.\nThis PR migrates the following modals to ui-components:\n\nexit-exam-modal.tsx\nfinish-exam-modal.tsx\nfoundational-c-sharp-survey.tsx\nsurvey-modal.tsx\n\nRelated to #52759.\nNote: I have to rely on Cypress for the foundational-c-sharp-survey.tsx tests. We don't have a corresponding set of tests in Playwright, and writing the tests is currently not possible due to the inability to re-seed the user data via Node commands within the tests (see #52905).",770,4,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,chore(curriculum) add quotes to strings intermediate OOP,54174,2024-03-22 02:56:49+00:00,2024-04-02 13:40:10+00:00,2024-04-02 13:40:10+00:00,274.7225,APPROVED,4,14,45,31,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #XXXXX\n\nThis PR relates to issue #51036\nThe curriculum in question is: JavaScript Algorithms and Data Structures (Beta): Learn Intermediate OOP by Building a Platformer Game\nI have made changes to the following steps: 11, 19, 20, 37, 39, 51, 54, 57, 60, 70, 98, 106, 108, 112\nStep 11: There was a typo ""the the browser screen""\nStep 19: Quotation marks added around the hex color code\nStep 20: Instructions changed slightly for clarity\nStep 37: Quotation marks added around the word ""block"" and ""none""\nStep 39: Test altered slightly by adding a negative lookahead in the regex so as to accept a reference to the startGame function but to not accept startGame being invoked with parentheses. I have tested this (and all the changes in this PR) in GitPod, but it would be worth reviewing this one closely to make sure the RegEx is ok.\nStep 51: Typo; the plural of 'axis' is 'axes'\nStep 54: Added backticks around ""ArrowLeft"" so that it displays consistently with other steps\nStep 57: Added clarification that "" "" has a space rather than being an empty string\nStep 60: Added backticks around the number 8 to be consistent with Step 62 where the number 0 was already surrounded by backticks\nStep 70: Added quotation marks around the hex color code\nStep 98: Added quotation marks around the hex color code; updated the tests for this step to have more incremental hints\nStep 106: Added quotation marks around ""block"" and made slight change to instructions for clarity\nStep 108: Added quotation marks around ""none""\nStep 112: Added a comma in the 'seed' JS so that campers don't have to make changes to the code outside of the 'editable region'; updated the tests to accept either ""checkpoints[index - 1].claimed === true"" OR ""checkpoints[index - 1].claimed"" since .claimed references a boolean. This may or may not be a desirable change. This should be looked at.",2152,5,2
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(curriculum): set isUpcomingChange to false in meta.json files for Part 3 of the English Curriculum,54173,2024-03-22 00:07:34+00:00,2024-03-22 19:38:15+00:00,2024-03-22 19:38:15+00:00,19.511388888888888,APPROVED,2,4,4,3,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.",265,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(api): double signing test,54171,2024-03-21 17:24:30+00:00,2024-03-26 09:11:34+00:00,2024-03-26 09:11:34+00:00,111.78444444444445,APPROVED,2,1,15,14,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nThere was a hidden race in the test, since signing a jwt includes adding an iat claim and that varies over time. This fixes that by only checking that the cookie was signed twice (rather than what its value is). That's all this test is interested in.\nFailing job: https://github.com/freeCodeCamp/freeCodeCamp/actions/runs/8377297075/job/22939681753",620,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(curriculum): test for strict order in step 25 oop project,54170,2024-03-21 17:04:44+00:00,2024-04-01 15:38:19+00:00,2024-04-01 15:38:19+00:00,262.5597222222222,APPROVED,2,1,1,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54159",284,4,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,test(e2e): migrate tags test to playwright,54167,2024-03-21 13:57:04+00:00,2024-04-05 15:50:46+00:00,2024-04-05 15:50:46+00:00,361.895,APPROVED,2,2,67,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nref: #51705",282,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,fix(ui-components): remove border width override from Tabs,54166,2024-03-21 12:08:06+00:00,2024-03-28 06:09:51+00:00,2024-03-28 06:09:51+00:00,162.02916666666667,APPROVED,2,1,1,1,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nCloses #54054",284,3,0
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,chore: upgrade deprecated Redux middleware,54164,2024-03-21 09:28:14+00:00,2024-04-04 06:36:24+00:00,2024-04-04 06:36:24+00:00,333.1361111111111,APPROVED,2,3,62,77,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\ncomposeWithDevToolsDevelopmentOnly is available if we only want this middleware to be available in the development environment. At the moment we are doing it manually.\nI am not planning on moving to this function as I do not know how it differs production from a development environment.",557,4,1
freeCodeCamp/freeCodeCamp,386773,35787,MERGED,feat(client): point claim cert links to corresponding sections on /settings,54163,2024-03-21 08:53:09+00:00,2024-04-03 05:56:34+00:00,2024-04-03 05:56:34+00:00,309.05694444444447,APPROVED,3,3,60,58,"Checklist:\n\n\n I have read and followed the contribution guidelines.\n I have read and followed the how to open a pull request guide.\n My pull request targets the main branch of freeCodeCamp.\n I have tested these changes either locally on my machine, or GitPod.\n\n\nOn the superblock page, we have link that takes the user to the Certifications section of the Settings page (/settings#certification-settings). Since the Certifications section is quite long, I reckon it would be more convenient for the users if we just take them to the section corresponding to the superblock instead.\n\n  Screen recording \n\n  \n    \n    \n\n    Screen.Recording.2024-03-21.at.21.24.35.mov",682,4,1
EbookFoundation/free-programming-books,318503,9861,CLOSED,Update README.md,11118,2024-04-08 19:11:31+00:00,2024-04-09 18:04:09+00:00,,22.877222222222223,,0,1,1,1,"What does this PR do?\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",630,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,chore(deps): bump eps1lon/actions-label-merge-conflict from 2.1.0 to 3.0.0,11113,2024-03-30 11:29:53+00:00,2024-04-01 19:44:25+00:00,2024-04-01 19:44:25+00:00,56.242222222222225,,4,1,1,1,"Bumps eps1lon/actions-label-merge-conflict from 2.1.0 to 3.0.0.\n\nRelease notes\nSourced from eps1lon/actions-label-merge-conflict's releases.\n\nv3.0.0\nWhat's Changed\n\nUpdate to node20 (#115)\n\nFull Changelog: eps1lon/actions-label-merge-conflict@v2.1.0...v3.0.0\n\n\n\nChangelog\nSourced from eps1lon/actions-label-merge-conflict's changelog.\n\n3.0.0\n\nUpdate to node20 (#115)\n\n\n\n\nCommits\n\ne62d7a5 release: 3.0.0 (#118)\n5a5acb5 chore(deps): update dependency prettier to v3 (#108)\n570a76f chore(deps): update dependency typescript to v5 (#105)\ne7cc22f chore(deps): update dependency @​actions/github to v6 (#112)\n951c5d3 chore(deps): update dependency typescript to v4.9.5 (#76)\n7f23fe4 chore(deps): update dependency @​actions/core to v1.10.1 (#109)\nfd178c8 chore: Remove debug-action from CI (#117)\n4a9388e Replace 'zeit/ncc' with 'vercel/ncc' (#116)\nf18b7c4 Update Node.js to 20 (#115)\n1bfc81f chore(deps): update dependency prettier to v2.8.8 (#106)\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",2488,3,0
EbookFoundation/free-programming-books,318503,9861,MERGED,chore(deps): bump tj-actions/changed-files from 43.0.0 to 44.0.0,11112,2024-03-30 11:29:49+00:00,2024-04-01 19:49:13+00:00,2024-04-01 19:49:13+00:00,56.32333333333333,,1,1,1,1,"Bumps tj-actions/changed-files from 43.0.0 to 44.0.0.\n\nRelease notes\nSourced from tj-actions/changed-files's releases.\n\nv44.0.0\n🔥🔥 BREAKING CHANGE 🔥🔥\nOverview\nWe've made a significant update to how pull requests (PRs) from forked repositories are processed. This improvement not only streamlines the handling of such PRs but also fixes a previously identified issue.\nBefore the Change\nPreviously, when you created a pull request from a forked repository, any files changed in the target branch after the PR creation would erroneously appear as part of the PR's changed files. This made it difficult to distinguish between the actual changes introduced by the PR and subsequent changes made directly to the target branch.\nWhat Has Changed\nWith this update, a pull request from a fork will now only include the files that were explicitly changed in the fork. This ensures that the list of changed files in a PR accurately reflects the contributions from the fork, without being muddled by unrelated changes to the target branch.\n\nWhat's Changed\n\nUpgraded to v43.0.1 by @​tj-actions-bot in tj-actions/changed-files#2004\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#2005\nchore(deps): update typescript-eslint monorepo to v7.4.0 by @​renovate in tj-actions/changed-files#2006\nfix: bug with prs from forks returning incorrect set of changed files by @​jackton1 in tj-actions/changed-files#2007\nfix: check for setting remote urls for forks by @​jackton1 in tj-actions/changed-files#2009\nfix: update to add the fork remote by @​jackton1 in tj-actions/changed-files#2010\nfix: update previous sha for forks by @​jackton1 in tj-actions/changed-files#2011\nfix: ensure the fork remote doesn't exists before creating it by @​jackton1 in tj-actions/changed-files#2012\nchore: update description of other_deleted_files output by @​tonyejack1 in tj-actions/changed-files#2008\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#2013\nremove: unused code by @​jackton1 in tj-actions/changed-files#2014\nchore: update description of outputs removing asterisks  by @​tonyejack1 in tj-actions/changed-files#2015\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#2016\n\nNew Contributors\n\n@​tonyejack1 made their first contribution in tj-actions/changed-files#2008\n\nFull Changelog: tj-actions/changed-files@v43.0.1...v44.0.0\nv43.0.1\nWhat's Changed\n\nUpgraded to v43 by @​tj-actions-bot in tj-actions/changed-files#1990\nchore(deps): update dependency @​types/node to v20.11.28 by @​renovate in tj-actions/changed-files#1991\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1992\nchore(deps): update typescript-eslint monorepo to v7.3.0 by @​renovate in tj-actions/changed-files#1993\nchore(deps): update dependency @​types/node to v20.11.29 by @​renovate in tj-actions/changed-files#1994\nBump @​typescript-eslint/parser from 7.3.0 to 7.3.1 by @​dependabot in tj-actions/changed-files#1996\nchore(deps): update dependency @​typescript-eslint/eslint-plugin to v7.3.1 by @​renovate in tj-actions/changed-files#1997\nBump @​typescript-eslint/eslint-plugin from 7.3.0 to 7.3.1 by @​dependabot in tj-actions/changed-files#1995\nchore(deps): update dependency @​types/node to v20.11.30 by @​renovate in tj-actions/changed-files#1998\nchore: update inputs.ts adding comment about fetch_depth by @​jackton1 in tj-actions/changed-files#2000\nfix: remove warning with detecting the local git repository when using Github's REST API by @​jackton1 in tj-actions/changed-files#2002\nchore(deps): update dependency typescript to v5.4.3 by @​renovate in tj-actions/changed-files#2003\n\n\n\n... (truncated)\n\n\nChangelog\nSourced from tj-actions/changed-files's changelog.\n\n44.0.0 - (2024-03-27)\n🐛 Bug Fixes\n\nEnsure the fork remote doesn't exists before creating it (#2012) (4bbd49b)  - (Tonye Jack)\nUpdate previos sha for forks (#2011) (f0e7702)  - (Tonye Jack)\nUpdate to add the fork remote (#2010) (6354e6c)  - (Tonye Jack)\nCheck for setting remote urls for forks (#2009) (1176164)  - (Tonye Jack)\nBug with prs from forks returning incorrect set of changed files (#2007) (4ff7936)  - (Tonye Jack)\n\n➖ Remove\n\nUnused code (#2014) (90941b3)  - (Tonye Jack)\n\n🔄 Update\n\nUpdated README.md (#2016)\n\nCo-authored-by: jackton1 17484350+jackton1@users.noreply.github.com (2d756ea)  - (tj-actions[bot])\n\nUpdate README.md (2d21bbb)  - (Tonye Jack)\nUpdated README.md (#2013)\n\nCo-authored-by: jackton1 17484350+jackton1@users.noreply.github.com (2ca8dc4)  - (tj-actions[bot])\n\nUpdate README.md (4621617)  - (tonyejack1)\nUpdate README.md (c6557ed)  - (Tonye Jack)\nUpdate README.md (0713a11)  - (Tonye Jack)\n\n⚙️ Miscellaneous Tasks\n\nUpdate description of outputs removing asterisks (#2015) (ce497c3)  - (tonyejack1)\nUpdate description of other_deleted_files output (#2008) (ee096d6)  - (tonyejack1)\ndeps: Update typescript-eslint monorepo to v7.4.0 (0647424)  - (renovate[bot])\ndeps: Lock file maintenance (efe5e6c)  - (renovate[bot])\n\n⬆️ Upgrades\n\nUpgraded to v43.0.1 (#2004)\n\nCo-authored-by: jackton1 17484350+jackton1@users.noreply.github.com (01e9662)  - (tj-actions[bot])\n43.0.1 - (2024-03-20)\n🐛 Bug Fixes\n\nRemove warning with detecting the local git repository when using Github's REST API (#2002) (077b23f)  - (Tonye Jack)\n\n📦 Bumps\n\nBump @​typescript-eslint/eslint-plugin from 7.3.0 to 7.3.1 (#1995)\n\n\n\n... (truncated)\n\n\nCommits\n\n2d756ea Updated README.md (#2016)\nce497c3 chore: update description of outputs removing asterisks (#2015)\n2d21bbb Update README.md\n90941b3 remove: unused code (#2014)\n2ca8dc4 Updated README.md (#2013)\nee096d6 chore: update description of other_deleted_files output (#2008)\n4621617 Update README.md\n4bbd49b fix: ensure the fork remote doesn't exists before creating it (#2012)\nc6557ed Update README.md\nf0e7702 fix: update previos sha for forks (#2011)\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",7437,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,Add authors and translators (free-programming-books-ko.md),11109,2024-03-26 13:12:10+00:00,2024-03-26 19:23:52+00:00,2024-03-26 19:23:52+00:00,6.195,,0,1,2,2,"What does this PR do?\nAdd info\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",576,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,Update free-programming-books-et.md (one LaTex book),11108,2024-03-26 12:59:14+00:00,2024-03-26 19:22:57+00:00,2024-03-26 19:22:57+00:00,6.395277777777777,,0,1,6,0,"What does this PR do?\nAdd resource(s)\nFor resources\nDescription\nEstonian translation of ""The Not So Short Introduction to LaTeX""\nWhy is this valuable (or not)?\nLaTex is useful and already exists in other language md.\nHow do we know it's really free?\nBooks under the GNU license\nFor book lists, is it a book? For course lists, is it a course? etc.\nIt a book.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",748,2,2
EbookFoundation/free-programming-books,318503,9861,CLOSED,chore(deps): bump tj-actions/changed-files from 43.0.0 to 43.0.1,11105,2024-03-23 11:47:46+00:00,2024-03-30 11:29:53+00:00,,167.70194444444445,,1,1,1,1,"Bumps tj-actions/changed-files from 43.0.0 to 43.0.1.\n\nRelease notes\nSourced from tj-actions/changed-files's releases.\n\nv43.0.1\nWhat's Changed\n\nUpgraded to v43 by @​tj-actions-bot in tj-actions/changed-files#1990\nchore(deps): update dependency @​types/node to v20.11.28 by @​renovate in tj-actions/changed-files#1991\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1992\nchore(deps): update typescript-eslint monorepo to v7.3.0 by @​renovate in tj-actions/changed-files#1993\nchore(deps): update dependency @​types/node to v20.11.29 by @​renovate in tj-actions/changed-files#1994\nBump @​typescript-eslint/parser from 7.3.0 to 7.3.1 by @​dependabot in tj-actions/changed-files#1996\nchore(deps): update dependency @​typescript-eslint/eslint-plugin to v7.3.1 by @​renovate in tj-actions/changed-files#1997\nBump @​typescript-eslint/eslint-plugin from 7.3.0 to 7.3.1 by @​dependabot in tj-actions/changed-files#1995\nchore(deps): update dependency @​types/node to v20.11.30 by @​renovate in tj-actions/changed-files#1998\nchore: update inputs.ts adding comment about fetch_depth by @​jackton1 in tj-actions/changed-files#2000\nfix: remove warning with detecting the local git repository when using Github's REST API by @​jackton1 in tj-actions/changed-files#2002\nchore(deps): update dependency typescript to v5.4.3 by @​renovate in tj-actions/changed-files#2003\n\nFull Changelog: tj-actions/changed-files@v43...v43.0.1\n\n\n\nChangelog\nSourced from tj-actions/changed-files's changelog.\n\n43.0.1 - (2024-03-20)\n🐛 Bug Fixes\n\nRemove warning with detecting the local git repository when using Github's REST API (#2002) (077b23f)  - (Tonye Jack)\n\n📦 Bumps\n\nBump @​typescript-eslint/eslint-plugin from 7.3.0 to 7.3.1 (#1995)\n\nSigned-off-by: dependabot[bot] support@github.com\nCo-authored-by: dependabot[bot] \nCo-authored-by: repo-ranger[bot]  (5c6aa49)  - (dependabot[bot])\n\nBump @​typescript-eslint/parser from 7.3.0 to 7.3.1 (#1996)\n\nSigned-off-by: dependabot[bot] support@github.com\nCo-authored-by: dependabot[bot]  (0320702)  - (dependabot[bot])\n🔄 Update\n\nUpdate README.md (2859a60)  - (Tonye Jack)\n\n⚙️ Miscellaneous Tasks\n\ndeps: Update dependency typescript to v5.4.3 (20576b4)  - (renovate[bot])\nUpdate inputs.ts adding comment about fetch_depth (#2000) (0276805)  - (Tonye Jack)\ndeps: Update dependency @​types/node to v20.11.30 (427adf4)  - (renovate[bot])\ndeps: Update dependency @​typescript-eslint/eslint-plugin to v7.3.1 (aa0b62a)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.11.29 (3890368)  - (renovate[bot])\ndeps: Update typescript-eslint monorepo to v7.3.0 (98a74d2)  - (renovate[bot])\ndeps: Lock file maintenance (068000d)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.11.28 (490ac39)  - (renovate[bot])\n\n⬆️ Upgrades\n\nUpgraded to v43 (#1990)\n\nCo-authored-by: jackton1 17484350+jackton1@users.noreply.github.com (d03038e)  - (tj-actions[bot])\n\n\n\nCommits\n\n20576b4 chore(deps): update dependency typescript to v5.4.3\n077b23f fix: remove warning with detecting the local git repository when using Github...\n0276805 chore: update inputs.ts adding comment about fetch_depth (#2000)\n427adf4 chore(deps): update dependency @​types/node to v20.11.30\n5c6aa49 Bump @​typescript-eslint/eslint-plugin from 7.3.0 to 7.3.1 (#1995)\naa0b62a chore(deps): update dependency @​typescript-eslint/eslint-plugin to v7.3.1\n0320702 Bump @​typescript-eslint/parser from 7.3.0 to 7.3.1 (#1996)\n3890368 chore(deps): update dependency @​types/node to v20.11.29\n98a74d2 chore(deps): update typescript-eslint monorepo to v7.3.0\n068000d chore(deps): lock file maintenance\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",5187,1,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Add new category and new (Ukraine courses),11104,2024-03-22 18:18:15+00:00,2024-03-24 21:49:22+00:00,2024-03-24 21:49:22+00:00,51.51861111111111,,0,1,6,0,"What does this PR do?\nAdd resource(s)\nFor resources\nDescription\nAdd new category and new course (Go)\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",621,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,Add new collection of Arabic Courses,11103,2024-03-19 18:40:13+00:00,2024-03-24 21:45:06+00:00,2024-03-24 21:45:06+00:00,123.0813888888889,,0,1,79,18,"What does this PR do?\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\nHi, It was a while since the last PR  :)\nhere are new Arabic courses\nFor resources\nDescription\n\nI create a new section called Cloud Computing and move AWS inside it\nI create a new section called Computer Science and move some courses from Algorithms & Data Structures to it\nCourses related with (CS In General, Fundamentals/introduction To Computers, How Computer Works, What we should know before leaning programming, ..etc.)\nI add new section called Nest.js\nAdd a lot of courses in different topic\n\nWhy is this valuable (or not)?\nN/A\nHow do we know it's really free?\nYouTube\nFor book lists, is it a book? For course lists, is it a course? etc.\ncourse lists\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",1142,2,4
EbookFoundation/free-programming-books,318503,9861,MERGED,chore(deps): bump tj-actions/changed-files from 42.0.4 to 43.0.0,11100,2024-03-16 11:21:07+00:00,2024-03-18 00:24:06+00:00,2024-03-18 00:24:06+00:00,37.04972222222222,,1,1,1,1,"Bumps tj-actions/changed-files from 42.0.4 to 43.0.0.\n\nRelease notes\nSourced from tj-actions/changed-files's releases.\n\nv43.0.0\n🔥🔥 BREAKING CHANGE 🔥🔥\n\nany_{changed, modified, deleted} outputs now return true when no file/directory patterns are specified.\n\nWhat's Changed\n\nUpgraded to v42.1.0 by @​tj-actions-bot in tj-actions/changed-files#1977\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1979\nchore(deps): update dependency @​typescript-eslint/parser to v7.2.0 by @​renovate in tj-actions/changed-files#1980\nchore(deps): update dependency @​types/node to v20.11.26 by @​renovate in tj-actions/changed-files#1981\nchore(deps): update dependency @​typescript-eslint/eslint-plugin to v7.2.0 by @​renovate in tj-actions/changed-files#1982\nchore(deps): update dependency @​types/lodash to v4.17.0 by @​renovate in tj-actions/changed-files#1983\nchore(deps): update peter-evans/create-pull-request action to v6.0.2 by @​renovate in tj-actions/changed-files#1984\nchore(deps): update dependency @​types/node to v20.11.27 by @​renovate in tj-actions/changed-files#1987\nfeat: add support for returning true for any_{changed, modified, deleted} outputs when no patterns are specified by @​jackton1 in tj-actions/changed-files#1988\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1989\n\nFull Changelog: tj-actions/changed-files@v42...v43.0.0\nv42.1.0\n🚀 🚀 New Feature 🚀 🚀\n\nUse changed-files output to run matrix jobs by simply setting the new matrix input to true.\n\nThis serves as an alias for setting the json input to true and the escape_json input to false\n      - name: Get changed files\n        id: changed-files\n        uses: tj-actions/changed-files@v42\n        with:\n           matrix: true\n\n[!NOTE]\n\nActivating this setting will automatically set json  to true and escape_json to false.  It is recommended for scenarios requiring these specific configurations.\n\n\nWhat's Changed\n\nUpgraded to v42.0.7 by @​tj-actions-bot in tj-actions/changed-files#1974\nfeat: add matrix alias to simplify using outputs for matrix jobs by @​jackton1 in tj-actions/changed-files#1975\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1976\n\nFull Changelog: tj-actions/changed-files@v42...v42.1.0\nv42.0.7\nWhat's Changed\n\nUpgraded to v42.0.6 by @​tj-actions-bot in tj-actions/changed-files#1968\nchore(deps): update dependency @​types/node to v20.11.25 by @​renovate in tj-actions/changed-files#1969\n\n\n\n... (truncated)\n\n\nChangelog\nSourced from tj-actions/changed-files's changelog.\n\n43.0.0 - (2024-03-13)\n🚀 Features\n\nAdd support for returning true for any_{changed, modified, deleted} outputs when no patterns are specified (#1988) (a5cf6aa)  - (Tonye Jack)\n\n🔄 Update\n\nUpdated README.md (#1989)\n\nCo-authored-by: repo-ranger[bot]  (77af4be)  - (tj-actions[bot])\n⚙️ Miscellaneous Tasks\n\ndeps: Update dependency @​types/node to v20.11.27 (15807c9)  - (renovate[bot])\ndeps: Update peter-evans/create-pull-request action to v6.0.2 (dc458cf)  - (renovate[bot])\ndeps: Update dependency @​types/lodash to v4.17.0 (92ca3ee)  - (renovate[bot])\ndeps: Update dependency @​typescript-eslint/eslint-plugin to v7.2.0 (f591d0c)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.11.26 (3502336)  - (renovate[bot])\ndeps: Update dependency @​typescript-eslint/parser to v7.2.0 (e436cb6)  - (renovate[bot])\ndeps: Lock file maintenance (257d47d)  - (renovate[bot])\n\n⬆️ Upgrades\n\nUpgraded to v42.1.0 (#1977)\n\nCo-authored-by: jackton1 17484350+jackton1@users.noreply.github.com (4918e11)  - (tj-actions[bot])\n42.1.0 - (2024-03-09)\n🚀 Features\n\nAdd matrix alias to simplify using outputs for matrix jobs (#1975) (008ba8c)  - (Tonye Jack)\n\n🔄 Update\n\nUpdated README.md (#1976)\n\nCo-authored-by: repo-ranger[bot]  (aa08304)  - (tj-actions[bot])\n⬆️ Upgrades\n\nUpgraded to v42.0.7 (#1974)\n\nCo-authored-by: jackton1 17484350+jackton1@users.noreply.github.com (fe6c3ea)  - (tj-actions[bot])\n42.0.7 - (2024-03-07)\n➕ Add\n\n\n... (truncated)\n\n\nCommits\n\n77af4be Updated README.md (#1989)\na5cf6aa feat: add support for returning true for any_{changed, modified, deleted} o...\n15807c9 chore(deps): update dependency @​types/node to v20.11.27\ndc458cf chore(deps): update peter-evans/create-pull-request action to v6.0.2\n92ca3ee chore(deps): update dependency @​types/lodash to v4.17.0\nf591d0c chore(deps): update dependency @​typescript-eslint/eslint-plugin to v7.2.0\n3502336 chore(deps): update dependency @​types/node to v20.11.26\ne436cb6 chore(deps): update dependency @​typescript-eslint/parser to v7.2.0\n257d47d chore(deps): lock file maintenance\n4918e11 Upgraded to v42.1.0 (#1977)\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",6223,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,Remove paid course.md,11099,2024-03-15 22:32:39+00:00,2024-03-16 20:34:48+00:00,2024-03-16 20:34:48+00:00,22.035833333333333,,0,1,0,1,"The course has become paid\nWhat does this PR do?\nRemove resource\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",611,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,Update free-programming-books-langs.md,11098,2024-03-14 09:16:20+00:00,2024-03-14 15:31:05+00:00,2024-03-14 15:31:05+00:00,6.245833333333334,,0,1,1,1,"The link give previous links to a closed-down site following two links you can get to the message that the data is now on the internet archive where you can then search for the book link provided points directly to the text\nWhat does this PR do?\nImprove repo by correcting a dead link\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n[x ] Read our contributing guidelines.\n[x ] Search for duplicates.\n[x ] Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",843,2,1
EbookFoundation/free-programming-books,318503,9861,CLOSED,Create ativado 2,11096,2024-03-12 13:40:32+00:00,2024-03-12 13:41:23+00:00,,0.014166666666666666,,0,1,1,0,"What does this PR do?\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-uphh\n\nCheck the status of GitHub Actions and resolve any reported warnings!",632,1,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Mark AngularJS as deprecated on free-programming-books-langs.md,11095,2024-03-10 18:14:29+00:00,2024-03-12 16:42:00+00:00,2024-03-12 16:42:00+00:00,46.45861111111111,,1,1,1,1,"Hello. Since AngularJS was deprecated in 2022, I think it should be marked so people who don't know much about Angular (like me), know that they should learn Angular 2 instead of deprecated and discontinued AngularJS.",217,2,1
EbookFoundation/free-programming-books,318503,9861,CLOSED,chore(deps): bump tj-actions/changed-files from 42.0.4 to 42.0.7,11093,2024-03-09 11:42:23+00:00,2024-03-16 11:21:10+00:00,,167.64638888888888,,0,1,1,1,"Bumps tj-actions/changed-files from 42.0.4 to 42.0.7.\n\nRelease notes\nSourced from tj-actions/changed-files's releases.\n\nv42.0.7\nWhat's Changed\n\nUpgraded to v42.0.6 by @​tj-actions-bot in tj-actions/changed-files#1968\nchore(deps): update dependency @​types/node to v20.11.25 by @​renovate in tj-actions/changed-files#1969\nchore(deps): update dependency typescript to v5.4.2 by @​renovate in tj-actions/changed-files#1970\nchore: add test for detecting changed-files in a nested directory by @​jackton1 in tj-actions/changed-files#1972\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1973\n\nFull Changelog: tj-actions/changed-files@v42...v42.0.7\nv42.0.6\nWhat's Changed\n\nUpgraded to v42.0.5 by @​tj-actions-bot in tj-actions/changed-files#1955\nchore(deps): update typescript-eslint monorepo to v7.1.0 by @​renovate in tj-actions/changed-files#1956\nchore(deps): update dependency @​types/node to v20.11.21 by @​renovate in tj-actions/changed-files#1957\nchore(deps): update peter-evans/create-pull-request action to v6.0.1 by @​renovate in tj-actions/changed-files#1958\nchore(deps): update dependency @​types/node to v20.11.22 by @​renovate in tj-actions/changed-files#1959\nchore(deps): update tj-actions/verify-changed-files action to v19 by @​renovate in tj-actions/changed-files#1960\nchore(deps): update dependency @​types/node to v20.11.23 by @​renovate in tj-actions/changed-files#1961\nchore(deps): update dependency @​types/node to v20.11.24 by @​renovate in tj-actions/changed-files#1962\nchore(deps): update dependency eslint-plugin-github to v4.10.2 by @​renovate in tj-actions/changed-files#1963\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1965\nchore(deps): update typescript-eslint monorepo to v7.1.1 by @​renovate in tj-actions/changed-files#1966\nfix(deps): update dependency yaml to v2.4.1 by @​renovate in tj-actions/changed-files#1967\n\nFull Changelog: tj-actions/changed-files@v42...v42.0.6\nv42.0.5\nWhat's Changed\n\nUpgraded to v42.0.4 by @​tj-actions-bot in tj-actions/changed-files#1941\nchore: update action.yml by @​jackton1 in tj-actions/changed-files#1942\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1943\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1944\nchore(deps): update typescript-eslint monorepo to v7.0.2 by @​renovate in tj-actions/changed-files#1945\nchore(deps): update dependency @​types/node to v20.11.20 by @​renovate in tj-actions/changed-files#1949\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1950\nchore(deps): update dependency eslint to v8.57.0 by @​renovate in tj-actions/changed-files#1951\nchore: Update README.md by @​jackton1 in tj-actions/changed-files#1952\nfix(deps): update dependency yaml to v2.4.0 by @​renovate in tj-actions/changed-files#1953\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1954\n\nFull Changelog: tj-actions/changed-files@v42...v42.0.5\n\n\n\nChangelog\nSourced from tj-actions/changed-files's changelog.\n\n42.0.7 - (2024-03-07)\n➕ Add\n\nAdded missing changes and modified dist assets.\n(7fc073d)  - (GitHub Action)\nAdded missing changes and modified dist assets.\n(ea042d8)  - (GitHub Action)\n\n🔄 Update\n\nUpdate README.md (a65c2f2)  - (Tonye Jack)\n\n⚙️ Miscellaneous Tasks\n\ndeps: Lock file maintenance (7e4bfc2)  - (renovate[bot])\nAdd test for detecting changed-files in a nested directory (#1972) (ef3a7f5)  - (Tonye Jack)\ndeps: Update dependency typescript to v5.4.2 (8293f8c)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.11.25 (0ff732e)  - (renovate[bot])\n\n⬆️ Upgrades\n\nUpgraded to v42.0.6 (#1968)\n\nCo-authored-by: jackton1 17484350+jackton1@users.noreply.github.com (8df6fc2)  - (tj-actions[bot])\n42.0.6 - (2024-03-06)\n🐛 Bug Fixes\n\ndeps: Update dependency yaml to v2.4.1 (2c97e7e)  - (renovate[bot])\n\n➕ Add\n\nAdded missing changes and modified dist assets.\n(d516645)  - (GitHub Action)\nAdded missing changes and modified dist assets.\n(74605cb)  - (GitHub Action)\n\n⚙️ Miscellaneous Tasks\n\ndeps: Update typescript-eslint monorepo to v7.1.1 (1c8e606)  - (renovate[bot])\ndeps: Lock file maintenance (aa15b58)  - (renovate[bot])\ndeps: Update dependency eslint-plugin-github to v4.10.2 (0a392e7)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.11.24 (85efc7d)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.11.23 (2a095d2)  - (renovate[bot])\ndeps: Update tj-actions/verify-changed-files action to v19 (#1960) (ac3dc5e)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.11.22 (dd7e9d3)  - (renovate[bot])\ndeps: Update peter-evans/create-pull-request action to v6.0.1 (0647a31)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.11.21 (9d67dd3)  - (renovate[bot])\n\n\n\n... (truncated)\n\n\nCommits\n\n7fc073d Added missing changes and modified dist assets.\n7e4bfc2 chore(deps): lock file maintenance\nef3a7f5 chore: add test for detecting changed-files in a nested directory (#1972)\na65c2f2 Update README.md\nea042d8 Added missing changes and modified dist assets.\n8293f8c chore(deps): update dependency typescript to v5.4.2\n0ff732e chore(deps): update dependency @​types/node to v20.11.25\n8df6fc2 Upgraded to v42.0.6 (#1968)\nd516645 Added missing changes and modified dist assets.\n2c97e7e fix(deps): update dependency yaml to v2.4.1\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",6942,0,1
EbookFoundation/free-programming-books,318503,9861,CLOSED,Add 'Android Test-Driven Development' pdf,11090,2024-03-07 16:30:53+00:00,2024-03-08 15:22:33+00:00,,22.86111111111111,,0,1,1,0,"What does this PR do?\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\nFor resources\nDescription\nWhy is this valuable (or not)?\nThis is a very resourceful book\nHow do we know it's really free?\nthis is a ebop file\nFor book lists, is it a book? For course lists, is it a course? etc.\nit is a book\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",698,2,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Add entredevyops podcast es,11088,2024-03-06 19:03:51+00:00,2024-03-08 15:16:26+00:00,2024-03-08 15:16:26+00:00,44.209722222222226,,0,1,1,0,"What does this PR do?\nAdd resource\nDescription\nAdd podcast entredevyops\nWhy is this valuable (or not)?\nIt is a Spanish-speaking podcast about DevOps, system administration, operations, cloud and everything related to the work or hobby of these disciplines. In addition, every episode is used to bully Edu, which as common hatred unites us more (If you listen to the podcast you will understand this joke).\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",791,2,3
EbookFoundation/free-programming-books,318503,9861,MERGED,Add Chinese courses about Rust,11087,2024-03-06 03:24:03+00:00,2024-03-06 14:54:48+00:00,2024-03-06 14:54:48+00:00,11.5125,,0,1,1,0,"The Book originated from project rust-course.\nThe project is well maintained,  articles are well written, so is  good for learning Rust programming.",149,2,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Add Chinese courses about Python,11086,2024-03-05 05:57:32+00:00,2024-03-06 14:52:18+00:00,2024-03-06 14:52:17+00:00,32.91277777777778,CHANGES_REQUESTED,1,1,10,4,,0,2,2
EbookFoundation/free-programming-books,318503,9861,MERGED,Add Chinese books about C programming,11085,2024-03-05 03:18:59+00:00,2024-03-05 18:52:03+00:00,2024-03-05 18:52:03+00:00,15.551111111111112,,0,1,1,0,,0,2,2
EbookFoundation/free-programming-books,318503,9861,CLOSED,Add Chinese courses,11084,2024-03-05 02:51:31+00:00,2024-03-06 01:30:17+00:00,,22.64611111111111,,2,1,1,0,,0,2,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Fix typo,11083,2024-03-04 12:41:33+00:00,2024-03-04 15:12:24+00:00,2024-03-04 15:12:24+00:00,2.5141666666666667,,0,1,1,1,"What does this PR do?\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",630,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,Add Chinese ai free courses,11082,2024-03-04 10:31:42+00:00,2024-03-05 18:56:15+00:00,2024-03-05 18:56:15+00:00,32.409166666666664,CHANGES_REQUESTED,1,1,7,0,,0,2,4
EbookFoundation/free-programming-books,318503,9861,MERGED,Add Pyrexp to Regular Expressions,11081,2024-03-03 20:57:23+00:00,2024-03-04 15:05:24+00:00,2024-03-04 15:05:24+00:00,18.13361111111111,,0,1,1,0,"What does this PR do?\nAdd resource\nFor resources\nDescription\nPyrexp is a regex tester and visualizer\nWhy is this valuable (or not)?\nIt allows for graphically visualizing the patterns.\nHow do we know it's really free?\nIt is a web ressource, no registration\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",644,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,Update free-programming-books-id.md,11080,2024-03-03 03:29:10+00:00,2024-03-04 15:04:00+00:00,2024-03-04 15:04:00+00:00,35.580555555555556,,1,1,1,0,"What does this PR do?\nAdd resource(s)\nFor resources\nDescription\nIm add my new book called ""Ebook HTML CSS Manual Dasar"", It include 30 content about HTML and CSS.\nWhy is this valuable (or not)?\nBecause it free book, everyone can read this, right?\nHow do we know it's really free?\nIm made this book, its really free.\nFor book lists, is it a book? For course lists, is it a course? etc.\nIt a book.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",786,2,3
EbookFoundation/free-programming-books,318503,9861,CLOSED,chore(deps): bump tj-actions/changed-files from 42.0.4 to 42.0.5,11079,2024-03-02 11:58:49+00:00,2024-03-09 11:42:27+00:00,,167.72722222222222,,0,1,1,1,"Bumps tj-actions/changed-files from 42.0.4 to 42.0.5.\n\nRelease notes\nSourced from tj-actions/changed-files's releases.\n\nv42.0.5\nWhat's Changed\n\nUpgraded to v42.0.4 by @​tj-actions-bot in tj-actions/changed-files#1941\nchore: update action.yml by @​jackton1 in tj-actions/changed-files#1942\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1943\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1944\nchore(deps): update typescript-eslint monorepo to v7.0.2 by @​renovate in tj-actions/changed-files#1945\nchore(deps): update dependency @​types/node to v20.11.20 by @​renovate in tj-actions/changed-files#1949\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1950\nchore(deps): update dependency eslint to v8.57.0 by @​renovate in tj-actions/changed-files#1951\nchore: Update README.md by @​jackton1 in tj-actions/changed-files#1952\nfix(deps): update dependency yaml to v2.4.0 by @​renovate in tj-actions/changed-files#1953\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1954\n\nFull Changelog: tj-actions/changed-files@v42...v42.0.5\n\n\n\nChangelog\nSourced from tj-actions/changed-files's changelog.\n\n42.0.5 - (2024-02-26)\n🐛 Bug Fixes\n\ndeps: Update dependency yaml to v2.4.0 (2a2a5b6)  - (renovate[bot])\n\n➕ Add\n\nAdded missing changes and modified dist assets.\n(31c4d15)  - (GitHub Action)\nAdded missing changes and modified dist assets.\n(9d447b9)  - (GitHub Action)\nAdded missing changes and modified dist assets.\n(c2039de)  - (GitHub Action)\n\n🔄 Update\n\nUpdate README.md (bb7502b)  - (Tonye Jack)\nUpdated README.md (#1943)\n\nCo-authored-by: jackton1 17484350+jackton1@users.noreply.github.com (9ef20a6)  - (tj-actions[bot])\n⚙️ Miscellaneous Tasks\n\ndeps: Lock file maintenance (800a282)  - (renovate[bot])\nUpdate README.md (#1952) (d8dcc13)  - (Tonye Jack)\ndeps: Update dependency eslint to v8.57.0 (639ce0e)  - (renovate[bot])\ndeps: Lock file maintenance (83bfc72)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.11.20 (879c838)  - (renovate[bot])\ndeps: Update typescript-eslint monorepo to v7.0.2 (5c5539c)  - (renovate[bot])\ndeps: Lock file maintenance (0cbc9bc)  - (renovate[bot])\nUpdate action.yml (#1942) (a617853)  - (Tonye Jack)\n\n⬆️ Upgrades\n\nUpgraded to v42.0.4 (#1941)\n\nCo-authored-by: jackton1 17484350+jackton1@users.noreply.github.com (5c1bceb)  - (tj-actions[bot])\n\n\n\nCommits\n\n800a282 chore(deps): lock file maintenance\n31c4d15 Added missing changes and modified dist assets.\n2a2a5b6 fix(deps): update dependency yaml to v2.4.0\nd8dcc13 chore: Update README.md (#1952)\n639ce0e chore(deps): update dependency eslint to v8.57.0\n9d447b9 Added missing changes and modified dist assets.\n83bfc72 chore(deps): lock file maintenance\n879c838 chore(deps): update dependency @​types/node to v20.11.20\nbb7502b Update README.md\n5c5539c chore(deps): update typescript-eslint monorepo to v7.0.2\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",4484,0,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Add Chinese courses about CentOS and Linux,11078,2024-02-29 08:03:44+00:00,2024-02-29 17:24:47+00:00,2024-02-29 17:24:47+00:00,9.350833333333334,,0,1,1,0,,0,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,Add online books about C programming,11077,2024-02-28 06:32:41+00:00,2024-02-28 15:43:06+00:00,2024-02-28 15:43:06+00:00,9.17361111111111,,0,1,1,0,,0,2,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Add Chinese courses,11076,2024-02-28 02:23:40+00:00,2024-02-28 15:25:35+00:00,2024-02-28 15:25:35+00:00,13.031944444444445,,0,1,3,2,,0,2,3
EbookFoundation/free-programming-books,318503,9861,MERGED,Add Chinese courses,11074,2024-02-27 07:43:28+00:00,2024-02-27 17:43:49+00:00,2024-02-27 17:43:49+00:00,10.005833333333333,,0,1,6,0,"增加中文课程：""操作系统原理 清华大学""",20,2,2
EbookFoundation/free-programming-books,318503,9861,MERGED,fix: remove invalid symbols and keep them consistent with the original,11073,2024-02-27 06:35:27+00:00,2024-02-27 17:38:30+00:00,2024-02-27 17:38:30+00:00,11.050833333333333,,0,1,1,1,"Update docs/CONTRIBUTING-zh.md, remove invalid symbols and keep them consistent with the original.",98,2,1
EbookFoundation/free-programming-books,318503,9861,MERGED,add link to new rust book in free-proramming-books-zh,11072,2024-02-25 08:38:56+00:00,2024-02-25 22:00:32+00:00,2024-02-25 22:00:32+00:00,13.36,,0,1,1,0,"What does this PR do?\nAdd Chinese rust book\nFor resources\nDescription\nAdd The Little Book of Rust Macros For Chinese\nWhy is this valuable (or not)?\nIt's an awesome book about rust macro\nHow do we know it's really free?\nIt was publish on GitHub Io with MIT license\nFor book lists, is it a book? For course lists, is it a course? etc.\nIt is a book with chapters and many resources\nChecklist:\n\n[x ] Read our contributing guidelines.\n[x ] Search for duplicates.\n[x ] Include author(s) and platform where appropriate.\n[x ] Put lists in alphabetical order, correct spacing.\n[x ] Add needed indications (PDF, access notes, under construction).\n[x ] Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",793,2,2
EbookFoundation/free-programming-books,318503,9861,MERGED,chore(deps): bump tj-actions/changed-files from 42.0.0 to 42.0.4,11071,2024-02-24 11:25:00+00:00,2024-02-24 22:48:03+00:00,2024-02-24 22:48:03+00:00,11.384166666666667,,1,1,1,1,"Bumps tj-actions/changed-files from 42.0.0 to 42.0.4.\n\nRelease notes\nSourced from tj-actions/changed-files's releases.\n\nv42.0.4\nWhat's Changed\n\nUpgraded to v42.0.3 by @​tj-actions-bot in tj-actions/changed-files#1939\nchore: update formatting by @​jackton1 in tj-actions/changed-files#1940\n\nFull Changelog: tj-actions/changed-files@v42...v42.0.4\nv42.0.3\nWhat's Changed\n\nUpgraded to v42.0.2 by @​tj-actions-bot in tj-actions/changed-files#1886\nchore(deps): update dependency @​types/uuid to v9.0.8 by @​renovate in tj-actions/changed-files#1887\nchore(deps): update dependency @​types/node to v20.11.7 by @​renovate in tj-actions/changed-files#1888\nchore(deps): update dependency @​types/node to v20.11.8 by @​renovate in tj-actions/changed-files#1889\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1890\nchore(deps): update dependency @​types/node to v20.11.9 by @​renovate in tj-actions/changed-files#1892\nchore: fix broken matrix example links by @​levenleven in tj-actions/changed-files#1891\nchore(deps): update dependency @​types/node to v20.11.10 by @​renovate in tj-actions/changed-files#1895\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1894\ndocs: add levenleven as a contributor for doc by @​allcontributors in tj-actions/changed-files#1893\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1896\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1897\nchore(deps): update typescript-eslint monorepo to v6.20.0 by @​renovate in tj-actions/changed-files#1898\nchore: update test by @​jackton1 in tj-actions/changed-files#1899\nchore(deps): update dependency @​types/node to v20.11.11 by @​renovate in tj-actions/changed-files#1900\nchore(deps): update dependency @​types/node to v20.11.12 by @​renovate in tj-actions/changed-files#1901\nchore(deps): update dependency @​types/node to v20.11.13 by @​renovate in tj-actions/changed-files#1902\nchore(deps): update peter-evans/create-pull-request action to v6 by @​renovate in tj-actions/changed-files#1903\nchore(deps): update dependency @​types/node to v20.11.14 by @​renovate in tj-actions/changed-files#1904\nchore(deps): update dependency @​types/node to v20.11.15 by @​renovate in tj-actions/changed-files#1905\nchore(deps): update dependency @​types/jest to v29.5.12 by @​renovate in tj-actions/changed-files#1906\nchore(deps): update dependency @​types/node to v20.11.16 by @​renovate in tj-actions/changed-files#1907\nchore: create greetings workflow by @​jackton1 in tj-actions/changed-files#1909\ndocs: add dan-hill2802 as a contributor for doc by @​allcontributors in tj-actions/changed-files#1910\ncorrect bash loop in examples by @​dan-hill2802 in tj-actions/changed-files#1908\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1911\nchore(deps): update tj-actions/verify-changed-files action to v18 by @​renovate in tj-actions/changed-files#1912\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1913\nchore(deps): update dependency prettier to v3.2.5 by @​renovate in tj-actions/changed-files#1914\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1915\nchore(deps): update typescript-eslint monorepo to v6.21.0 by @​renovate in tj-actions/changed-files#1916\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1917\ndocs: add KeisukeYamashita as a contributor for doc by @​allcontributors in tj-actions/changed-files#1919\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1920\nfix: broken link to matrix example workflow by @​KeisukeYamashita in tj-actions/changed-files#1918\nchore: update workflow-run-example.yml by @​jackton1 in tj-actions/changed-files#1921\nchore: update README.md by @​jackton1 in tj-actions/changed-files#1922\nchore(deps): update actions/setup-node action to v4.0.2 by @​renovate in tj-actions/changed-files#1923\nchore(deps): update codacy/codacy-analysis-cli-action action to v4.4.0 by @​renovate in tj-actions/changed-files#1924\nchore(deps): update dependency @​types/node to v20.11.17 by @​renovate in tj-actions/changed-files#1925\n\n\n\n... (truncated)\n\n\nChangelog\nSourced from tj-actions/changed-files's changelog.\n\n42.0.4 - (2024-02-18)\n⚙️ Miscellaneous Tasks\n\nUpdate formatting and add missing dist changes (#1940) (3f54ebb)  - (Tonye Jack)\n\n⬆️ Upgrades\n\nUpgraded to v42.0.3 (#1939)\n\nCo-authored-by: jackton1 17484350+jackton1@users.noreply.github.com\nCo-authored-by: GitHub Action action@github.com (6f070cf)  - (tj-actions[bot])\n42.0.3 - (2024-02-17)\n🐛 Bug Fixes\n\npayload_api, git_diff: Accessing correct property in payload and Replacing --quiet with --no-patch in git diff (#1934) (e3cac49)  - (Aravind)\nBroken link to matrix example workflow (#1918) (ea35f7e)  - (KeisukeYamashita)\n\n➕ Add\n\nAdded missing changes and modified dist assets.\n(07ac0ac)  - (GitHub Action)\n\n🔄 Update\n\nUpdated README.md (#1938)\n\nCo-authored-by: jackton1 17484350+jackton1@users.noreply.github.com (ec75ae5)  - (tj-actions[bot])\n\nUpdate README.md (8eced8a)  - (Tonye Jack)\nUpdate README.md (b2d4e1b)  - (Tonye Jack)\nUpdated README.md (#1920)\n\nCo-authored-by: jackton1 17484350+jackton1@users.noreply.github.com (3399f88)  - (tj-actions[bot])\n\nUpdated README.md (#1917)\n\nCo-authored-by: jackton1 17484350+jackton1@users.noreply.github.com (8e56bc0)  - (tj-actions[bot])\n\nUpdate action.yml (f6d3fe5)  - (Tonye Jack)\nUpdate README.md (efa99ea)  - (Tonye Jack)\nUpdate README.md (6d8f9bd)  - (Tonye Jack)\nUpdated README.md (#1915)\n\nCo-authored-by: jackton1 17484350+jackton1@users.noreply.github.com (7daee9e)  - (tj-actions[bot])\n\nUpdate README.md (99c80bd)  - (Tonye Jack)\nUpdated README.md (#1911)\n\nCo-authored-by: jackton1 17484350+jackton1@users.noreply.github.com (aa31060)  - (tj-actions[bot])\n\nUpdate README.md (d3ac2a0)  - (Tonye Jack)\nUpdated README.md (#1896)\n\n\n\n... (truncated)\n\n\nCommits\n\n3f54ebb chore: update formatting and add missing dist changes (#1940)\n6f070cf Upgraded to v42.0.3 (#1939)\nec75ae5 Updated README.md (#1938)\n4333ab5 docs: add codesculpture as a contributor for code, and bug (#1937)\ne3cac49 fix(payload_api, git_diff): Accessing correct property in payload and Replaci...\n68bd453 chore(deps): update github artifact actions to v4 (major) (#1936)\nf0ce41b chore(deps): update dependency eslint-plugin-jest to v27.9.0\nce451bf chore(deps): update dependency @​types/node to v20.11.19\n7592e9e chore(deps): update dependency @​types/node to v20.11.18\n999653c chore(deps): lock file maintenance\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",8098,2,0
EbookFoundation/free-programming-books,318503,9861,CLOSED,added more resources,11066,2024-02-08 06:42:25+00:00,2024-02-10 10:30:40+00:00,,51.80416666666667,,0,1,57,1,,0,1,4
EbookFoundation/free-programming-books,318503,9861,CLOSED,Added Burmese Resources,11065,2024-02-08 06:37:30+00:00,2024-02-08 06:39:19+00:00,,0.03027777777777778,,0,1,68,0,"What does this PR do?\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",630,1,1
EbookFoundation/free-programming-books,318503,9861,CLOSED,Update myanmar-courses-my.md,11064,2024-02-07 21:09:28+00:00,2024-02-07 21:12:55+00:00,,0.0575,,0,1,34,0,"What does this PR do?\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",630,1,1
EbookFoundation/free-programming-books,318503,9861,CLOSED,added a new report in the Norwegian repo,11062,2024-02-06 14:26:05+00:00,2024-02-06 14:44:03+00:00,,0.29944444444444446,,0,1,5,1,"This concept provides a comprehensive analysis with the main focus on strategies for achieving success in digitization processes, especially aimed at IT projects within the public sector. The study carefully examines key aspects related to benefit management.\nBy using a systematic approach, the research work will delve into methods, best practice and challenges related to the implementation of digitization in the public sector. The goal is to identify successful strategies that can help organizations maximize the value of their IT projects and thus strengthen their digital transformation.\nThis concept establishes the basis for a comprehensive study which aims to provide insight, guidance and practical solutions to succeed with digitization in an increasingly challenging public sector.\nThis report is part of a series of publications from the Concept-programmet, which focuses on research related to the development and quality assurance of large investment projects in Norway. The report has been approved as a level 1 scientific publication channel.\nAuthors:\nHelene Berg (National Defense Research Institute)\nKjetil Holgeid (University of Oslo)\nMagne Jørgensen (Simula Metropolitan Center for Digital Engineering)\nGro Holst Volden (NTNU)\nPublisher:\nEx ante academic publisher\nThe Concept programmet, NTNU\nLicensee:\n© Research program Concept\nThe publication can be quoted freely with reference to the source.",1434,1,2
EbookFoundation/free-programming-books,318503,9861,CLOSED,Added ARM Architecture Reference Manual,11060,2024-02-01 21:40:20+00:00,2024-02-02 03:12:19+00:00,,5.533055555555555,,0,1,1,0,"What does this PR do?\nAdds a resource PDF for ARM architecture.\nDescription\nThis PDF contains 5000+ pages of ARM architecture information. I did the author name as the copyright.\nWhy is this valuable (or not)?\nIts valuable because it consist of how ARM processors function.\nHow do we know it's really free?\nIts a open PDF so its free for the user to look at.\nFor book lists, is it a book? For course lists, is it a course? etc.\nPDF\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.",735,2,2
EbookFoundation/free-programming-books,318503,9861,CLOSED,chore(deps): bump tj-actions/changed-files from 42.0.0 to 42.0.2,11059,2024-01-27 11:33:17+00:00,2024-02-24 11:25:04+00:00,,671.8630555555555,,0,1,1,1,"Bumps tj-actions/changed-files from 42.0.0 to 42.0.2.\n\nRelease notes\nSourced from tj-actions/changed-files's releases.\n\nv42.0.2\nWhat's Changed\n\nUpgraded to v42.0.1 by @​tj-actions-bot in tj-actions/changed-files#1884\nfeat: enhance error handling for non-git directories by @​jackton1 in tj-actions/changed-files#1885\n\nFull Changelog: tj-actions/changed-files@v42...v42.0.2\nv42.0.1\nWhat's Changed\n\nUpgraded to v42 by @​tj-actions-bot in tj-actions/changed-files#1874\nchore(deps): update tj-actions/eslint-changed-files action to v23 by @​renovate in tj-actions/changed-files#1875\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1876\nchore: update README.md by @​jackton1 in tj-actions/changed-files#1877\nchore: rename example worflows from test to example by @​jackton1 in tj-actions/changed-files#1878\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1879\nchore(deps): update dependency ts-jest to v29.1.2 by @​renovate in tj-actions/changed-files#1880\nchore(deps): update typescript-eslint monorepo to v6.19.1 by @​renovate in tj-actions/changed-files#1881\nchore(deps): update dependency @​types/node to v20.11.6 by @​renovate in tj-actions/changed-files#1883\n\nFull Changelog: tj-actions/changed-files@v42...v42.0.1\n\n\n\nChangelog\nSourced from tj-actions/changed-files's changelog.\n\n42.0.2 - (2024-01-25)\n🚀 Features\n\nEnhance error handling for non-git directories (#1885) (90a06d6)  - (Tonye Jack)\n\n⬆️ Upgrades\n\nUpgraded to v42.0.1 (#1884)\n\nCo-authored-by: jackton1 jackton1@users.noreply.github.com (2cb2c92)  - (tj-actions[bot])\n42.0.1 - (2024-01-24)\n➕ Add\n\nAdded missing changes and modified dist assets.\n(ea024b2)  - (GitHub Action)\nAdded missing changes and modified dist assets.\n(3af07c2)  - (GitHub Action)\n\n🔄 Update\n\nUpdate env.ts (3680129)  - (Tonye Jack)\n\n⚙️ Miscellaneous Tasks\n\ndeps: Update dependency @​types/node to v20.11.6 (ac21d93)  - (renovate[bot])\ndeps: Update typescript-eslint monorepo to v6.19.1 (a4637ea)  - (renovate[bot])\ndeps: Update dependency ts-jest to v29.1.2 (fd9998c)  - (renovate[bot])\ndeps: Lock file maintenance (db4e584)  - (renovate[bot])\nRename example worflows from test to example (#1878) (c6543c4)  - (Tonye Jack)\nUpdate README.md (#1877) (88f9f3e)  - (Tonye Jack)\ndeps: Lock file maintenance (5d866cb)  - (renovate[bot])\ndeps: Update tj-actions/eslint-changed-files action to v23 (#1875) (346f237)  - (renovate[bot])\n\n⬆️ Upgrades\n\nUpgraded to v42 (#1874)\n\nCo-authored-by: jackton1 jackton1@users.noreply.github.com (c037f1e)  - (tj-actions[bot])\n\n\n\nCommits\n\n90a06d6 feat: enhance error handling for non-git directories (#1885)\n2cb2c92 Upgraded to v42.0.1 (#1884)\nac21d93 chore(deps): update dependency @​types/node to v20.11.6\na4637ea chore(deps): update typescript-eslint monorepo to v6.19.1\nfd9998c chore(deps): update dependency ts-jest to v29.1.2\nea024b2 Added missing changes and modified dist assets.\ndb4e584 chore(deps): lock file maintenance\nc6543c4 chore: rename example worflows from test to example (#1878)\n88f9f3e chore: update README.md (#1877)\n3af07c2 Added missing changes and modified dist assets.\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",4706,0,1
EbookFoundation/free-programming-books,318503,9861,CLOSED,Typescript Bangla Course Added,11058,2024-01-27 06:06:25+00:00,2024-02-17 04:37:19+00:00,,502.515,,0,1,1,0,"Typescript Bangla Course Added\nWhat does this PR do?\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",662,2,2
EbookFoundation/free-programming-books,318503,9861,MERGED,"add link to MoonMath book (zk-SNARKs, zero-knowledge proofs)",11054,2024-01-24 18:01:03+00:00,2024-01-24 23:54:31+00:00,2024-01-24 23:54:31+00:00,5.891111111111111,,2,1,1,0,"What does this PR do?\nAdd resource\nCloses #11039\nFor resources\nDescription\nThe MoonMath Manual is a resource for anyone interested in understanding and unlocking the potential of zk-SNARKs (a form of zero-knowledge proof system), from beginners to experts.\nWhy is this valuable (or not)?\nZero-knowledge proving systems are currently a very active area of software development.\nHow do we know it's really free?\nI  was able to download the book without creating an account or giving personal information of any kind. I don't know if the book will remain free but I see no reason why it wouldn't.\nFor book lists, is it a book? For course lists, is it a course? etc.\nIt is a book.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",1068,2,2
EbookFoundation/free-programming-books,318503,9861,CLOSED,"add: ""Design Patterns Elements of Reusable Object-Oriented Software"" by Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides",11053,2024-01-23 17:19:09+00:00,2024-01-24 14:46:45+00:00,,21.46,,0,1,1,0,"What does this PR do?\nAdd resource(s)\nFor resources\nDescription\nThis book goes beyond introduction to object-oriented technology. It describes simple and elegant solutions to specific problems in object-oriented software design\nWhy is this valuable (or not)?\nIt's the book recommended by most university courses on Object-Oriented Programming\nHow do we know it's really free?\nA direct download link is available to everyone.\nFor book lists, is it a book? For course lists, is it a course? etc.\nIt is a book.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",898,2,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Fix upload action to account for markdown files,11051,2024-01-21 17:48:40+00:00,2024-01-21 19:51:54+00:00,2024-01-21 19:51:54+00:00,2.053888888888889,,0,1,1,1,"What does this PR do?\nImprove repo\nFor resources\nDescription\nI thought this check would only look at workflow files and thus use the .yml extension exclusively. This was not the case so this PR updates to also look for the .md extension.\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",758,2,0
EbookFoundation/free-programming-books,318503,9861,CLOSED,“The API” by Sergey Konstantinov [English version] added,11050,2024-01-21 09:47:43+00:00,2024-01-21 21:11:04+00:00,,11.389166666666666,,0,1,1,0,"What does this PR do?\nAdd resource\nFor resources\nDescription\n“The API” by Sergey Konstantinov\nWhy is this valuable (or not)?\n600 stars on GitHub.\nAlso, the Russian version of the book is already added.\nHow do we know it's really free?\nI'm the author, I'm telling you ;)\nAlso, see LICENCE.md in the book's repository\nFor book lists, is it a book? For course lists, is it a course? etc.\nIt is a book\nChecklist:\n\n[✅] Read our contributing guidelines.\n[✅] Search for duplicates.\n[✅] Include author(s) and platform where appropriate.\n[✅] Put lists in alphabetical order, correct spacing.\n[✅] Add needed indications (PDF, access notes, under construction).\n[✅] Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",808,3,6
EbookFoundation/free-programming-books,318503,9861,MERGED,chore(deps): bump tj-actions/changed-files from 41.1.0 to 42.0.0,11048,2024-01-20 11:03:43+00:00,2024-01-22 03:54:07+00:00,2024-01-22 03:54:07+00:00,40.84,,1,1,1,1,"Bumps tj-actions/changed-files from 41.1.0 to 42.0.0.\n\nRelease notes\nSourced from tj-actions/changed-files's releases.\n\nv42.0.0\n🔥🔥 BREAKING CHANGE 🔥🔥\n\nInput file patterns that end with a / would now match all sub-files within the directory without requiring you to specify the globstar pattern.\n\n\n...\n      - name: Get changed files\n        id: changed-files\n        uses: tj-actions/changed-files@v42\n        with:\n          files: 'dir/'  # Would also be the same as dir/** \nWhat's Changed\n\nUpgraded to v41.1.2 by @​tj-actions-bot in tj-actions/changed-files#1869\nchore(deps): update dependency prettier to v3.2.4 by @​renovate in tj-actions/changed-files#1871\nfix: update input warning by @​jackton1 in tj-actions/changed-files#1870\nrename: unsupported REST API inputs constant name by @​jackton1 in tj-actions/changed-files#1872\nfeat: add support for include/exclude all nested files when a directory is specified and ends with a slash by @​jackton1 in tj-actions/changed-files#1873\n\nFull Changelog: tj-actions/changed-files@v41...v42.0.0\nv41.1.2\nWhat's Changed\n\nUpgraded to v41.1.1 by @​tj-actions-bot in tj-actions/changed-files#1854\nchore(deps): update dependency prettier to v3.2.2 by @​renovate in tj-actions/changed-files#1855\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1856\nchore(deps): update dependency @​types/node to v20.11.1 by @​renovate in tj-actions/changed-files#1857\nchore(deps): update dependency @​types/node to v20.11.2 by @​renovate in tj-actions/changed-files#1858\nchore(deps): update typescript-eslint monorepo to v6.19.0 by @​renovate in tj-actions/changed-files#1860\nfeat: enhance error handling and working directory resolution by @​jackton1 in tj-actions/changed-files#1859\nchore(deps): update dependency @​types/node to v20.11.3 by @​renovate in tj-actions/changed-files#1862\nchore(deps): update dependency @​types/node to v20.11.4 by @​renovate in tj-actions/changed-files#1863\nchore(deps): update tj-actions/eslint-changed-files action to v22 by @​renovate in tj-actions/changed-files#1864\nchore(deps): update dependency prettier to v3.2.3 by @​renovate in tj-actions/changed-files#1867\nfix: bug with incorrect action path by @​jackton1 in tj-actions/changed-files#1866\nchore(deps): update dependency @​types/node to v20.11.5 by @​renovate in tj-actions/changed-files#1868\n\nFull Changelog: tj-actions/changed-files@v41...v41.1.2\nv41.1.1\nWhat's Changed\n\nUpgraded to v41.1.0 by @​tj-actions-bot in tj-actions/changed-files#1852\nfix: bug with inaccurate warnings by @​jackton1 in tj-actions/changed-files#1853\n\n\n\n... (truncated)\n\n\nChangelog\nSourced from tj-actions/changed-files's changelog.\n\n42.0.0 - (2024-01-18)\n🚀 Features\n\nAdd support for include/exclude all nested files when a directory is specified and ends with a slash (#1873) (ae82ed4)  - (Tonye Jack)\n\n🐛 Bug Fixes\n\nUpdate input warning (#1870) (6c9dcea)  - (Tonye Jack)\n\n📝 Rename\n\nUnsupported REST API inputs constant name (#1872) (cbd5907)  - (Tonye Jack)\n\n⚙️ Miscellaneous Tasks\n\ndeps: Update dependency prettier to v3.2.4 (79b060d)  - (renovate[bot])\n\n⬆️ Upgrades\n\nUpgraded to v41.1.2 (#1869)\n\nCo-authored-by: jackton1 jackton1@users.noreply.github.com (434b67e)  - (tj-actions[bot])\n41.1.2 - (2024-01-17)\n🚀 Features\n\nEnhance error handling and working directory resolution (#1859) (a60bf37)  - (Tonye Jack)\n\n🐛 Bug Fixes\n\nBug with incorrect action path (#1866) (3f81899)  - (Tonye Jack)\n\n⚙️ Miscellaneous Tasks\n\ndeps: Update dependency @​types/node to v20.11.5 (cbda684)  - (renovate[bot])\ndeps: Update dependency prettier to v3.2.3 (67a1f54)  - (renovate[bot])\ndeps: Update tj-actions/eslint-changed-files action to v22 (#1864) (99248a4)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.11.4 (8787431)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.11.3 (98d1d84)  - (renovate[bot])\ndeps: Update typescript-eslint monorepo to v6.19.0 (bc46e4c)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.11.2 (fba4067)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.11.1 (e4b8674)  - (renovate[bot])\ndeps: Lock file maintenance (bc2b5ae)  - (renovate[bot])\ndeps: Update dependency prettier to v3.2.2 (63c36a5)  - (renovate[bot])\n\n⬆️ Upgrades\n\nUpgraded to v41.1.1 (#1854)\n\n\n\n... (truncated)\n\n\nCommits\n\nae82ed4 feat: add support for include/exclude all nested files when a directory is sp...\ncbd5907 rename: unsupported REST API inputs constant name (#1872)\n6c9dcea fix: update input warning (#1870)\n79b060d chore(deps): update dependency prettier to v3.2.4\n434b67e Upgraded to v41.1.2 (#1869)\ncbda684 chore(deps): update dependency @​types/node to v20.11.5\n3f81899 fix: bug with incorrect action path (#1866)\n67a1f54 chore(deps): update dependency prettier to v3.2.3\n99248a4 chore(deps): update tj-actions/eslint-changed-files action to v22 (#1864)\n8787431 chore(deps): update dependency @​types/node to v20.11.4\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",6522,2,0
EbookFoundation/free-programming-books,318503,9861,CLOSED,contribute Android PDF Books in English,11046,2024-01-15 05:16:23+00:00,2024-01-15 17:09:19+00:00,,11.882222222222222,,1,1,7,0,"What does this PR do?\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",630,3,2
EbookFoundation/free-programming-books,318503,9861,MERGED,Bump actions/upload-artifact from 3 to 4,11043,2024-01-14 15:17:57+00:00,2024-01-15 17:06:54+00:00,2024-01-15 17:06:54+00:00,25.815833333333334,,1,2,8,5,"What does this PR do?\nImprove repo\nFor resources\nDescription\nThis PR is intended to supersede #11007 and #11008. Some changes to the Github actions need to be made and I do not have permissions to push to the Dependabot branch.\nThese changes fix the issue where uploads fail if artifacts have the same name. I am using the workflow file name as the artifact name.\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",885,3,0
EbookFoundation/free-programming-books,318503,9861,MERGED,chore(deps): bump tj-actions/changed-files from 40.2.1 to 41.1.0,11040,2024-01-13 11:37:52+00:00,2024-01-15 17:07:25+00:00,2024-01-15 17:07:25+00:00,53.4925,,2,1,1,1,"Bumps tj-actions/changed-files from 40.2.1 to 41.1.0.\n\nRelease notes\nSourced from tj-actions/changed-files's releases.\n\nv41.1.0\nWhat's Changed\n\nUpgraded to v41.0.1 by @​tj-actions-bot in tj-actions/changed-files#1816\nchore: update matrix-test.yml by @​jackton1 in tj-actions/changed-files#1814\nchore(deps): update typescript-eslint monorepo to v6.16.0 by @​renovate in tj-actions/changed-files#1819\nchore(deps): update tj-actions/verify-changed-files action to v17 by @​renovate in tj-actions/changed-files#1820\nchore(deps): update dependency @​types/node to v20.10.6 by @​renovate in tj-actions/changed-files#1821\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1822\nchore(deps): update typescript-eslint monorepo to v6.17.0 by @​renovate in tj-actions/changed-files#1823\nchore(deps): update dependency eslint-plugin-jest to v27.6.1 by @​renovate in tj-actions/changed-files#1824\nchore(deps): update typescript-eslint monorepo to v6.18.0 by @​renovate in tj-actions/changed-files#1827\nchore: create workflow-run-test.yml by @​jackton1 in tj-actions/changed-files#1828\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1830\nchore(deps): update dependency @​types/node to v20.10.7 by @​renovate in tj-actions/changed-files#1831\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1833\nchore: update jest.config.js by @​jackton1 in tj-actions/changed-files#1834\nchore(deps): update typescript-eslint monorepo to v6.18.1 by @​renovate in tj-actions/changed-files#1835\nchore(deps-dev): bump @​types/node from 20.10.7 to 20.10.8 by @​dependabot in tj-actions/changed-files#1836\nchore(deps): update dependency eslint-plugin-prettier to v5.1.3 by @​renovate in tj-actions/changed-files#1837\nchore(deps): update dependency eslint-plugin-jest to v27.6.2 by @​renovate in tj-actions/changed-files#1838\nchore(deps): update dependency @​types/node to v20.11.0 by @​renovate in tj-actions/changed-files#1839\nchore(deps): update dependency prettier to v3.2.0 by @​renovate in tj-actions/changed-files#1844\nchore: update warning message by @​jackton1 in tj-actions/changed-files#1845\nchore: create multi-job-test.yml by @​jackton1 in tj-actions/changed-files#1843\nchore(deps): update dependency eslint-plugin-jest to v27.6.3 by @​renovate in tj-actions/changed-files#1846\nchore(deps): update dependency prettier to v3.2.1 by @​renovate in tj-actions/changed-files#1847\nchore: update top level workflow permissions by @​jackton1 in tj-actions/changed-files#1848\nfeat: add support for forcing the use of GitHub’s REST API by @​jackton1 in tj-actions/changed-files#1849\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1850\nfix: permission with release workflow by @​jackton1 in tj-actions/changed-files#1851\n\nFull Changelog: tj-actions/changed-files@v41...v41.1.0\nv41.0.1\nWhat's Changed\n\nUpgraded to v41 by @​tj-actions-bot in tj-actions/changed-files#1811\nchore(deps): update dependency eslint-plugin-prettier to v5.1.2 by @​renovate in tj-actions/changed-files#1813\nfix: update characters escaped by safe output by @​jackton1 in tj-actions/changed-files#1815\n\nFull Changelog: tj-actions/changed-files@v41...v41.0.1\nv41.0.0\n🔥 🔥 BREAKING CHANGE 🔥 🔥\nA new safe_output input is now available to prevent outputting unsafe filename characters (Enabled by default). This would escape characters in the filename that could be used for command injection.\n\n[!NOTE]\nThis can be disabled by setting the safe_output to false this comes with a recommendation to store all outputs generated in an environment variable first before using them.\n\n\n\n... (truncated)\n\n\nChangelog\nSourced from tj-actions/changed-files's changelog.\n\n41.1.0 - (2024-01-13)\n🚀 Features\n\nAdd support for forcing the use of GitHub’s REST API (#1849) (0ca1c07)  - (Tonye Jack)\n\n🐛 Bug Fixes\n\nPermission with release workflow (#1851) (8e0194b)  - (Tonye Jack)\n\n🔄 Update\n\nUpdated README.md (#1850)\n\nCo-authored-by: jackton1 jackton1@users.noreply.github.com (3649d28)  - (tj-actions[bot])\n\nUpdated README.md (#1830)\n\nCo-authored-by: jackton1 jackton1@users.noreply.github.com (3fbf5fb)  - (tj-actions[bot])\n\nUpdate README.md (9523067)  - (Tonye Jack)\nUpdate README.md (032add1)  - (Tonye Jack)\n\n⚙️ Miscellaneous Tasks\n\nUpdate top level workflow permissions (#1848) (a57f4dc)  - (Tonye Jack)\ndeps: Update dependency prettier to v3.2.1 (9c39b0b)  - (renovate[bot])\ndeps: Update dependency eslint-plugin-jest to v27.6.3 (8b141f3)  - (renovate[bot])\nCreate multi-job-test.yml (#1843) (17e07d8)  - (Tonye Jack)\nUpdate warning message (#1845) (13fa1c0)  - (Tonye Jack)\ndeps: Update dependency prettier to v3.2.0 (0deb29d)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.11.0 (28267ee)  - (renovate[bot])\ndeps: Update dependency eslint-plugin-jest to v27.6.2 (094d344)  - (renovate[bot])\ndeps: Update dependency eslint-plugin-prettier to v5.1.3 (aeec36b)  - (renovate[bot])\ndeps-dev: Bump @​types/node from 20.10.7 to 20.10.8 (#1836) (2d0270c)  - (dependabot[bot])\ndeps: Update typescript-eslint monorepo to v6.18.1 (0e0adfa)  - (renovate[bot])\nUpdate jest.config.js (#1834) (5313e6b)  - (Tonye Jack)\ndeps: Lock file maintenance (54789be)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.10.7 (1675238)  - (renovate[bot])\nCreate workflow-run-test.yml (#1828) (fdccafb)  - (Tonye Jack)\ndeps: Update typescript-eslint monorepo to v6.18.0 (0e8d796)  - (renovate[bot])\ndeps: Update dependency eslint-plugin-jest to v27.6.1 (0c6f2ac)  - (renovate[bot])\ndeps: Update typescript-eslint monorepo to v6.17.0 (1db97ad)  - (renovate[bot])\ndeps: Lock file maintenance (fb8f6db)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.10.6 (efd7ece)  - (renovate[bot])\ndeps: Update tj-actions/verify-changed-files action to v17 (#1820) (4f8e12c)  - (renovate[bot])\ndeps: Update typescript-eslint monorepo to v6.16.0 (0f0747e)  - (renovate[bot])\nUpdate matrix-test.yml (#1814) (0c2a758)  - (Tonye Jack)\n\n⬆️ Upgrades\n\nUpgraded to v41.0.1 (#1816)\n\n\n\n... (truncated)\n\n\nCommits\n\n8e0194b fix: permission with release workflow (#1851)\n3649d28 Updated README.md (#1850)\n0ca1c07 feat: add support for forcing the use of GitHub’s REST API (#1849)\na57f4dc chore: update top level workflow permissions (#1848)\n9c39b0b chore(deps): update dependency prettier to v3.2.1\n8b141f3 chore(deps): update dependency eslint-plugin-jest to v27.6.3\n17e07d8 chore: create multi-job-test.yml (#1843)\n13fa1c0 chore: update warning message (#1845)\n0deb29d chore(deps): update dependency prettier to v3.2.0\n28267ee chore(deps): update dependency @​types/node to v20.11.0\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",8220,3,0
EbookFoundation/free-programming-books,318503,9861,MERGED,add: 'Teaching Tech Together' by Greg Wilson,11038,2024-01-09 15:17:27+00:00,2024-01-10 02:33:00+00:00,2024-01-10 02:33:00+00:00,11.259166666666667,,0,1,1,0,"What does this PR do?\nAdd resource(s)\nFor resources\nDescription\nWhy is this valuable (or not)?\nA guide to evidence-based teaching practices for programmers who want to teach programming (and other things) based on the training courses the author developed for Software Carpentry and RStudio (now Posit).\nHow do we know it's really free?\nI'm the author and the license is CC-BY-NC.\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",838,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,"add: 'JavaScript for Data Science' by Gans, Hodges, and Wilson",11037,2024-01-09 15:16:04+00:00,2024-01-10 16:17:22+00:00,2024-01-10 16:17:22+00:00,25.02166666666667,,3,1,1,0,"What does this PR do?\nAdd resource(s)\nFor resources\nDescription\nWhy is this valuable (or not)?\nAn introduction to JavaScript (evenly balanced between in-browser JS for manipulating HTML and server-side JS using Node.js) for data scientists who are self-taught programmers.\nHow do we know it's really free?\nI'm one of the authors, and the license is CC-BY-NC.\nFor book lists, is it a book? For course lists, is it a course? etc.\nIt's a book.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",830,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,"add: ""Research Software Engineering with Python"" by Irving et al",11036,2024-01-09 15:15:10+00:00,2024-01-10 16:16:51+00:00,2024-01-10 16:16:51+00:00,25.028055555555557,,2,1,1,0,"What does this PR do?\nAdd resource(s)\nFor resources\nDescription\nWhy is this valuable (or not)?\nA guide to Python (with a bit of shell and version control) for research software engineers who are self-taught programmers and want to move beyond the basics.\nHow do we know it's really free?\nI'm one of the authors, and the license is CC-BY-NC.\nFor book lists, is it a book? For course lists, is it a course? etc.\nIt's a book.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",812,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,add: 'Software Design by Example (JavaScript version)' by Greg Wilson,11035,2024-01-09 15:13:59+00:00,2024-01-10 02:30:21+00:00,2024-01-10 02:30:21+00:00,11.272777777777778,,0,1,1,0,"What does this PR do?\nAdd resource(s)\nFor resources\nDescription\nHTML version of CRC Press book ""Software Design by Example (JavaScript version)"" by Greg Wilson\nWhy is this valuable (or not)?\nA guide to designing small-to-medium software systems in modern JavaScript/Node.js.\nHow do we know it's really free?\nI'm the author, and the license is CC-BY-NC.\nFor book lists, is it a book? For course lists, is it a course? etc.\nIt's a book.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",825,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,add: 'Software Design by Example (Python version)' by Greg Wilson,11034,2024-01-09 15:13:25+00:00,2024-01-10 02:28:50+00:00,2024-01-10 02:28:50+00:00,11.256944444444445,,0,1,1,0,"What does this PR do?\nAdd resource(s)\nFor resources\nDescription\nHTML version of CRC Press book ""Software Design by Example (Python version)"" by Greg Wilson\nWhy is this valuable (or not)?\nA guide to designing small-to-medium software systems in Python.\nHow do we know it's really free?\nI'm the author, and the license is CC-BY-NC.\nFor book lists, is it a book? For course lists, is it a course? etc.\nIt's a book.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",802,2,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Add Technical Writing subject with one book,11033,2024-01-06 14:22:55+00:00,2024-01-07 22:12:30+00:00,2024-01-07 22:12:30+00:00,31.82638888888889,,0,1,1,0,"What does this PR do?\nAdd resource(s)\nFor resources\nDescription\nThis PR adds a new Technical Writing category. I have included Software Technical Writing: A Guidebook as the first book in the category.\nWhy is this valuable (or not)?\nThe included book provides guidance on becoming a technical writer, how to write technical documents, and working with a team as a technical writer.\nHow do we know it's really free?\nThe book can be publicly accessed from my website.\nFor book lists, is it a book? For course lists, is it a course? etc.\nThe resource is a book.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",949,2,7
EbookFoundation/free-programming-books,318503,9861,CLOSED,Remove non-free content,11032,2024-01-05 12:04:06+00:00,2024-01-05 12:24:11+00:00,,0.3347222222222222,,0,1,0,1,What does this PR do?\nRemove resource\nFor resources\nDescription\nOn inspection I find that this download is still copyright protected and not free.,150,1,0
EbookFoundation/free-programming-books,318503,9861,MERGED,Removed Java Masters for Dead link,11029,2024-01-04 02:05:09+00:00,2024-01-04 16:54:31+00:00,2024-01-04 16:54:31+00:00,14.822777777777778,,0,1,0,1,Java Masters is a dead link as if the URL has been removed or deleted.\nWhat does this PR do?\nRemoves the link until further notice until the link is repaired.\nFixes this issue:\n#11028\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Ready for review.,282,2,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Add The Mathematical Engineering of Deep Learning book,11027,2024-01-03 17:15:00+00:00,2024-01-04 16:53:42+00:00,2024-01-04 16:53:42+00:00,23.645,,1,1,1,0,"What does this PR do?\nAdd resource to ML section.\nNote: The last PR was canceled because it included commits already merged\nFor resources\nDescription\nExpose mathematical engineering components of Deep Learning and other related topics.\nHow do we know it's really free?\nThe main website contains links for each chapter in PDF format.\nFor book lists, is it a book? For course lists, is it a course? etc.\nIt's a book!\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",804,2,0
EbookFoundation/free-programming-books,318503,9861,CLOSED,Add The Mathematical Engineering of Deep Learning book,11026,2024-01-03 05:18:01+00:00,2024-01-03 17:03:44+00:00,,11.761944444444444,,0,0,0,0,"What does this PR do?\nAdd resource to ML section.\nFor resources\nDescription\nExpose mathematical engineering components of Deep Learning and other related topics.\nHow do we know it's really free?\nThe main website contains links for each chapter in PDF format.\nFor book lists, is it a book? For course lists, is it a course? etc.\nIt's a book!\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",729,2,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Add three courses,11025,2024-01-03 00:27:53+00:00,2024-01-03 02:45:19+00:00,2024-01-03 02:45:19+00:00,2.2905555555555557,,0,1,3,0,"Add Go, Kotlin and JavaScript course\nWhat does this PR do?\nAdd resources\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",619,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,Add one course and remove one course.md,11024,2024-01-02 21:21:57+00:00,2024-01-02 22:40:59+00:00,2024-01-02 22:40:59+00:00,1.3172222222222223,,0,1,1,1,"Add new Dart course and remove old deleted Dart course\nWhat does this PR do?\nAdd resource | Remove resource\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",654,2,0
EbookFoundation/free-programming-books,318503,9861,CLOSED,chore(deps): bump tj-actions/changed-files from 40.2.1 to 41.0.0 in /.github/workflows,11023,2024-01-02 16:54:36+00:00,2024-01-15 17:08:08+00:00,,312.22555555555556,,0,1,1,1,"Bumps tj-actions/changed-files from 40.2.1 to 41.0.0.\n\nRelease notes\nSourced from tj-actions/changed-files's releases.\n\nv41.0.0\n🔥 🔥 BREAKING CHANGE 🔥 🔥\nA new safe_output input is now available to prevent outputting unsafe filename characters (Enabled by default). This would escape characters in the filename that could be used for command injection.\n\n[!NOTE]\nThis can be disabled by setting the safe_output to false this comes with a recommendation to store all outputs generated in an environment variable first before using them.\n\nExample\n...\n    - name: Get changed files\n      id: changed-files\n      uses: tj-actions/changed-files@v40\n      with:\n        safe_output: false # set to false because we are using an environment variable to store the output and avoid command injection.\n- name: List all added files\n  env:\n    ADDED_FILES: ${{ steps.changed-files.outputs.added_files }}\n  run: |\n    for file in &quot;$ADDED_FILES&quot;; do\n      echo &quot;$file was added&quot;\n    done\n\n...\nWhat's Changed\n\nchore(deps): update typescript-eslint monorepo to v6.15.0 by @​renovate in tj-actions/changed-files#1801\nUpgraded to v40.2.3 by @​tj-actions-bot in tj-actions/changed-files#1800\nchore(deps): update dependency eslint-plugin-prettier to v5.1.0 by @​renovate in tj-actions/changed-files#1802\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1803\nchore(deps): update dependency eslint-plugin-prettier to v5.1.1 by @​renovate in tj-actions/changed-files#1804\nfix: update safe output regex and the docs by @​tj-actions-bot in tj-actions/changed-files#1805\nRevert ""chore(deps): update actions/download-artifact action to v4"" by @​jackton1 in tj-actions/changed-files#1806\nUpdate README.md by @​jackton1 in tj-actions/changed-files#1808\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1809\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1810\n\nFull Changelog: tj-actions/changed-files@v40...v41.0.0\nv41\nChanges in v41.0.1\nWhat's Changed\n\nUpgraded to v41 by @​tj-actions-bot in tj-actions/changed-files#1811\nchore(deps): update dependency eslint-plugin-prettier to v5.1.2 by @​renovate in tj-actions/changed-files#1813\nfix: update characters escaped by safe output by @​jackton1 in tj-actions/changed-files#1815\n\n\n\n... (truncated)\n\n\nChangelog\nSourced from tj-actions/changed-files's changelog.\n\n41.0.0 - (2023-12-23)\n🐛 Bug Fixes\n\nUpdate safe output regex and the docs (#1805) (ff2f6e6)  - (tj-actions[bot])\n\n⏪ Reverts\n\nRevert ""chore(deps): update actions/download-artifact action to v4"" (#1806)\n\n(4f573fe)  - (Tonye Jack)\n🔄 Update\n\nUpdate README.md (6e79d6e)  - (Tonye Jack)\nUpdate README.md (d13ac19)  - (Tonye Jack)\nUpdate README.md (bb89f97)  - (Tonye Jack)\nUpdated README.md (#1810)\n\nCo-authored-by: renovate[bot]  (1864078)  - (tj-actions[bot])\n\nUpdate README.md (#1808)\n\n(47371c5)  - (Tonye Jack)\n📝 Other\n\nMerge pull request from GHSA-mcph-m25j-8j63\n\n\n\nfeat: add safe_output input enabled by default\n\n\nfix: migrate README to safe uses of interpolation\n\n\nfix: README uses typo\n\n\nfix: README examples to account for newlines\n\n\nfix: README examples missing safe_output\n\n\nfix: remove sanitization of '\n\n\nfix: also sanitize |&; (0102c07)  - (Jorge)\n\n\n⚙️ Miscellaneous Tasks\n\ndeps: Lock file maintenance (f495a03)  - (renovate[bot])\ndeps: Update dependency eslint-plugin-prettier to v5.1.1 (089842a)  - (renovate[bot])\ndeps: Lock file maintenance (787db06)  - (renovate[bot])\ndeps: Update dependency eslint-plugin-prettier to v5.1.0 (4ef6b56)  - (renovate[bot])\ndeps: Update typescript-eslint monorepo to v6.15.0 (c9ae347)  - (renovate[bot])\n\n\n\n... (truncated)\n\n\nCommits\n\n6e79d6e Update README.md\nd13ac19 Update README.md\nbb89f97 Update README.md\n1864078 Updated README.md (#1810)\nf495a03 chore(deps): lock file maintenance\n47371c5 Update README.md (#1808)\n4f573fe Revert ""chore(deps): update actions/download-artifact action to v4"" (#1806)\nff2f6e6 fix: update safe output regex and the docs (#1805)\n0102c07 Merge pull request from GHSA-mcph-m25j-8j63\n089842a chore(deps): update dependency eslint-plugin-prettier to v5.1.1\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the Security Alerts page.",5831,0,2
EbookFoundation/free-programming-books,318503,9861,MERGED,Update link of ISL,11022,2024-01-02 01:19:04+00:00,2024-01-02 14:40:19+00:00,2024-01-02 14:40:19+00:00,13.354166666666666,,0,1,2,1,"What does this PR do?\nImprove repo updating link.\nFor resources\nDescription\nUpdate the link of An Introduction to Statistical Learning book.\nWhy is this valuable (or not)?\nPrevious link didn't work. In current link both versions (Python and R) are offered.\nHow do we know it's really free?\nIt's the main website of the book and contains links to PDFs.\nFor book lists, is it a book? For course lists, is it a course? etc.\nIt's a book!\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",824,2,0
EbookFoundation/free-programming-books,318503,9861,CLOSED,chore(deps): bump tj-actions/changed-files from 40.2.1 to 41.0.1,11018,2023-12-30 11:19:09+00:00,2024-01-13 11:37:57+00:00,,336.31333333333333,,0,1,1,1,"Bumps tj-actions/changed-files from 40.2.1 to 41.0.1.\n\nRelease notes\nSourced from tj-actions/changed-files's releases.\n\nv41.0.1\nWhat's Changed\n\nUpgraded to v41 by @​tj-actions-bot in tj-actions/changed-files#1811\nchore(deps): update dependency eslint-plugin-prettier to v5.1.2 by @​renovate in tj-actions/changed-files#1813\nfix: update characters escaped by safe output by @​jackton1 in tj-actions/changed-files#1815\n\nFull Changelog: tj-actions/changed-files@v41...v41.0.1\nv41.0.0\n🔥 🔥 BREAKING CHANGE 🔥 🔥\nA new safe_output input is now available to prevent outputting unsafe filename characters (Enabled by default). This would escape characters in the filename that could be used for command injection.\n\n[!NOTE]\nThis can be disabled by setting the safe_output to false this comes with a recommendation to store all outputs generated in an environment variable first before using them.\n\nExample\n...\n    - name: Get changed files\n      id: changed-files\n      uses: tj-actions/changed-files@v40\n      with:\n        safe_output: false # set to false because we are using an environment variable to store the output and avoid command injection.\n- name: List all added files\n  env:\n    ADDED_FILES: ${{ steps.changed-files.outputs.added_files }}\n  run: |\n    for file in &quot;$ADDED_FILES&quot;; do\n      echo &quot;$file was added&quot;\n    done\n\n...\nWhat's Changed\n\nchore(deps): update typescript-eslint monorepo to v6.15.0 by @​renovate in tj-actions/changed-files#1801\nUpgraded to v40.2.3 by @​tj-actions-bot in tj-actions/changed-files#1800\nchore(deps): update dependency eslint-plugin-prettier to v5.1.0 by @​renovate in tj-actions/changed-files#1802\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1803\nchore(deps): update dependency eslint-plugin-prettier to v5.1.1 by @​renovate in tj-actions/changed-files#1804\nfix: update safe output regex and the docs by @​tj-actions-bot in tj-actions/changed-files#1805\nRevert ""chore(deps): update actions/download-artifact action to v4"" by @​jackton1 in tj-actions/changed-files#1806\nUpdate README.md by @​jackton1 in tj-actions/changed-files#1808\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1809\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1810\n\n\n\n... (truncated)\n\n\nChangelog\nSourced from tj-actions/changed-files's changelog.\n\n41.0.1 - (2023-12-24)\n🐛 Bug Fixes\n\nUpdate characters escaped by safe output (#1815) (716b1e1)  - (Tonye Jack)\n\n⚙️ Miscellaneous Tasks\n\ndeps: Update dependency eslint-plugin-prettier to v5.1.2 (7aaf10d)  - (renovate[bot])\n\n⬆️ Upgrades\n\nUpgraded to v41 (#1811)\n\nCo-authored-by: jackton1 jackton1@users.noreply.github.com (cc08e17)  - (tj-actions[bot])\n41.0.0 - (2023-12-23)\n🐛 Bug Fixes\n\nUpdate safe output regex and the docs (#1805) (ff2f6e6)  - (tj-actions[bot])\n\n⏪ Reverts\n\nRevert ""chore(deps): update actions/download-artifact action to v4"" (#1806)\n\n(4f573fe)  - (Tonye Jack)\n🔄 Update\n\nUpdate README.md (6e79d6e)  - (Tonye Jack)\nUpdate README.md (d13ac19)  - (Tonye Jack)\nUpdate README.md (bb89f97)  - (Tonye Jack)\nUpdated README.md (#1810)\n\nCo-authored-by: renovate[bot]  (1864078)  - (tj-actions[bot])\n\nUpdate README.md (#1808)\n\n(47371c5)  - (Tonye Jack)\n📝 Other\n\nMerge pull request from GHSA-mcph-m25j-8j63\n\n\n\nfeat: add safe_output input enabled by default\n\n\nfix: migrate README to safe uses of interpolation\n\n\nfix: README uses typo\n\n\n\n\n... (truncated)\n\n\nCommits\n\n716b1e1 fix: update characters escaped by safe output (#1815)\n7aaf10d chore(deps): update dependency eslint-plugin-prettier to v5.1.2\ncc08e17 Upgraded to v41 (#1811)\n6e79d6e Update README.md\nd13ac19 Update README.md\nbb89f97 Update README.md\n1864078 Updated README.md (#1810)\nf495a03 chore(deps): lock file maintenance\n47371c5 Update README.md (#1808)\n4f573fe Revert ""chore(deps): update actions/download-artifact action to v4"" (#1806)\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",5494,0,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Update free-programming-books-ru.md + R-book,11017,2023-12-27 23:23:38+00:00,2023-12-28 14:27:12+00:00,2023-12-28 14:27:12+00:00,15.059444444444445,,0,1,1,0,"What does this PR do?\nAdd resource\nFor resources\nHow do we know it's really free?\nAvailable freely on the official site of R-language\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",518,2,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Add Linear Algebra Done Right by Sheldon Axler,11016,2023-12-27 17:19:42+00:00,2023-12-27 17:47:41+00:00,2023-12-27 17:47:41+00:00,0.4663888888888889,,0,1,1,0,"What does this PR do?\nAdd resource in by subject section.\nFor resources\nWhy is this valuable (or not)?\nIt is an excellent resource to learn linear algebra.\nHow do we know it's really free?\nThe author specifies it in the first paragraph of his website. Also, you can check out his announcement on Twitter.\nFor book lists, is it a book? For course lists, is it a course? etc.\nIt is a book!\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",776,2,1
EbookFoundation/free-programming-books,318503,9861,CLOSED,Add Linear Algebra Done Right by Sheldon Axler,11015,2023-12-27 16:57:43+00:00,2023-12-27 17:09:57+00:00,,0.2038888888888889,,0,1,1,0,"What does this PR do?\nAdd resource in subjects section.\nFor resources\nWhy is this valuable (or not)?\nIt is an excellent resource to study linear algebra.\nHow do we know it's really free?\nThe author says it in the first paragraph of his website. Also, you can check out his announcement on Twitter.\nFor book lists, is it a book? For course lists, is it a course? etc.\nIt is a book!\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",769,1,1
EbookFoundation/free-programming-books,318503,9861,CLOSED,Create Keaseydaddykush890$$,11013,2023-12-23 17:20:27+00:00,2023-12-26 01:28:14+00:00,,56.12972222222222,,0,1,6,0,"Money funnel collector pull in\nWhat does this PR do?\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",662,2,0
EbookFoundation/free-programming-books,318503,9861,CLOSED,chore(deps): bump tj-actions/changed-files from 40.2.1 to 40.2.3,11012,2023-12-23 11:04:34+00:00,2023-12-30 11:19:14+00:00,,168.24444444444444,,0,1,1,1,"Bumps tj-actions/changed-files from 40.2.1 to 40.2.3.\n\nRelease notes\nSourced from tj-actions/changed-files's releases.\n\nv40.2.3\nWhat's Changed\n\nUpgraded to v40.2.2 by @​tj-actions-bot in tj-actions/changed-files#1787\nchore(deps): update dependency prettier to v3.1.1 by @​renovate in tj-actions/changed-files#1788\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1789\nchore(deps): update typescript-eslint monorepo to v6.14.0 by @​renovate in tj-actions/changed-files#1790\nchore(deps): update github/codeql-action action to v3 by @​renovate in tj-actions/changed-files#1792\nchore(deps): update actions/download-artifact action to v4 by @​renovate in tj-actions/changed-files#1793\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1795\nchore(deps): update dependency eslint to v8.56.0 by @​renovate in tj-actions/changed-files#1796\nchore(deps): update dependency @​types/node to v20.10.5 by @​renovate in tj-actions/changed-files#1797\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1798\nchore(deps): update actions/setup-node action to v4.0.1 by @​renovate in tj-actions/changed-files#1799\n\nFull Changelog: tj-actions/changed-files@v40...v40.2.3\nv40.2.2\nWhat's Changed\n\nUpgraded to v40.2.1 by @​tj-actions-bot in tj-actions/changed-files#1771\nchore(deps): update typescript-eslint monorepo to v6.13.2 by @​renovate in tj-actions/changed-files#1772\nchore: Create SECURITY.md by @​jackton1 in tj-actions/changed-files#1773\nchore: Update package.json by @​jackton1 in tj-actions/changed-files#1774\nchore(deps-dev): bump @​types/jest from 29.5.10 to 29.5.11 by @​dependabot in tj-actions/changed-files#1775\nchore(deps): update dependency typescript to v5.3.3 by @​renovate in tj-actions/changed-files#1777\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1778\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1779\nchore(deps): update dependency @​types/node to v20.10.4 by @​renovate in tj-actions/changed-files#1781\nchore(deps): bump tj-actions/branch-names from 7 to 8 by @​dependabot in tj-actions/changed-files#1782\ndocs: add rodrigorfk as a contributor for code, test, and bug by @​allcontributors in tj-actions/changed-files#1785\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1786\nfix: bug recovering deleted files for submodules by @​jackton1 in tj-actions/changed-files#1784\n\nFull Changelog: tj-actions/changed-files@v40...v40.2.2\n\n\n\nChangelog\nSourced from tj-actions/changed-files's changelog.\n\n40.2.3 - (2023-12-18)\n➕ Add\n\nAdded missing changes and modified dist assets.\n(af2816c)  - (GitHub Action)\n\n🔄 Update\n\nUpdate README.md (35da2a2)  - (Tonye Jack)\nUpdate README.md (e7023fa)  - (Tonye Jack)\n\n⚙️ Miscellaneous Tasks\n\ndeps: Update actions/setup-node action to v4.0.1 (56284d8)  - (renovate[bot])\ndeps: Lock file maintenance (35ad678)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.10.5 (ca0db0e)  - (renovate[bot])\ndeps: Update dependency eslint to v8.56.0 (03fcd0b)  - (renovate[bot])\ndeps: Lock file maintenance (2329d9f)  - (renovate[bot])\ndeps: Update actions/download-artifact action to v4 (#1793) (154ca89)  - (renovate[bot])\ndeps: Update github/codeql-action action to v3 (#1792) (449352f)  - (renovate[bot])\ndeps: Update typescript-eslint monorepo to v6.14.0 (7c18263)  - (renovate[bot])\ndeps: Lock file maintenance (88be287)  - (renovate[bot])\ndeps: Update dependency prettier to v3.1.1 (5513a5e)  - (renovate[bot])\n\n⬆️ Upgrades\n\nUpgraded to v40.2.2 (#1787)\n\nCo-authored-by: jackton1 jackton1@users.noreply.github.com (46550b6)  - (tj-actions[bot])\n40.2.2 - (2023-12-10)\n🐛 Bug Fixes\n\nBug recovering deleted files for submodules (#1784) (9454999)  - (Tonye Jack)\n\n➖ Remove\n\nDeleted .github/workflows/auto-approve.yml (a661767)  - (Tonye Jack)\n\n🔄 Update\n\nUpdated README.md (#1786)\n\nCo-authored-by: jackton1 jackton1@users.noreply.github.com (7611ff3)  - (tj-actions[bot])\n\nUpdate README.md (c116f52)  - (Tonye Jack)\nUpdated README.md (#1779)\n\nCo-authored-by: jackton1 jackton1@users.noreply.github.com (0b0b642)  - (tj-actions[bot])\n\n\n... (truncated)\n\n\nCommits\n\n56284d8 chore(deps): update actions/setup-node action to v4.0.1\n35ad678 chore(deps): lock file maintenance\nca0db0e chore(deps): update dependency @​types/node to v20.10.5\n03fcd0b chore(deps): update dependency eslint to v8.56.0\n35da2a2 Update README.md\n2329d9f chore(deps): lock file maintenance\n154ca89 chore(deps): update actions/download-artifact action to v4 (#1793)\n449352f chore(deps): update github/codeql-action action to v3 (#1792)\n7c18263 chore(deps): update typescript-eslint monorepo to v6.14.0\naf2816c Added missing changes and modified dist assets.\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",6314,0,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Added Node.js courses from Microsoft Learn,11011,2023-12-22 09:00:07+00:00,2023-12-26 14:47:18+00:00,2023-12-26 14:47:18+00:00,101.7863888888889,CHANGES_REQUESTED,3,1,1,0,"Node.js path from Microsoft Learn. The path is beginner-friendly. It features different modules that are suitable for beginners and intermediates.\nWhat does this PR do?\nAdd resource(s)\nFor resources\nDescription\nNode.js path from Microsoft Learn. The path is beginner-friendly. It's a path that uses JavaScript with Node.js to build apps with several modules good for beginners and intermediates\nWhy is this valuable (or not)?\nThey are free resources from Microsoft Learn, valuable to those who want to build apps using JavaScript with Node.js\nHow do we know it's really free?\nYes, it's listed as a free resource under Microsoft Learn together with all the other modules\nFor book lists, is it a book? For course lists, is it a course? etc.\nIt's a course(path)\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",1150,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,Create CODE_OF_CONDUCT-ml.md,11010,2023-12-16 15:57:44+00:00,2023-12-18 15:18:35+00:00,2023-12-18 15:18:35+00:00,47.3475,,0,2,24,0,"What does this PR do?\nIt adds the needed link that @eshellman asked for in PR #10264 while keeping the original commits\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.",415,3,0
EbookFoundation/free-programming-books,318503,9861,MERGED,Update README.md small grammar mistakes,11009,2023-12-16 14:53:47+00:00,2023-12-18 15:16:31+00:00,2023-12-18 15:16:31+00:00,48.37888888888889,,0,1,3,3,"Improve small mistakes :))\nWhat does this PR do?\nImprove repo\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",444,2,0
EbookFoundation/free-programming-books,318503,9861,CLOSED,chore(deps): bump actions/download-artifact from 3 to 4,11008,2023-12-16 11:15:55+00:00,2024-01-15 17:06:07+00:00,,725.8366666666667,,0,1,1,1,"Bumps actions/download-artifact from 3 to 4.\n\nRelease notes\nSourced from actions/download-artifact's releases.\n\nv4.0.0\nWhat's Changed\nThe release of upload-artifact@v4 and download-artifact@v4 are major changes to the backend architecture of Artifacts. They have numerous performance and behavioral improvements.\nFor more information, see the @​actions/artifact documentation.\nNew Contributors\n\n@​bflad made their first contribution in actions/download-artifact#194\n\nFull Changelog: actions/download-artifact@v3...v4.0.0\nv3.0.2\n\nBump @actions/artifact to v1.1.1 - actions/download-artifact#195\nFixed a bug in Node16 where if an HTTP download finished too quickly (<1ms, e.g. when it's mocked) we attempt to delete a temp file that has not been created yet actions/toolkit#1278\n\nv3.0.1\n\nBump @​actions/core to 1.10.0\n\n\n\n\nCommits\n\n7a1cd32 Merge pull request #246 from actions/v4-beta\n8f32874 licensed cache\nb5ff844 Merge pull request #245 from actions/robherley/v4-documentation\nf07a0f7 Update README.md\n7226129 update test workflow to use different artifact names for matrix\nada9446 update docs and bump @​actions/artifact\n7eafc8b Merge pull request #244 from actions/robherley/bump-toolkit\n3132d12 consume latest toolkit\n5be1d38 Merge pull request #243 from actions/robherley/v4-beta-updates\n465b526 consume latest @​actions/toolkit\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",2879,2,2
EbookFoundation/free-programming-books,318503,9861,CLOSED,chore(deps): bump actions/upload-artifact from 3 to 4,11007,2023-12-16 11:15:52+00:00,2024-01-15 17:06:23+00:00,,725.8419444444445,,0,2,2,2,"Bumps actions/upload-artifact from 3 to 4.\n\nRelease notes\nSourced from actions/upload-artifact's releases.\n\nv4.0.0\nWhat's Changed\nThe release of upload-artifact@v4 and download-artifact@v4 are major changes to the backend architecture of Artifacts. They have numerous performance and behavioral improvements.\nFor more information, see the @​actions/artifact documentation.\nNew Contributors\n\n@​vmjoseph made their first contribution in actions/upload-artifact#464\n\nFull Changelog: actions/upload-artifact@v3...v4.0.0\nv3.1.3\nWhat's Changed\n\nchore(github): remove trailing whitespaces by @​ljmf00 in actions/upload-artifact#313\nBump @​actions/artifact version to v1.1.2 by @​bethanyj28 in actions/upload-artifact#436\n\nFull Changelog: actions/upload-artifact@v3...v3.1.3\nv3.1.2\n\nUpdate all @actions/* NPM packages to their latest versions- #374\nUpdate all dev dependencies to their most recent versions - #375\n\nv3.1.1\n\nUpdate actions/core package to latest version to remove set-output deprecation warning #351\n\nv3.1.0\nWhat's Changed\n\nBump @​actions/artifact to v1.1.0 (actions/upload-artifact#327)\n\nAdds checksum headers on artifact upload (actions/toolkit#1095) (actions/toolkit#1063)\n\n\n\n\n\n\nCommits\n\nc7d193f Merge pull request #466 from actions/v4-beta\n13131bb licensed cache\n4a6c273 Merge branch 'main' into v4-beta\nf391bb9 Merge pull request #465 from actions/robherley/v4-documentation\n9653d03 Apply suggestions from code review\n875b630 add limitations section\necb2146 add compression example\n5e7604f trim some repeated info\nd6437d0 naming\n1b56155 s/v4-beta/v4/g\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",3126,2,2
EbookFoundation/free-programming-books,318503,9861,CLOSED,chore(deps): bump tj-actions/changed-files from 40.2.1 to 40.2.2,11006,2023-12-16 11:15:49+00:00,2023-12-23 11:04:39+00:00,,167.8138888888889,,0,1,1,1,"Bumps tj-actions/changed-files from 40.2.1 to 40.2.2.\n\nRelease notes\nSourced from tj-actions/changed-files's releases.\n\nv40.2.2\nWhat's Changed\n\nUpgraded to v40.2.1 by @​tj-actions-bot in tj-actions/changed-files#1771\nchore(deps): update typescript-eslint monorepo to v6.13.2 by @​renovate in tj-actions/changed-files#1772\nchore: Create SECURITY.md by @​jackton1 in tj-actions/changed-files#1773\nchore: Update package.json by @​jackton1 in tj-actions/changed-files#1774\nchore(deps-dev): bump @​types/jest from 29.5.10 to 29.5.11 by @​dependabot in tj-actions/changed-files#1775\nchore(deps): update dependency typescript to v5.3.3 by @​renovate in tj-actions/changed-files#1777\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1778\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1779\nchore(deps): update dependency @​types/node to v20.10.4 by @​renovate in tj-actions/changed-files#1781\nchore(deps): bump tj-actions/branch-names from 7 to 8 by @​dependabot in tj-actions/changed-files#1782\ndocs: add rodrigorfk as a contributor for code, test, and bug by @​allcontributors in tj-actions/changed-files#1785\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1786\nfix: bug recovering deleted files for submodules by @​jackton1 in tj-actions/changed-files#1784\n\nFull Changelog: tj-actions/changed-files@v40...v40.2.2\n\n\n\nChangelog\nSourced from tj-actions/changed-files's changelog.\n\n40.2.2 - (2023-12-10)\n🐛 Bug Fixes\n\nBug recovering deleted files for submodules (#1784) (9454999)  - (Tonye Jack)\n\n➖ Remove\n\nDeleted .github/workflows/auto-approve.yml (a661767)  - (Tonye Jack)\n\n🔄 Update\n\nUpdated README.md (#1786)\n\nCo-authored-by: jackton1 jackton1@users.noreply.github.com (7611ff3)  - (tj-actions[bot])\n\nUpdate README.md (c116f52)  - (Tonye Jack)\nUpdated README.md (#1779)\n\nCo-authored-by: jackton1 jackton1@users.noreply.github.com (0b0b642)  - (tj-actions[bot])\n\nUpdate README.md (f732c37)  - (Tonye Jack)\nUpdated README.md (#1778)\n\nCo-authored-by: jackton1 jackton1@users.noreply.github.com (04c0045)  - (tj-actions[bot])\n\nUpdate README.md (5cee511)  - (Tonye Jack)\nUpdate README.md (399525a)  - (Tonye Jack)\nUpdate README.md (c075bd2)  - (Tonye Jack)\nUpdate README.md (2918913)  - (Tonye Jack)\n\n📚 Documentation\n\nAdd rodrigorfk as a contributor for code, test, and bug (#1785) (187cf1e)  - (allcontributors[bot])\n\n⚙️ Miscellaneous Tasks\n\ndeps: Bump tj-actions/branch-names from 7 to 8 (#1782) (e1e532c)  - (dependabot[bot])\ndeps: Update dependency @​types/node to v20.10.4 (dfecec4)  - (renovate[bot])\ndeps: Update dependency typescript to v5.3.3 (208b83f)  - (renovate[bot])\ndeps-dev: Bump @​types/jest from 29.5.10 to 29.5.11 (#1775) (ccb109a)  - (dependabot[bot])\nUpdate package.json (#1774) (95642a1)  - (Tonye Jack)\nCreate SECURITY.md (#1773) (726e06f)  - (Tonye Jack)\ndeps: Update typescript-eslint monorepo to v6.13.2 (d96fe5d)  - (renovate[bot])\n\n⬆️ Upgrades\n\nUpgraded to v40.2.1 (#1771)\n\nCo-authored-by: jackton1 jackton1@users.noreply.github.com (4ae611e)  - (tj-actions[bot])\n\n\n\nCommits\n\n9454999 fix: bug recovering deleted files for submodules (#1784)\n7611ff3 Updated README.md (#1786)\n187cf1e docs: add rodrigorfk as a contributor for code, test, and bug (#1785)\ne1e532c chore(deps): bump tj-actions/branch-names from 7 to 8 (#1782)\ndfecec4 chore(deps): update dependency @​types/node to v20.10.4\nc116f52 Update README.md\n0b0b642 Updated README.md (#1779)\nf732c37 Update README.md\n04c0045 Updated README.md (#1778)\n5cee511 Update README.md\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",5103,0,1
EbookFoundation/free-programming-books,318503,9861,MERGED,"Added Proofs and Types book by Jean-Yves Girard, Paul Taylor and Yves Lafont",11005,2023-12-16 01:30:55+00:00,2023-12-18 15:15:01+00:00,2023-12-18 15:15:00+00:00,61.735,,1,1,1,0,"What does this PR do?\nAdd resource\nFor resources\nDescription\nProofs and Types book by Jean-Yves Girard, Yves Lafont, Paul Taylor\nWhy is this valuable (or not)?\nGoods book about  Typed Lambda-calculus\nHow do we know it's really free?\nThe author Paul Taylor himself give pdf link on his website\nFor book lists, is it a book? For course lists, is it a course? etc.\nBooks published by Cambridge University Press in 1989\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",806,3,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Moved Embedded Systems from Language Index to Subjects Index,11004,2023-12-14 15:47:01+00:00,2023-12-14 16:15:28+00:00,2023-12-14 16:15:28+00:00,0.4741666666666667,,0,2,11,11,"What does this PR do?\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\nMoved Embedded Systems from Programming Languages Index to Subjects Index  see issue  #10995\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",724,2,1
EbookFoundation/free-programming-books,318503,9861,CLOSED,add guide to cp book(changes made),11003,2023-12-13 18:12:45+00:00,2023-12-15 17:26:34+00:00,,47.23027777777778,,1,1,1,0,"What does this PR do?\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n[ y] Read our contributing guidelines.\n[y ] Search for duplicates.\n[ y] Include author(s) and platform where appropriate.\n[ y] Put lists in alphabetical order, correct spacing.\n[ y] Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",650,3,2
EbookFoundation/free-programming-books,318503,9861,MERGED,Add Latex Cheat Sheet,11002,2023-12-12 16:39:03+00:00,2023-12-13 14:07:47+00:00,2023-12-13 14:07:47+00:00,21.47888888888889,,1,1,6,0,"What does this PR do?\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n[ y] Read our contributing guidelines.\n[y ] Search for duplicates.\n Include author(s) and platform where appropriate.\n[ y] Put lists in alphabetical order, correct spacing.\n[y ] Add needed indications (PDF, access notes, under construction).\n[ y] Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",650,2,2
EbookFoundation/free-programming-books,318503,9861,CLOSED,Update free-programming-interactive-tutorials-en.md,11001,2023-12-12 13:43:35+00:00,2023-12-12 17:53:21+00:00,,4.1627777777777775,,0,1,1,0,"What does this PR do?\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\nFor resources\nDescription\nadded cp-algorithms website for programming\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n[y ] Read our contributing guidelines.\n[ y] Search for duplicates.\n[ y] Include author(s) and platform where appropriate.\n[ y] Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",691,2,2
EbookFoundation/free-programming-books,318503,9861,MERGED,Add Malayalam Translation (Fix for PR 10014),11000,2023-12-10 04:22:30+00:00,2023-12-12 17:48:44+00:00,2023-12-12 17:48:44+00:00,61.437222222222225,,0,2,34,2,"What does this PR do?\nAdds Malayalam translation to the repo\n### Description\nThis is a fix for PR 10014. With regard to change requests from rashivkp\nWhy is this valuable (or not)?\nIt is creating a fix for a PR that had the help wanted tag\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.",539,2,1
EbookFoundation/free-programming-books,318503,9861,MERGED,chore(deps): bump tj-actions/changed-files from 40.1.1 to 40.2.1,10999,2023-12-09 11:17:20+00:00,2023-12-11 04:10:02+00:00,2023-12-11 04:10:02+00:00,40.87833333333333,,1,1,1,1,"Bumps tj-actions/changed-files from 40.1.1 to 40.2.1.\n\nRelease notes\nSourced from tj-actions/changed-files's releases.\n\nv40.2.1\nWhat's Changed\n\nUpgraded to v40.2.0 by @​tj-actions-bot in tj-actions/changed-files#1746\nchore: update README.md by @​jackton1 in tj-actions/changed-files#1749\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1750\nchore(deps): update typescript-eslint monorepo to v6.13.0 by @​renovate in tj-actions/changed-files#1751\nchore(deps): update typescript-eslint monorepo to v6.13.1 by @​renovate in tj-actions/changed-files#1753\nchore: remove unused job by @​jackton1 in tj-actions/changed-files#1754\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1755\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1757\nsecurity: remove usage of pull_request_target event from test.yml by @​jackton1 in tj-actions/changed-files#1758\nchore(deps): update dependency @​types/node to v20.10.1 by @​renovate in tj-actions/changed-files#1761\ntest: verify bug writing outputs when files_yaml is used by @​jackton1 in tj-actions/changed-files#1762\nsecurity: Update test.yml removing pull_request_review event by @​jackton1 in tj-actions/changed-files#1763\nchore(deps): update dependency @​types/node to v20.10.2 by @​renovate in tj-actions/changed-files#1764\nchore(deps): update dependency eslint to v8.55.0 by @​renovate in tj-actions/changed-files#1765\nchore(deps): update dependency eslint-config-prettier to v9.1.0 by @​renovate in tj-actions/changed-files#1766\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1767\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1769\nchore(deps): update dependency @​types/node to v20.10.3 by @​renovate in tj-actions/changed-files#1768\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1770\n\nFull Changelog: tj-actions/changed-files@v40...v40.2.1\nv40.2.0\nWhat's Changed\n\nUpgraded to v40.1.1 by @​tj-actions-bot in tj-actions/changed-files#1704\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1706\nchore(deps): update dependency prettier to v3.1.0 by @​renovate in tj-actions/changed-files#1707\nchore(deps): update typescript-eslint monorepo to v6.11.0 by @​renovate in tj-actions/changed-files#1708\nchore: Update update-readme.yml by @​jackton1 in tj-actions/changed-files#1709\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1710\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1711\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1712\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1713\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1714\nchore(deps): update dependency @​types/node to v20.9.1 by @​renovate in tj-actions/changed-files#1715\nchore(deps): update dependency eslint to v8.54.0 by @​renovate in tj-actions/changed-files#1716\nchore(deps): update dependency @​types/node to v20.9.2 by @​renovate in tj-actions/changed-files#1717\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1720\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1721\nchore: simplify matrix example workflow by @​jackton1 in tj-actions/changed-files#1719\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1722\nchore(deps): update typescript-eslint monorepo to v6.12.0 by @​renovate in tj-actions/changed-files#1723\nchore(deps): update dependency typescript to v5.3.2 by @​renovate in tj-actions/changed-files#1724\nBump @​types/node from 20.9.2 to 20.9.3 by @​dependabot in tj-actions/changed-files#1725\nchore(deps): update dependency @​types/jest to v29.5.9 by @​renovate in tj-actions/changed-files#1729\nchore(deps): update dependency @​types/micromatch to v4.0.6 by @​renovate in tj-actions/changed-files#1731\nchore(deps): update dependency @​types/lodash to v4.14.202 by @​renovate in tj-actions/changed-files#1730\n\n\n\n... (truncated)\n\n\nChangelog\nSourced from tj-actions/changed-files's changelog.\n\n40.2.1 - (2023-12-04)\n➕ Add\n\nAdded missing changes and modified dist assets.\n(1c93849)  - (GitHub Action)\nAdded missing changes and modified dist assets.\n(ee5ef75)  - (GitHub Action)\n\n➖ Remove\n\nDeleted .github/workflows/greetings.yml (f91c9fe)  - (Tonye Jack)\n\n🔄 Update\n\nUpdated README.md (#1769)\n\nCo-authored-by: jackton1 jackton1@users.noreply.github.com (66b77cb)  - (tj-actions[bot])\n\nUpdate README.md (10bfa98)  - (Tonye Jack)\nUpdated README.md (#1767)\n\nCo-authored-by: jackton1 jackton1@users.noreply.github.com\nCo-authored-by: Tonye Jack jtonye@ymail.com (9e46b4f)  - (tj-actions[bot])\n\nUpdate README.md (3bf6172)  - (Tonye Jack)\nUpdated README.md (#1755)\n\nCo-authored-by: jackton1 jackton1@users.noreply.github.com (48427af)  - (tj-actions[bot])\n\nUpdate README.md (742ed36)  - (Tonye Jack)\nUpdated README.md (#1750)\n\nCo-authored-by: repo-ranger[bot]  (86cabf5)  - (tj-actions[bot])\n📝 Other\n\nUpdate test.yml removing pull_request_review event (#1763) (af6bdde)  - (Tonye Jack)\nRemove usage of pull_request_target event from test.yml (#1758) (3ca6b80)  - (Tonye Jack)\n\n🧪 Testing\n\nVerify bug writing outputs when files_yaml is used (#1762) (fc1fb2b)  - (Tonye Jack)\n\n⚙️ Miscellaneous Tasks\n\ndeps: Lock file maintenance (ba558db)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.10.3 (bf19fa2)  - (renovate[bot])\ndeps: Update dependency eslint-config-prettier to v9.1.0 (45581f0)  - (renovate[bot])\ndeps: Update dependency eslint to v8.55.0 (9ebb48b)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.10.2 (4e2dca3)  - (renovate[bot])\ndeps: Update dependency @​types/node to v20.10.1 (883b4cc)  - (renovate[bot])\ndeps: Lock file maintenance (42fe158)  - (renovate[bot])\n\n\n\n... (truncated)\n\n\nCommits\n\n1c93849 Added missing changes and modified dist assets.\nba558db chore(deps): lock file maintenance\nbf19fa2 chore(deps): update dependency @​types/node to v20.10.3\n66b77cb Updated README.md (#1769)\n10bfa98 Update README.md\n9e46b4f Updated README.md (#1767)\n3bf6172 Update README.md\n45581f0 chore(deps): update dependency eslint-config-prettier to v9.1.0\n9ebb48b chore(deps): update dependency eslint to v8.55.0\n4e2dca3 chore(deps): update dependency @​types/node to v20.10.2\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",7878,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,chore(deps): bump actions/stale from 8 to 9,10998,2023-12-09 11:17:15+00:00,2023-12-11 04:09:38+00:00,2023-12-11 04:09:38+00:00,40.87305555555555,,1,1,2,2,"Bumps actions/stale from 8 to 9.\n\nRelease notes\nSourced from actions/stale's releases.\n\nv9.0.0\nBreaking Changes\n\nAction is now stateful: If the action ends because of operations-per-run then the next run will start from the first unprocessed issue skipping the issues processed during the previous run(s). The state is reset when all the issues are processed. This should be considered for scheduling workflow runs.\nVersion 9 of this action updated the runtime to Node.js 20. All scripts are now run with Node.js 20 instead of Node.js 16 and are affected by any breaking changes between Node.js 16 and 20.\n\nWhat Else Changed\n\nPerformance optimization that removes unnecessary API calls by @​dsame #1033 fixes #792\nLogs displaying current github API rate limit by @​dsame #1032 addresses #1029\n\nFor more information, please read the action documentation and its section about statefulness\nNew Contributors\n\n@​jmeridth made their first contribution in actions/stale#984\n@​nikolai-laevskii made their first contribution in actions/stale#1020\n@​dusan-trickovic made their first contribution in actions/stale#1056\n@​aparnajyothi-y made their first contribution in actions/stale#1110\n\nFull Changelog: actions/stale@v8...v9.0.0\n\n\n\nChangelog\nSourced from actions/stale's changelog.\n\nChangelog\n[7.0.0]\n⚠️ Breaking change ⚠️\n\nAllow daysBeforeStale options to be float by @​irega in actions/stale#841\nUse cache in check-dist.yml by @​jongwooo in actions/stale#876\nfix print outputs step in existing workflows by @​irega in actions/stale#859\nUpdate issue and PR templates, add/delete workflow files by @​IvanZosimov in actions/stale#880\nUpdate how stale handles exempt items by @​johnsudol in actions/stale#874\n\n[6.0.1]\nUpdate @​actions/core to v1.10.0 (#839)\n[6.0.0]\n⚠️ Breaking change ⚠️\nIssues/PRs default close-issue-reason is now not_planned(#789)\n[5.1.0]\nDon't process stale issues right after they're marked stale\n[Add close-issue-reason option]#764#772\nVarious dependabot/dependency updates\n4.1.0 (2021-07-14)\nFeatures\n\nAbility to exempt draft PRs\n\n4.0.0 (2021-07-14)\nFeatures\n\noptions: simplify config by removing skip stale message options (#457) (6ec637d), closes #405 #455\noutput: print output parameters (#458) (3e6d35b)\n\nBug Fixes\n\ndry-run: forbid mutations in dry-run (#500) (f1017f3), closes #499\nlogs: coloured logs (#465) (5fbbfba)\noperations: fail fast the current batch to respect the operations limit (#474) (5f6f311), closes #466\nlabel comparison: make label comparison case insensitive #517, closes #516\nfiltering comments by actor could have strange behavior: ""stale"" comments are now detected based on if the message is the stale message not who made the comment(#519), fixes #441, #509, #518\n\nBreaking Changes\n\n\n... (truncated)\n\n\nCommits\n\n28ca103 Upgrade Node to v20 (#1110)\nb69b346 build(deps-dev): bump @​types/node from 18.16.18 to 20.5.1 (#1079)\n88a6f4f build(deps-dev): bump typescript from 5.1.3 to 5.2.2 (#1083)\n796531a Merge pull request #1080 from akv-platform/fix-delete-cache\n8986f62 Don not try to delete cache if it does not exists\ncab99b3 fix typo proceeded/processed\n184e7af Merge pull request #1064 from actions/dependabot/npm_and_yarn/typescript-esli...\n523885c chore: update eslint-plugin, parser and eslint-plugin-jest\n2487a1d build(deps-dev): bump @​typescript-eslint/eslint-plugin\n60c722e Merge pull request #1063 from actions/dependabot/npm_and_yarn/jest-29.6.2\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",4993,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,Add two Smalltalk books in pt-BR,10997,2023-12-05 17:13:49+00:00,2023-12-05 18:16:56+00:00,2023-12-05 18:16:56+00:00,1.0519444444444443,CHANGES_REQUESTED,2,1,7,0,"What does this PR do?\nAdd resources.\nFor resources\nDescription\nTwo books on Smalltalk in Brazilian Portuguese.\nWhy is this valuable (or not)?\nThere are no Smalltalk books in Brazilian Portuguese in the current list.\nHow do we know it's really free?\nThe books were made available by the authors (one through ResearchGate and the other by the university where the author works).\nFor book lists, is it a book? For course lists, is it a course? etc.\nThey are two different books, unrelated to each other.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",891,2,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Update problem-sets-competitive-programming.md,10996,2023-12-04 13:21:17+00:00,2023-12-04 18:26:05+00:00,2023-12-04 18:26:05+00:00,5.08,,0,1,1,0,"Add DamnVulnerableDefi, A Web3 CFT challenge to exploit Solidity contracts.\nWhat does this PR do?\nAdd a CTF challenge based on Web3 Decentralised Finance.\nFor resources\nProblem sets & competitive programming\nDescription\nDamnVulnerableDefi Allows you to test your DeFi skills but trying to send transaction in order to exploit poorly made solidity contracts.\nIt raises awareness on the dangers of poorly coded solidity contracts.\nWhy is this valuable (or not)?\nDeFi and Web3 are a big thing on their own, having ressources for CTF on those topics is very valuable.\nHow do we know it's really free?\nThis website is a CTF website at everyone's disposition.\nWeb3 is by definition free for everyone.\nBtw, thank you for maintaining this very nice project, it is very helpful !",783,2,3
EbookFoundation/free-programming-books,318503,9861,CLOSED,chore(deps): bump tj-actions/changed-files from 40.1.1 to 40.2.0,10994,2023-12-02 11:57:15+00:00,2023-12-09 11:17:25+00:00,,167.3361111111111,,0,1,1,1,"Bumps tj-actions/changed-files from 40.1.1 to 40.2.0.\n\nRelease notes\nSourced from tj-actions/changed-files's releases.\n\nv40.2.0\nWhat's Changed\n\nUpgraded to v40.1.1 by @​tj-actions-bot in tj-actions/changed-files#1704\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1706\nchore(deps): update dependency prettier to v3.1.0 by @​renovate in tj-actions/changed-files#1707\nchore(deps): update typescript-eslint monorepo to v6.11.0 by @​renovate in tj-actions/changed-files#1708\nchore: Update update-readme.yml by @​jackton1 in tj-actions/changed-files#1709\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1710\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1711\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1712\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1713\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1714\nchore(deps): update dependency @​types/node to v20.9.1 by @​renovate in tj-actions/changed-files#1715\nchore(deps): update dependency eslint to v8.54.0 by @​renovate in tj-actions/changed-files#1716\nchore(deps): update dependency @​types/node to v20.9.2 by @​renovate in tj-actions/changed-files#1717\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1720\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1721\nchore: simplify matrix example workflow by @​jackton1 in tj-actions/changed-files#1719\nUpdated README.md by @​tj-actions-bot in tj-actions/changed-files#1722\nchore(deps): update typescript-eslint monorepo to v6.12.0 by @​renovate in tj-actions/changed-files#1723\nchore(deps): update dependency typescript to v5.3.2 by @​renovate in tj-actions/changed-files#1724\nBump @​types/node from 20.9.2 to 20.9.3 by @​dependabot in tj-actions/changed-files#1725\nchore(deps): update dependency @​types/jest to v29.5.9 by @​renovate in tj-actions/changed-files#1729\nchore(deps): update dependency @​types/micromatch to v4.0.6 by @​renovate in tj-actions/changed-files#1731\nchore(deps): update dependency @​types/lodash to v4.14.202 by @​renovate in tj-actions/changed-files#1730\nBump @​types/lodash from 4.14.201 to 4.14.202 by @​dependabot in tj-actions/changed-files#1728\nBump @​types/micromatch from 4.0.5 to 4.0.6 by @​dependabot in tj-actions/changed-files#1727\nBump @​types/jest from 29.5.8 to 29.5.9 by @​dependabot in tj-actions/changed-files#1726\nBump @​types/node from 20.9.3 to 20.9.4 by @​dependabot in tj-actions/changed-files#1732\nchore(deps): update dependency @​types/jest to v29.5.10 by @​renovate in tj-actions/changed-files#1734\nchore(deps): update dependency @​types/node to v20.9.5 by @​renovate in tj-actions/changed-files#1736\nchore(deps): update dependency @​types/node to v20.10.0 by @​renovate in tj-actions/changed-files#1737\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1743\nfeat: add support for passing branch name to the base_sha and sha inputs by @​jackton1 in tj-actions/changed-files#1742\nfix: prevent similar commit hashes error when using the branch name by @​jackton1 in tj-actions/changed-files#1744\nfix: prevent similar commit hashes error when using the branch name by @​jackton1 in tj-actions/changed-files#1745\n\nFull Changelog: tj-actions/changed-files@v40...v40.2.0\n\n\n\nChangelog\nSourced from tj-actions/changed-files's changelog.\n\n40.2.0 - (2023-11-27)\n🚀 Features\n\nAdd support for passing branch name to the base_sha and sha inputs (#1742) (2139fa1)  - (Tonye Jack)\n\n🐛 Bug Fixes\n\nPrevent similar commit hashes error when using the branch name (#1745) (da093c1)  - (Tonye Jack)\nPrevent similar commit hashes error when using the branch name (#1744) (c634be9)  - (Tonye Jack)\n\n📦 Bumps\n\nBump @​types/node from 20.9.3 to 20.9.4 (#1732)\n\nSigned-off-by: dependabot[bot] support@github.com\nCo-authored-by: dependabot[bot]  (066e72a)  - (dependabot[bot])\n\nBump @​types/jest from 29.5.8 to 29.5.9 (#1726)\n\nCo-authored-by: dependabot[bot] \nCo-authored-by: repo-ranger[bot] \n(c23e564)  - (dependabot[bot])\n\nBump @​types/micromatch from 4.0.5 to 4.0.6 (#1727)\n\nCo-authored-by: dependabot[bot] \nCo-authored-by: repo-ranger[bot] \n(c008025)  - (dependabot[bot])\n\nBump @​types/lodash from 4.14.201 to 4.14.202 (#1728)\n\nSigned-off-by: dependabot[bot] support@github.com\nCo-authored-by: dependabot[bot] \nCo-authored-by: repo-ranger[bot]  (3a3d3a2)  - (dependabot[bot])\n\nBump @​types/node from 20.9.2 to 20.9.3 (#1725)\n\nSigned-off-by: dependabot[bot] support@github.com\nCo-authored-by: dependabot[bot]  (4da6e32)  - (dependabot[bot])\n➕ Add\n\nAdded missing changes and modified dist assets.\n(607d5dd)  - (GitHub Action)\nAdded missing changes and modified dist assets.\n(7f1c4cb)  - (GitHub Action)\nAdded missing changes and modified dist assets.\n(1cf54bb)  - (GitHub Action)\nAdded missing changes and modified dist assets.\n(d8d3669)  - (GitHub Action)\n\n🔄 Update\n\n\n... (truncated)\n\n\nCommits\n\nda093c1 fix: prevent similar commit hashes error when using the branch name (#1745)\nc634be9 fix: prevent similar commit hashes error when using the branch name (#1744)\n2139fa1 feat: add support for passing branch name to the base_sha and sha inputs (#1742)\n6784c9e Update README.md\n607d5dd Added missing changes and modified dist assets.\nd588360 chore(deps): lock file maintenance\n90f2c0c Update greetings.yml\n0d6e9b7 chore(deps): update dependency @​types/node to v20.10.0\n8f90cc1 chore(deps): update dependency @​types/node to v20.9.5\n75758bc chore(deps): update dependency @​types/jest to v29.5.10\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",7146,0,1
EbookFoundation/free-programming-books,318503,9861,CLOSED,Adding Move smart contract programming language to the list free-programming-books-langs.md,10992,2023-12-01 04:18:05+00:00,2024-02-15 07:53:15+00:00,,1827.5861111111112,,0,1,6,0,"Move is a safe and reliable smart contract language used currently by Sui and Aptos blockchains. It is originally created by Diem. You can read language white paper on Diem developers website.\nThis book is a collection of all the information about Move language.\nWhat does this PR do?\nAdds resource\nWhy is this valuable (or not)?\nSmart contract languages are evolving as we speak and there is a great demand for developers in this area. Aptos and Sui, blockchains that use Move language are popular blockchain technologies with diverse ecosystems.\nHow do we know it's really free?\nIt is created by Damir Shamanaev, and it has gnu general public v3 license on damirka/move-book",683,3,4
EbookFoundation/free-programming-books,318503,9861,MERGED,Added LaTeX book in free-programming-books-es.md,10991,2023-11-30 17:27:27+00:00,2023-12-04 18:05:05+00:00,2023-12-04 18:05:05+00:00,96.62722222222222,,1,1,1,0,"What does this PR do?\nAdd resource\nFor resources\nDescription\nAdded a free PDF book for learn LaTeX in Spanish.\nWhy is this valuable (or not)?\nAdds a book for learn LaTeX in Spanish.\nHow do we know it's really free?\nThe link is available to everyone.\nFor book lists, is it a book? For course lists, is it a course? etc.\nIt's a book.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",722,3,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Roll up Three,10988,2023-11-21 19:51:24+00:00,2023-11-22 00:55:07+00:00,2023-11-22 00:55:06+00:00,5.061944444444444,,2,4,7,2,rescued from problematic branches,33,1,4
EbookFoundation/free-programming-books,318503,9861,MERGED,Update CODE_OF_CONDUCT-mr.md for formatting and other small changes,10987,2023-11-21 14:30:50+00:00,2023-11-21 18:24:40+00:00,2023-11-21 18:24:40+00:00,3.897222222222222,,0,1,1,3,"What does this PR do?\nImprove repo\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",580,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,"Roll up, the second",10986,2023-11-21 13:37:53+00:00,2023-11-21 13:58:15+00:00,2023-11-21 13:58:15+00:00,0.33944444444444444,,0,2,1,6,some PRs couldn't be merged because of reasons. the proposed resource are included here,87,1,0
EbookFoundation/free-programming-books,318503,9861,MERGED,chore(deps): bump actions/github-script from 6 to 7,10985,2023-11-18 11:34:17+00:00,2023-11-21 22:56:36+00:00,2023-11-21 22:56:36+00:00,83.37194444444444,,1,1,1,1,"Bumps actions/github-script from 6 to 7.\n\nRelease notes\nSourced from actions/github-script's releases.\n\nv7.0.0\nWhat's Changed\n\nAdd base-url option by @​robandpdx in actions/github-script#429\nExpose async-function argument type by @​viktorlott in actions/github-script#402, see for details https://github.com/actions/github-script#use-scripts-with-jsdoc-support\nUpdate dependencies and use Node 20 by @​joshmgross in actions/github-script#425\n\nNew Contributors\n\n@​navarroaxel made their first contribution in actions/github-script#285\n@​robandpdx made their first contribution in actions/github-script#429\n@​viktorlott made their first contribution in actions/github-script#402\n\nFull Changelog: actions/github-script@v6.4.1...v7.0.0\nv6.4.1\nWhat's Changed\n\nAdd @​octokit/plugin-request-log, to produce debug output for requests by @​mjpieters in actions/github-script#358\nfix input handling by @​mjpieters in actions/github-script#357\nRemove unused dependencies by @​mjpieters in actions/github-script#356\nDefault debug to current runner debug state by @​mjpieters in actions/github-script#363\n\nNew Contributors\n\n@​mjpieters made their first contribution in actions/github-script#358\n\nFull Changelog: actions/github-script@v6.4.0...v6.4.1\nv6.4.0\nWhat's Changed\n\nBump json5 from 2.1.3 to 2.2.3 by @​dependabot in actions/github-script#319\nBump minimatch from 3.0.4 to 3.1.2 by @​dependabot in actions/github-script#320\nAdd node-fetch by @​danmichaelo in actions/github-script#321\n\nNew Contributors\n\n@​jongwooo made their first contribution in actions/github-script#313\n@​austinvazquez made their first contribution in actions/github-script#306\n@​danmichaelo made their first contribution in actions/github-script#321\n\nFull Changelog: actions/github-script@v6.3.3...v6.4.0\nv6.3.3\nWhat's Changed\n\nUpdate @actions/glob to 0.3.0 by @​nineinchnick in actions/github-script#279\n\nNew Contributors\n\n@​nineinchnick made their first contribution in actions/github-script#279\n\nFull Changelog: actions/github-script@v6.3.2...v6.3.3\nv6.3.2\nWhat's Changed\n\nUpdate @​actions/core to 1.10.0 by @​rentziass in actions/github-script#295\n\n\n\n... (truncated)\n\n\nCommits\n\n60a0d83 Merge pull request #440 from actions/joshmgross/v7.0.1\nb7fb200 Update version to 7.0.1\n12e22ed Merge pull request #439 from actions/joshmgross/avoid-setting-base-url\nd319f8f Avoid setting baseUrl to undefined when input is not provided\ne69ef54 Merge pull request #425 from actions/joshmgross/node-20\nee0914b Update licenses\nd6fc56f Use @types/node for Node 20\n384d6cf Fix quotations in tests\n8472492 Only validate GraphQL previews\n84903f5 Remove node-fetch from type\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",4207,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,Clone #10695,10984,2023-11-17 16:44:27+00:00,2023-11-17 17:00:14+00:00,2023-11-17 17:00:14+00:00,0.26305555555555554,,0,1,1,0,clone #10695 to figure out linter issue,39,2,2
EbookFoundation/free-programming-books,318503,9861,MERGED,replace (翻訳) with trl:,10983,2023-11-17 16:27:02+00:00,2023-11-17 17:40:42+00:00,2023-11-17 17:40:42+00:00,1.2277777777777779,,0,1,62,62,"What does this PR do?\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",630,1,2
EbookFoundation/free-programming-books,318503,9861,CLOSED,Create aditya.py,10982,2023-11-17 13:10:18+00:00,2023-11-17 13:56:19+00:00,,0.7669444444444444,,0,1,1,0,"from flask import Flask,render_template,request,redirect\nfrom flask_cors import CORS,cross_origin\nimport pickle\nimport pandas as pd\nimport numpy as np\napp=Flask(name)\ncors=CORS(app)\nmodel=pickle.load(open('LinearRegressionModel.pkl','rb'))\ncar=pd.read_csv('Cleaned_Car_data.csv')\n@app.route('/',methods=['GET','POST'])\ndef index():\ncompanies=sorted(car['company'].unique())\ncar_models=sorted(car['name'].unique())\nyear=sorted(car['year'].unique(),reverse=True)\nfuel_type=car['fuel_type'].unique()\ncompanies.insert(0,'Select Company')\nreturn render_template('index.html',companies=companies, car_models=car_models, years=year,fuel_types=fuel_type)\n\n@app.route('/predict',methods=['POST'])\n@cross_origin()\ndef predict():\ncompany=request.form.get('company')\n\ncar_model=request.form.get('car_models')\nyear=request.form.get('year')\nfuel_type=request.form.get('fuel_type')\ndriven=request.form.get('kilo_driven')\n\nprediction=model.predict(pd.DataFrame(columns=['name', 'company', 'year', 'kms_driven', 'fuel_type'],\n                          data=np.array([car_model,company,year,driven,fuel_type]).reshape(1, 5)))\nprint(prediction)\n\nreturn str(np.round(prediction[0],2))\n\nif name=='main':\napp.run()\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",1608,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,Added Cryptography Course,10981,2023-11-15 05:34:23+00:00,2023-11-17 14:55:33+00:00,2023-11-17 14:55:33+00:00,57.352777777777774,,0,1,1,0,"What does this PR do?\nAdd resource(s)\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nYes\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",588,2,5
EbookFoundation/free-programming-books,318503,9861,MERGED,Roll-up PR (draft),10980,2023-11-13 05:55:06+00:00,2023-11-17 17:29:15+00:00,2023-11-17 17:29:15+00:00,107.56916666666666,,0,6,16,5,some October PR's could be not be merged normally because of branch inconsistencies. The changes are moved here,111,1,1
EbookFoundation/free-programming-books,318503,9861,MERGED,Add WP Theme Development Playlist (changes made),10979,2023-11-12 08:22:01+00:00,2023-11-13 15:53:52+00:00,2023-11-13 15:53:52+00:00,31.530833333333334,,3,1,1,0,"What does this PR do?\nAdd resource\nFor resources\nDescription\nAdd WP Theme Development Playlist.\nWhy is this valuable (or not)?\nHow do we know it's really free?\nYoutube Playlist\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",634,4,0
EbookFoundation/free-programming-books,318503,9861,MERGED,chore(deps): bump tj-actions/changed-files from 40.1.0 to 40.1.1,10978,2023-11-11 11:43:29+00:00,2023-11-13 15:53:03+00:00,2023-11-13 15:53:03+00:00,52.159444444444446,,1,1,1,1,"Bumps tj-actions/changed-files from 40.1.0 to 40.1.1.\n\nRelease notes\nSourced from tj-actions/changed-files's releases.\n\nv40.1.1\nWhat's Changed\n\nUpgraded to v40.1.0 by @​tj-actions-bot in tj-actions/changed-files#1695\nchore(deps): update dependency eslint to v8.53.0 by @​renovate in tj-actions/changed-files#1696\nchore(deps): lock file maintenance by @​renovate in tj-actions/changed-files#1697\nchore(deps): update typescript-eslint monorepo to v6.10.0 by @​renovate in tj-actions/changed-files#1698\nchore(deps): update dependency @​types/jest to v29.5.8 by @​renovate in tj-actions/changed-files#1699\nchore(deps): update dependency @​types/uuid to v9.0.7 by @​renovate in tj-actions/changed-files#1702\nchore(deps): update dependency @​types/micromatch to v4.0.5 by @​renovate in tj-actions/changed-files#1701\nchore(deps): update dependency @​types/lodash to v4.14.201 by @​renovate in tj-actions/changed-files#1700\nchore(deps): update dependency @​types/node to v20.9.0 by @​renovate in tj-actions/changed-files#1703\n\nFull Changelog: tj-actions/changed-files@v40...v40.1.1\n\n\n\nChangelog\nSourced from tj-actions/changed-files's changelog.\n\n40.1.1 - (2023-11-08)\n➕ Add\n\nAdded missing changes and modified dist assets.\n(e981e53)  - (GitHub Action)\n\n⚙️ Miscellaneous Tasks\n\ndeps: Update dependency @​types/node to v20.9.0 (25ef392)  - (renovate[bot])\ndeps: Update dependency @​types/lodash to v4.14.201 (4d33bd5)  - (renovate[bot])\ndeps: Update dependency @​types/micromatch to v4.0.5 (f25e472)  - (renovate[bot])\ndeps: Update dependency @​types/uuid to v9.0.7 (a3c4ccb)  - (renovate[bot])\ndeps: Update dependency @​types/jest to v29.5.8 (b114534)  - (renovate[bot])\ndeps: Update typescript-eslint monorepo to v6.10.0 (303f064)  - (renovate[bot])\ndeps: Lock file maintenance (d850ef9)  - (renovate[bot])\ndeps: Update dependency eslint to v8.53.0 (8701b58)  - (renovate[bot])\n\n⬆️ Upgrades\n\nUpgraded to v40.1.0 (#1695)\n\nCo-authored-by: jackton1 jackton1@users.noreply.github.com (9b1ba9a)  - (tj-actions[bot])\n\n\n\nCommits\n\n25ef392 chore(deps): update dependency @​types/node to v20.9.0\n4d33bd5 chore(deps): update dependency @​types/lodash to v4.14.201\nf25e472 chore(deps): update dependency @​types/micromatch to v4.0.5\na3c4ccb chore(deps): update dependency @​types/uuid to v9.0.7\nb114534 chore(deps): update dependency @​types/jest to v29.5.8\n303f064 chore(deps): update typescript-eslint monorepo to v6.10.0\ne981e53 Added missing changes and modified dist assets.\nd850ef9 chore(deps): lock file maintenance\n8701b58 chore(deps): update dependency eslint to v8.53.0\n9b1ba9a Upgraded to v40.1.0 (#1695)\nSee full diff in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot show <dependency name> ignore conditions will show all of the ignore conditions of the specified dependency\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)",4153,2,0
EbookFoundation/free-programming-books,318503,9861,CLOSED,added a course in free-courses-en.md,10977,2023-11-11 10:03:08+00:00,2024-02-22 00:10:59+00:00,,2462.130833333333,,2,1,1,0,"What does this PR do?\nAdd resource\nFor resources\nDescription\nA Free course on Python programming language\nHow do we know it's really free?\nIts on YouTube\nFor book lists, is it a book? For course lists, is it a course? etc.\nIts a course on YouTube by Bro Code\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.",561,3,3
EbookFoundation/free-programming-books,318503,9861,MERGED,Notepad ++ Bangla Tutorial Playlist Added,10976,2023-11-11 06:09:10+00:00,2023-11-13 04:24:56+00:00,2023-11-13 04:24:56+00:00,46.26277777777778,,0,1,1,0,"What does this PR do?\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",630,2,0
EbookFoundation/free-programming-books,318503,9861,MERGED,Mongo DB Tutorial Updated,10975,2023-11-09 10:23:09+00:00,2023-11-13 04:21:49+00:00,2023-11-13 04:21:49+00:00,89.97777777777777,,1,1,1,0,"What does this PR do?\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\nFor resources\nDescription\nWhy is this valuable (or not)?\nHow do we know it's really free?\nFor book lists, is it a book? For course lists, is it a course? etc.\nChecklist:\n\n Read our contributing guidelines.\n Search for duplicates.\n Include author(s) and platform where appropriate.\n Put lists in alphabetical order, correct spacing.\n Add needed indications (PDF, access notes, under construction).\n Used an informative name for this pull request.\n\nFollow-up\n\nCheck the status of GitHub Actions and resolve any reported warnings!",630,4,0
sindresorhus/awesome,297783,1985,CLOSED,Add Univer to Front-End Development list,3009,2024-04-02 03:23:46+00:00,2024-04-02 06:52:34+00:00,,3.48,,0,1,1,0,"[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7283,1,0
sindresorhus/awesome,297783,1985,MERGED,Fix Google Cloud name next to Firebase,3004,2024-03-25 12:59:40+00:00,2024-03-25 17:16:12+00:00,2024-03-25 17:16:12+00:00,4.275555555555556,,0,1,1,1,Minor naming fix: Google Cloud Platform -> Google Cloud.,56,2,0
sindresorhus/awesome,297783,1985,CLOSED,Add LiDAR Place Recognition,2999,2024-03-19 11:57:39+00:00,2024-04-09 05:01:39+00:00,,497.06666666666666,,1,2,6,3,"https://github.com/hogyun2/awesome-lidar-place-recognition.git\n[This repository is the collection of LiDAR Place Recognition Research that provides a code or a download page, together.]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7370,4,6
sindresorhus/awesome,297783,1985,CLOSED,Stock control supervisors,2989,2024-03-08 01:41:48+00:00,2024-03-08 05:19:42+00:00,,3.631666666666667,,0,80,2089,2407,"[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7283,2,0
sindresorhus/awesome,297783,1985,CLOSED,fixbug,2980,2024-02-22 06:43:29+00:00,2024-02-22 07:57:37+00:00,,1.2355555555555555,,0,1,1,0,"[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7283,3,0
sindresorhus/awesome,297783,1985,MERGED,Add OpenTofu,2978,2024-02-21 13:06:47+00:00,2024-04-03 16:25:01+00:00,2024-04-03 16:25:01+00:00,1011.3038888888889,,0,1,1,0,"https://github.com/virtualroot/awesome-opentofu#readme | https://awesome-opentofu.com/\n\nA refined list of OpenTofu resources and tools.\n\nOpenTofu is an open-source and community-driven fork of Terraform that lets you define infrastructure as code. It has grown steadily since its inception 6 months ago, and I believe now is a good time to bring more exposure to it as a promising alternative to the non-open-source Terraform.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\n\n#2925 (comment)\nbenallfree/awesome-pocketbase#36\n#2966 (comment)\n#2638 (comment)\n#2960 (comment)\n\n\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.",7090,5,15
sindresorhus/awesome,297783,1985,CLOSED,Add Buddy.Works,2977,2024-02-21 10:53:15+00:00,2024-02-21 11:22:50+00:00,,0.4930555555555556,,0,1,1,0,"https://github.com/czuli/awesome\nIn the Development Environment section of our awesome list, I've added a powerful CI/CD tool that stands out for its exceptional capabilities in automating and streamlining development workflows. Buddy.works is specifically highlighted for its intuitive user interface, extensive integration options, and efficient pipeline management features. This addition is aimed at equipping developers with a reliable resource that significantly enhances software delivery speed and quality. By integrating Buddy.works, our list now better supports developers in adopting and implementing continuous integration and continuous deployment practices with ease, ultimately contributing to more productive and agile development environments.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7945,2,0
sindresorhus/awesome,297783,1985,CLOSED,add toit language,2976,2024-02-20 18:59:58+00:00,2024-02-20 19:10:22+00:00,,0.17333333333333334,,0,1,1,0,"[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7283,2,1
sindresorhus/awesome,297783,1985,CLOSED,Update .editorconfig,2973,2024-02-16 12:07:18+00:00,2024-02-16 13:44:57+00:00,,1.6275,,0,1,1,1,"[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7283,2,0
sindresorhus/awesome,297783,1985,CLOSED,Adding Awesome Farcaster Frames,2970,2024-02-13 16:43:10+00:00,2024-02-19 22:31:56+00:00,,149.81277777777777,,1,1,1,0,"[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7283,3,1
sindresorhus/awesome,297783,1985,CLOSED,First bulk push,2969,2024-02-13 15:28:02+00:00,2024-02-13 15:29:54+00:00,,0.03111111111111111,,0,2,27,879,"[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7283,1,0
sindresorhus/awesome,297783,1985,CLOSED,Add STEM Academy,2938,2024-01-12 07:11:32+00:00,2024-01-12 07:31:36+00:00,,0.33444444444444443,,0,1,1,0,"https://github.com/tapyu/awesome-stem-academy\nAn awesome list of academic resources which is tailored to STEM, that is, Science, Technology, Engineering, Mathematics (no Arts). Specially focused on theoretical aspects.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n#2893 (review) and #2888 (review)\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7438,1,2
sindresorhus/awesome,297783,1985,CLOSED,Add STEM Academy ,2937,2024-01-12 07:03:57+00:00,2024-01-12 07:07:53+00:00,,0.06555555555555556,,0,1,1,0,"https://github.com/tapyu/awesome-stem-academy\nAn awesome list of academic resources which is tailored to STEM, that is, Science, Technology, Engineering, Mathematics (no Arts). Specially focused on theoretical aspects.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n#2893 (review) and #2888 (review)\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7438,1,2
sindresorhus/awesome,297783,1985,CLOSED,Add STEM Academy,2924,2024-01-02 04:11:17+00:00,2024-01-10 01:35:59+00:00,,189.41166666666666,,2,1,1,0,"https://github.com/tapyu/awesome-stem-academy\nAn awesome list of academic resources which is tailored to STEM, that is, Science, Technology, Engineering, Mathematics (no Arts). Specially focused on theoretical aspects.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n#2893 (review) and #2888 (review)\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7438,4,4
sindresorhus/awesome,297783,1985,CLOSED,Added PusPC,2920,2023-12-30 11:48:59+00:00,2023-12-30 13:11:31+00:00,,1.3755555555555556,,0,1,1,0,"Speed up and make your computer safer easily and fastly.\n\n\nhttps://github.com/PusPC/Pus\nIts a program made by me to speed up computers and reduce windows 10 telemetry and its really easy to use\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7381,2,1
sindresorhus/awesome,297783,1985,CLOSED,add Prometheus Alerts - Alerting rules for Prometheus setup (placed just after Prometheus),2917,2023-12-25 18:57:49+00:00,2023-12-27 00:32:57+00:00,,29.585555555555555,,0,1,1,0,"[https://github.com/samber/awesome-prometheus-alerts]\n[Alerting rules for Prometheus setup]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n[] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n[] Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n[] You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n[] You have read and understood the instructions for creating a list.\n[* ] This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n[] Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n✅ - iOS - Mobile operating system for Apple phones and tablets.\n✅ - Framer - Prototyping interactive UI designs.\n❌ - iOS - Resources and tools for iOS development.\n❌ - Framer\n❌ - Framer - prototyping interactive UI designs\n[-] Your entry should be added at the bottom of the appropriate category. - I added just after Prometheus\n[] The title of your entry should be title-cased and the URL to your list should end in #readme.\nExample: - Software Architecture - The discipline of designing and building software.\n[] No blockchain-related lists.\n[] The suggested Awesome list complies with the below requirements.\nRequirements for your Awesome list\n[] Has been around for at least 30 days.\nThat means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n[] Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n[] The default branch should be named main, not master.\n[] Includes a succinct description of the project/theme at the top of the readme. (Example)\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n[] It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n[] The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n[] The heading title of your list should be in title case format: # Awesome Name of List.\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n[] Non-generated Markdown file in a GitHub repo.\n[] The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n[] Not a duplicate. Please search for existing submissions.\n[] Only has awesome items. Awesome lists are curations of the best, not everything.\n[] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n[] Includes a project logo/illustration whenever possible.\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or .\n[] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\nIncludes the Awesome badge.\nShould be placed on the right side of the readme heading.\nCan be placed centered if the list has a centered graphics header.\nShould link back to this list.\n[] Has a Table of Contents section.\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n[] Has an appropriate license.\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\nTip: You can quickly add it to your repo by going to this URL: https://github.com///community/license/new?branch=main&template=cc0-1.0 (replace  and  accordingly).\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\nHas contribution guidelines.\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\nAll non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\nHas consistent formatting and proper spelling/grammar.\nThe link and description are separated by a dash.\nExample: - AVA - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\nDoes not use hard-wrapping.\nDoes not include a CI (e.g. GitHub Actions) badge.\nYou can still use a CI for linting, but the badge has no value in the readme.\nDoes not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\nGo to the top and read it again.",7144,2,1
sindresorhus/awesome,297783,1985,CLOSED,Add Product Management Zh,2912,2023-12-20 01:56:34+00:00,2023-12-20 02:11:08+00:00,,0.2427777777777778,,1,1,1,0,"https://github.com/Zuojiangtao/awesome-product-management-zh\nA list of Chinese curated resources for product/project managers to learn and grow.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n\n##2810 (comment)\n##2874 (comment)\n\n\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7371,3,1
sindresorhus/awesome,297783,1985,CLOSED,Add PocketBase,2894,2023-12-06 05:42:40+00:00,2023-12-06 05:55:01+00:00,,0.20583333333333334,,0,1,1,0,"https://github.com/benallfree/awesome-pocketbase\nThis list provides documentation, resources, guides etc. for the open-source Go-based backend PocketBase\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n\n\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n\n\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\nLeft suggestions / feedback on PRs: #2810  and #2878.\n\n\n You have read and understood the instructions for creating a list.\n\n\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n\n Your entry should be added at the bottom of the appropriate category.\n\n\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n\n No blockchain-related lists.\n\n\n The suggested Awesome list complies with the below requirements.\n\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.\nChecked all the requirements. Opened a PR on the awesome-pocketbase repo to make changes that adhere to the guidelines and the linter detailed above, which was merged. Should be ready to merge here.",7627,1,0
sindresorhus/awesome,297783,1985,CLOSED,Add QGis,2888,2023-12-03 17:11:42+00:00,2024-02-14 09:22:14+00:00,,1744.1755555555555,,2,1,1,0,"Add GIS awesome framework writhed in python\n\n\nhttps://github.com/totpero/awesome-qgis\n**[An awesome list that curates the best QGis frameworks, libraries, tools, plugins, tutorials, articles,resources and more. **\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7401,5,4
sindresorhus/awesome,297783,1985,CLOSED,Update readme.md - Add LLM WebUIs,2878,2023-11-27 08:20:33+00:00,2024-02-14 09:21:35+00:00,,1897.0172222222222,,1,1,1,0,"Adding Awesome LLM WebUIs - A curated list of awesome Large Language Model (LLM) Web User Interfaces.\n\n\n[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7390,4,2
sindresorhus/awesome,297783,1985,CLOSED,Add Deliberative Prompting,2874,2023-11-24 10:25:39+00:00,2024-02-14 09:21:21+00:00,,1966.9283333333333,,0,1,1,0,"https://github.com/logikon-ai/awesome-deliberative-prompting/tree/main#readme\nUp-to-date resources and instructions about reasoning in large-language models (inserted as subitem under GenAI)\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7375,3,2
sindresorhus/awesome,297783,1985,CLOSED,Create devcontainer.json,2866,2023-11-21 12:35:29+00:00,2023-11-21 12:44:19+00:00,,0.14722222222222223,,0,1,5,0,"[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7283,2,0
sindresorhus/awesome,297783,1985,CLOSED,Alphabetically ordering content menu,2862,2023-11-16 22:22:39+00:00,2023-11-17 08:35:29+00:00,,10.213888888888889,,0,1,472,472,"To improve the readability of the content, I suggest rearranging it in alphabetical order. This way, the readers can easily find the information they are looking for.\n\n\nI don't have a URL for a list, because I just re-ordered the current README\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7431,2,1
sindresorhus/awesome,297783,1985,MERGED,Add Open Source Heroes - Awesome,2858,2023-11-14 18:36:59+00:00,2023-11-14 19:49:32+00:00,2023-11-14 19:49:32+00:00,1.2091666666666667,,0,1,1,0,"Link\nhttps://opensource-heroes.com/awesome\nWhy?\nI think this section of Awesome pages (only of languages) with extra info adds some value for people looking for libraries. Example: awesome Python libraries for Data Visualization: https://opensource-heroes.com/awesome/python#data-visualization and now you're able to compare them by popularity, license, ...\n\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.",7510,2,1
sindresorhus/awesome,297783,1985,CLOSED,Update readme.md,2852,2023-11-09 14:18:02+00:00,2023-11-17 08:35:51+00:00,,186.29694444444445,,0,1,1,0,CodeceptJS is the well-known E2E testing framework.,51,3,1
sindresorhus/awesome,297783,1985,CLOSED,Link to maintained successor for PHP,2846,2023-11-04 02:57:48+00:00,2024-01-04 13:05:33+00:00,,1474.1291666666666,,2,1,1,1,Previous one is not maintained anymore.\nSo taking over as a group effort from now on.,86,6,7
sindresorhus/awesome,297783,1985,CLOSED,Add Processing,2843,2023-10-30 15:32:44+00:00,2024-02-14 09:15:30+00:00,,2561.712777777778,,0,1,1,1,"https://github.com/zakarialaoui10/awesome-processing\n**\nThis list is a curated collection of exceptional resources and tools for creative coding, digital art, and interactive design. It serves as a valuable reference for artists, designers, and programmers looking to explore the world of visual arts and creative expression through code.\n**\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7528,4,5
sindresorhus/awesome,297783,1985,CLOSED,Update readme.md,2842,2023-10-29 13:55:57+00:00,2023-10-29 14:07:42+00:00,,0.19583333333333333,,1,1,3,3,"[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7283,3,1
sindresorhus/awesome,297783,1985,CLOSED,Add AI Collection,2837,2023-10-27 08:47:25+00:00,2024-02-14 08:37:31+00:00,,2639.835,,2,1,1,0,"https://github.com/ai-collection/ai-collection\nAI Collection is a collection of awesome generative AI applications that have place for more visibility on the web. Every website is hand-picked and checked for quality.\nThis is a second attempt to add AI Collection. I finally found the time to address the comments from #2512.\nThe structure of the content is different from usual awesome lists, but I feel that its brings more value to users this way.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7636,8,9
sindresorhus/awesome,297783,1985,CLOSED,Add Flatpak,2836,2023-10-26 15:42:20+00:00,2023-10-26 16:03:33+00:00,,0.3536111111111111,,0,1,1,0,"[https://github.com/DevDaaniel/awesome]\n[This list adding flatpak]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description of the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to a maximum of half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. The casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7251,2,1
sindresorhus/awesome,297783,1985,MERGED,Minor Grammatical and Typographical Improvements in files,2835,2023-10-26 14:01:08+00:00,2023-10-26 14:59:56+00:00,2023-10-26 14:59:56+00:00,0.98,,1,4,9,9,"Requirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.",336,3,3
sindresorhus/awesome,297783,1985,MERGED,Update contributing.md,2834,2023-10-26 10:21:37+00:00,2023-10-26 11:42:33+00:00,2023-10-26 11:42:33+00:00,1.3488888888888888,,1,1,1,1,"[Insert URL to the list here]\nN/A\n[Explain what this list is about and why it should be included here]\nlist guidelines-->list of guidelines\nFixed the typo.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n\nAll the below section wouldnt apply because this is a typo fix",1382,4,1
sindresorhus/awesome,297783,1985,CLOSED,Add Spoken Language Identification,2827,2023-10-24 08:27:55+00:00,2023-10-24 10:48:08+00:00,,2.3369444444444443,,0,1,1,0,,0,2,2
sindresorhus/awesome,297783,1985,CLOSED,Update readme.md,2823,2023-10-21 13:17:14+00:00,2023-10-21 13:22:34+00:00,,0.08888888888888889,,0,1,1,127,"[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7277,2,0
sindresorhus/awesome,297783,1985,CLOSED,Add Reference cheat sheet,2822,2023-10-21 03:48:49+00:00,2023-10-21 03:55:39+00:00,,0.11388888888888889,,0,1,1,0,"[https://github.com/Fechin/reference#readme]\n[Quick reference cheat sheet for developers]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. It should not contain the name of the list.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\nDon't include both a title saying Awesome X and a logo with Awesome X. You can put the header image in a # (Markdown header) or <h1>.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7268,1,0
sindresorhus/awesome,297783,1985,CLOSED,Add RTL,2813,2023-10-12 18:07:54+00:00,2024-02-14 08:17:41+00:00,,2990.1630555555557,,1,1,1,0,"sir-kokabi/awesome-rtl\nThis is a list of tools with built-in support for right-to-left (RTL) languages, such as Persian, Farsi, Arabic, Urdu, and more. Many individuals and teams that use RTL languages invest significant effort in searching for tools that support RTL, as tools lacking RTL support can make writing on these platforms challenging and nightmarish. Anyone who is aware of a tool supporting RTL can assist others in reducing the effort required to find such tools.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n\nAdd Spring Boot #2810 comment\nAdd Generative AI Companies #2763 (comment)\n\n\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7559,3,4
sindresorhus/awesome,297783,1985,CLOSED,Add Spring Boot,2810,2023-10-09 20:11:13+00:00,2024-02-14 08:14:53+00:00,,3060.061111111111,,2,1,1,0,"[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7098,8,6
sindresorhus/awesome,297783,1985,CLOSED,Add parenting,2804,2023-10-06 10:53:29+00:00,2024-02-14 08:14:29+00:00,,3141.35,,1,1,1,0,"https://github.com/Athen-Player1/awesome-parenting\nSome digital tools/ guides and courses to help parents in navigating digital space safely and monitoring childs activity online\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7178,6,5
sindresorhus/awesome,297783,1985,MERGED,Add Astrophotography,2803,2023-10-06 04:57:49+00:00,2024-02-13 21:14:38+00:00,2024-02-13 21:14:38+00:00,3136.280277777778,,0,1,1,0,"https://github.com/lunohodov/awesome-astrophotography\nAstrophotography, also known as astronomical imaging, is the photography or imaging of astronomical objects, celestial events, or areas of the night sky.\nAstrophotography bears only a passing resemblance to normal photography. It is a vast topic where both beginners and veterans can easily get lost. This is a curated list of articles, books, guides and tutorials to help fellow enthusiasts navigate the amazing universe of astrophotography.\nHere a list of PRs I've reviewed so far:\n\n#2744 (comment)\n#2731 (comment)\n\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n N/A Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7581,2,4
sindresorhus/awesome,297783,1985,MERGED,"Move Esolangs into ""Programming Languages"" section",2799,2023-10-03 08:25:31+00:00,2023-10-14 18:48:28+00:00,2023-10-14 18:48:28+00:00,274.3825,,0,1,1,1,"It was in the ""Miscellaneous"" section",37,2,0
sindresorhus/awesome,297783,1985,CLOSED,Install meshmap workflow,2794,2023-09-30 12:51:34+00:00,2023-09-30 14:25:51+00:00,,1.571388888888889,,1,1,34,0,"[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7098,3,2
sindresorhus/awesome,297783,1985,CLOSED,Add Discord,2790,2023-09-24 11:17:57+00:00,2023-09-24 14:55:37+00:00,,3.6277777777777778,,0,1,1,0,"https://github.com/ProjectDiscord/awesome\nThis is a list of discord tools, servers, bots, api wrappers and subreddits that could be pretty useful when either looking for a bot a server or a api wrapper to get started with It should be included cause yeah a lot of people use Discord daily and could use this kind of a list with things about discord and stuff\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7358,2,2
sindresorhus/awesome,297783,1985,CLOSED,Add LinDB,2781,2023-09-15 03:41:53+00:00,2023-09-15 08:30:36+00:00,,4.811944444444444,,0,1,1,0,"[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7098,2,1
sindresorhus/awesome,297783,1985,CLOSED,Add Processing langage ,2780,2023-09-13 14:06:05+00:00,2023-10-14 21:46:41+00:00,,751.6766666666666,,1,0,0,0,"https://github.com/zakarialaoui10/awesome-processing#readme\n**\nProcessing is a flexible software sketchbook and language for learning how to code. It is based on Java, with additional simplifications such as additional classes and aliased mathematical functions and operations. It has a language syntax identical to Java but with a few modifications, and is designed from the ground up to provide an environment for visual arts.\n**\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\nDon't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\nYou have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions.\nYou have read and understood the instructions for creating a list.\nThis pull request has a title in the format Add Name of List.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\nYour entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\nYour entry should be added at the bottom of the appropriate category.\nThe title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\nThe suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\nHas been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\nDon't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\nRun awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\nThe default branch should be named main, not master.\nIncludes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\nIt's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\nThe repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\nThe heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\nNon-generated Markdown file in a GitHub repo.\nThe repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\nNot a duplicate. Please search for existing submissions.\nOnly has awesome items. Awesome lists are curations of the best, not everything.\nDoes not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\nIncludes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\nEntries have a description, unless the title is descriptive enough by itself. It rarely is though.\nIncludes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\nHas a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\nHas an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\nHas contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\nAll non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\nHas consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\nDoesn't use hard-wrapping.\nDoesn't include a Travis badge.You can still use Travis for list linting, but the badge has no value in the readme.\nDoesn't include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7234,4,16
sindresorhus/awesome,297783,1985,CLOSED,Add Generative AI Companies,2763,2023-08-30 11:47:18+00:00,2024-01-19 11:25:46+00:00,,3407.641111111111,,1,1,1,0,"https://github.com/AlexChalakov/awesome-generative-ai-companies\nIt is a thoroughly researched list of companies that indulge in Generative AI with over $5MM raised as of August 2023. It is useful for the following few reasons:\n\nPeople would be able to keep informed regarding new intriguing and exciting Generative AI projects.\nPeople would be able to ""job hunt"" through this list and see if there is a company that matches their interests.\nThe Industry is evolving and changing rapidly, so it would be useful to have somewhere where all of those companies could be monitored and listed.\n\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n\n\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n\n\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n\n\n#2731 (comment)\n\n\n#2737 (comment)\n\n\n You have read and understood the instructions for creating a list.\n\n\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n\n Your entry should be added at the bottom of the appropriate category.\n\n\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n\n No blockchain-related lists.\n\n\n The suggested Awesome list complies with the below requirements.\n\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7669,8,11
sindresorhus/awesome,297783,1985,CLOSED,Add Generative AI Companies,2762,2023-08-30 11:20:48+00:00,2023-08-30 11:41:20+00:00,,0.3422222222222222,,0,1,1,0,"https://github.com/AlexChalakov/awesome-generative-ai-companies\nIt is a thoroughly researched list of companies that indulge in Generative AI with over $5MM raised as of August 2023. It is useful for the following few reasons:\n\nPeople would be able to keep informed regarding new intriguing and exciting Generative AI projects.\nPeople would be able to ""job hunt"" through this list and see if there is a company that matches their interests.\nThe Industry is evolving and changing rapidly, so it would be useful to have somewhere where all of those companies could be monitored and listed.\n\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n\n\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n\n\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n\n\n#2731 (comment)\n\n\n#2737 (comment)\n\n\n You have read and understood the instructions for creating a list.\n\n\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n\n Your entry should be added at the bottom of the appropriate category.\n\n\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n\n No blockchain-related lists.\n\n\n The suggested Awesome list complies with the below requirements.\n\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7669,1,1
sindresorhus/awesome,297783,1985,CLOSED,Add Microsoft Sentinel,2753,2023-08-18 17:15:37+00:00,2024-02-14 08:12:46+00:00,,4310.9525,,4,1,1,0,"https://github.com/kfriede/awesome-microsoft-sentinel\nResources for Microsoft Azure Sentinel and related KQL, SIEM, and SOAR functionality\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\n\n#2736\n#2647\n\n\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n It's the result of hard work and the best I could possibly produce.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n The heading title of your list should be in title case format: # Awesome Name of List.\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n Has a Table of Contents section.\n Has an appropriate license.\n Has contribution guidelines.\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",3635,7,9
sindresorhus/awesome,297783,1985,CLOSED,Add Autonomous AI Agents,2751,2023-08-17 17:07:48+00:00,2023-09-18 12:42:42+00:00,,763.5816666666667,,0,1,1,0,"https://github.com/e2b-dev/awesome-ai-agents\nThis list features AI agents, structured into two parts: Open source projects, and Closed-source projects and companies.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖 Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\nDon't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\nDon't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\nYou have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review. PR Comments\nAdd Ukrainian IT Communities #2541 (comment)\nAdd Data Pipeline #2515\nYou have read and understood the instructions for creating a list.\nThis pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\nYour entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n✅ - iOS - Mobile operating system for Apple phones and tablets. ✅ - Framer - Prototyping interactive UI designs. ❌ - iOS - Resources and tools for iOS development. ❌ - Framer\n❌ - Framer - prototyping interactive UI designs\nYour entry should be added at the bottom of the appropriate category.\nThe title of your entry should be title-cased and the URL to your list should end in #readme.\nExample: - Software Architecture - The discipline of designing and building software.\nNo blockchain-related lists.\nThe suggested Awesome list complies with the below requirements.\nRequirements for your Awesome list\nHas been around for at least 30 days.\nThat means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\nRun awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\nReport Linter False Positives\nThe default branch should be named main, not master.\nIncludes a succinct description of the project/theme at the top of the readme. (Example)\n✅ Mobile operating system for Apple phones and tablets. ✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\nIt's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\nThe repo name of your list should be in lowercase slug format: awesome-name-of-list.\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\nThe heading title of your list should be in title case format: # Awesome Name of List.\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\nNon-generated Markdown file in a GitHub repo.\nThe repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\nNot a duplicate. Please search for existing submissions.\nOnly has awesome items. Awesome lists are curations of the best, not everything.\nDoes not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\nIncludes a project logo/illustration whenever possible.\nEither centered, fullwidth, or placed at the top-right of the readme. (Example) The image should link to the project website or any relevant website. The image should be high-DPI. Set it to maximum half the width of the original image.\nEntries have a description, unless the title is descriptive enough by itself. It rarely is though.\nIncludes the Awesome badge.\nShould be placed on the right side of the readme heading. Can be placed centered if the list has a centered graphics header. Should link back to this list.\nHas a Table of Contents section.\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none. Must not feature Contributing or Footnotes sections.\nHas an appropriate license.\nWe strongly recommend the CC0 license, but any Creative Commons license will work. Tip: You can quickly add it to your repo by going to this URL: https://github.com///community/license/new?branch=main&template=cc0-1.0 (replace  and  accordingly). A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense. Place a file named license or LICENSE in the repo root with the license text. Do not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo. To verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\nHas contribution guidelines.\nThe file should be named contributing.md. Casing is up to you. It can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content. The section should not appear in the Table of Contents.\nAll non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\nHas consistent formatting and proper spelling/grammar.\nThe link and description are separated by a dash.\nExample: - AVA - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period. Consistent and correct naming. For example, Node.js, not NodeJS or node.js.\nDoes not use hard-wrapping.\nDoes not include a CI (e.g. GitHub Actions) badge.\nYou can still use a CI for linting, but the badge has no value in the readme.\nDoes not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\nGo to the top and read it again.\n\n\n[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",14124,5,4
sindresorhus/awesome,297783,1985,CLOSED,Add HarperDB,2744,2023-08-10 21:57:31+00:00,2024-02-14 08:10:24+00:00,,4498.214722222222,,0,1,1,0,"https://github.com/terraHDB/awesome-harperdb\nThis list features helpful resources and awesome content about HarperDB.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n\nPR Comments\n\n\n#2737 (comment)\n\n\n#2734 (comment)\n\n\n You have read and understood the instructions for creating a list.\n\n\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n\n Your entry should be added at the bottom of the appropriate category.\n\n\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n\n No blockchain-related lists.\n\n\n The suggested Awesome list complies with the below requirements.\n\n\nRequirements for your Awesome list\n\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n\n\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n\n\nReport Linter False Positives\n\n\n The default branch should be named main, not master.\n\n\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n\n\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n\n Non-generated Markdown file in a GitHub repo.\n\n\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n\n\n Not a duplicate. Please search for existing submissions.\n\n\n Only has awesome items. Awesome lists are curations of the best, not everything.\n\n\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n\n\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n\n\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n\n\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n\n Does not use hard-wrapping.\n\n\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n\n\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\n\nGo to the top and read it again.",7307,4,5
sindresorhus/awesome,297783,1985,MERGED,Add Steam Deck,2743,2023-08-10 11:30:11+00:00,2023-09-24 17:54:29+00:00,2023-09-24 17:54:29+00:00,1086.405,,2,1,1,0,"https://github.com/airscripts/awesome-steam-deck\nThis awesome list contains all the resources, spacing from software and hardware, suggested for Steam Deck's ecosystem.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nContributions\n\n#2560 (comment)\n#2737 (comment)\n#2742 (comment)\n#2744 (comment)\n#2751 (comment)",7134,7,8
sindresorhus/awesome,297783,1985,CLOSED,Add Integrated Development Environment,2742,2023-08-09 18:53:06+00:00,2023-08-10 22:17:45+00:00,,27.410833333333333,,0,1,1,0,"https://github.com/zeelsheladiya/Awesome-IDEs\nA curated list of Integrated Development Environments (IDEs) and related tools that can enhance your coding experience and boost your productivity.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n  Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7196,4,4
sindresorhus/awesome,297783,1985,MERGED,Update link to Awesome Mastodon,2739,2023-08-06 06:45:57+00:00,2023-10-07 04:11:37+00:00,2023-10-07 04:11:37+00:00,1485.4277777777777,,0,1,1,1,"url to list: https://github.com/hyperupcall/awesome-mastodon\nexplanation: Mastodon is a very popular decentralized platform for hosting a social networking platform. It's built on top of ActivityPub and has cemented it's legacy as an alternative social media platform since the hostile takeover of Twitter last year.\nThis does not add a new list; it updates the link to Awesome Mastodon. Unicorn.\nThe hueyy fork is reasonably popular and seems to be actively maintained.\nI was somewhat confused since the PR template implies all PRs are requests for new awesome lists. Which means this pull request title is apparently invalid. I wasn't sure if reviews  were necessary in this case (looking at #2459 for instructions), so I did it anyways:\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n(N/A, changing/update link, not adding) [] This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\n Should be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\n Should link back to this list.\n\n\n Has a Table of Contents section.\n\n Should be named Contents, not Table of Contents.\n Should be the first section in the list.\n Should only have one level of nested lists, preferably none.\n Must not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\n Tip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\n A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\n Place a file named license or LICENSE in the repo root with the license text.\n Do not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\n To verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\n The file should be named contributing.md. Casing is up to you.\n It can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\n The section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\n The link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\n The description starts with an uppercase character and ends with a period.\n Consistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nReviews\n\nReview 1\nReview 2\n\nCloses #2724",7616,3,7
sindresorhus/awesome,297783,1985,CLOSED,Add Astrophysics Simulation Codes,2737,2023-08-04 21:56:28+00:00,2023-10-14 18:03:10+00:00,,1700.1116666666667,,0,1,1,0,"https://github.com/pmocz/awesome-astro-codes/blob/main/README.md\nAdd list of state-of-the-art multi-physics simulation codes used in astrophysics research.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nI've read and complied with the below requirements\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7105,6,6
sindresorhus/awesome,297783,1985,MERGED,Add Stock Trading,2736,2023-08-02 09:15:47+00:00,2024-02-14 08:09:43+00:00,2024-02-14 08:09:43+00:00,4702.898888888889,,3,1,1,0,"https://github.com/shi-rudo/awesome-stock-trading\nList about valuable tools and educational resources about stock trading.\nCommented pull requests:\n#2391\n#2734\n#2692\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nRequirements for your pull request\n\n✅ Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\n✅ Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n✅ You have to review at least 2 other open pull requests.\n✅ You have read and understood the instructions for creating a list.\n✅ This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n✅ Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n✅ Your entry should be added at the bottom of the appropriate category.\n✅ The title of your entry should be title-cased and the URL to your list should end in #readme.\n✅ No blockchain-related lists.\n✅ The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n✅ Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n✅ Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n✅ The default branch should be named main, not master.\n✅ **Includes a succinct description of the project/theme at the top of the readme.\n✅ It's the result of hard work and the best I could possibly produce.\n✅ The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n✅ The heading title of your list should be in title case format: # Awesome Name of List.\n✅ Non-generated Markdown file in a GitHub repo.\n✅ The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n✅ Not a duplicate. Please search for existing submissions.\n✅ Only has awesome items. Awesome lists are curations of the best, not everything.\n✅ Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n✅ Includes a project logo/illustration whenever possible.\n✅ Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n✅ Includes the Awesome badge.\n✅ Has a Table of Contents section.\n✅ Has an appropriate license.\n✅ Has contribution guidelines.\n✅ All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n✅ Has consistent formatting and proper spelling/grammar.\n✅ Does not use hard-wrapping.\n✅ Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n✅ Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.",3488,6,8
sindresorhus/awesome,297783,1985,MERGED,Add Prompt Injection,2734,2023-07-30 23:28:41+00:00,2023-10-14 18:57:02+00:00,2023-10-14 18:57:02+00:00,1819.4725,,2,1,1,0,"https://github.com/FonduAI/awesome-prompt-injection\nThe purpose of this repository is to provide resources for understanding, detecting, and mitigating these attacks, contributing to the creation of more secure machine learning models.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n\n\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n\n\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n\n\n#2729 (comment)\n\n\n#2731 (comment)\n\n\n You have read and understood the instructions for creating a list.\n\n\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n\n Your entry should be added at the bottom of the appropriate category.\n\n\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n\n No blockchain-related lists.\n\n\n The suggested Awesome list complies with the below requirements.\n\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7311,5,5
sindresorhus/awesome,297783,1985,MERGED,Add Frontend GIS,2731,2023-07-29 18:47:32+00:00,2024-02-14 08:00:31+00:00,2024-02-14 08:00:31+00:00,4789.216388888889,,0,1,1,0,"https://github.com/joewdavies/awesome-frontend-gis\nThis list contains all the necessary resources to visualize and analyse geographic information on web browsers.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nPRs reviewed:\n\n\n#2729 (comment)\n\n\n#2690 (comment)\n\n\n\n#2719 (comment)",7208,6,9
sindresorhus/awesome,297783,1985,CLOSED,Add AI-By-Bharat,2719,2023-07-21 05:17:11+00:00,2023-07-24 01:30:47+00:00,,68.22666666666667,,0,1,1,0,"This repository contains a hand-curated resources of Artificial Intelligence technologies built by India.\n\n\n[Awesome AI By Bharat]\n[Artificial Intelligence technologies built by India]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7187,3,3
sindresorhus/awesome,297783,1985,CLOSED,Update readme.md,2718,2023-07-15 08:12:55+00:00,2023-07-15 11:53:05+00:00,,3.6694444444444443,,0,1,1,39,"[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7098,2,0
sindresorhus/awesome,297783,1985,CLOSED,Add Neuromorphic,2715,2023-07-12 17:44:27+00:00,2023-11-07 18:02:22+00:00,,2832.2986111111113,,1,1,1,0,"Neuromorphic or spiking networks - brain-inspired, third generation neural networks, where neurons communicating via spikes.\n\n\nhttps://github.com/artiomn/awesome-neuromorphic#readme\nSpiking or neuromorphic neural networks are artificial neural networks that more closely mimic natural neural networks. In addition to neuronal and synaptic state, SNNs incorporate the concept of time into their operating model. The idea is that neurons in the SNN do not transmit information at each propagation cycle, but rather transmit information only when a membrane potential reaches a specific value, called the threshold.\nThis is the important and fast-grown area, that must be added to the Machine Learning page.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n\nOther PR's Reviewed prior to this PR\n#2692\n#2690\n#2647\n#2622\n\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n[N/A] Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7783,5,6
sindresorhus/awesome,297783,1985,CLOSED,Create Morena,2714,2023-07-07 10:40:56+00:00,2023-07-07 18:33:59+00:00,,7.884166666666666,,1,1,30,0,"pip install pygame\nOnce you have Python and Pygame set up, you can create a new Python file, such as game.py, and paste the provided code into it. The code starts by importing the necessary modules: pygame and pygame.locals. The pygame.locals module provides constants for event types, keycodes, and other useful values.\nAfter that, the Pygame library is initialized using pygame.init(). This step is necessary before using any Pygame functions or classes.\nNext, the game window is set up using the pygame.display.set_mode() function. In the example, the window size is set to 800x600 pixels, but you can modify these values to fit your game's requirements. The pygame.display.set_caption() function is used to set the title of the game window.\nThe code then enters a game loop, controlled by the running variable. Inside the loop, events are handled using a for loop that iterates over pygame.event.get(). This retrieves a list of all the events that have occurred since the last time this function was called. The code checks for the QUIT event, which is triggered when the user tries to close the game window. If this event is detected, the running variable is set to False, and the game loop will exit.\nInside the game loop, you can update your game's logic and perform any necessary calculations or modifications. This is where you would handle user input, update the positions of game objects, check for collisions, and implement the game's rules.\nAfter updating the game logic, the code clears the game window by filling it with a black color using window.fill((0, 0, 0)). You can change the color by providing a different RGB value as a tuple.\nFinally, the updated game screen is rendered by calling pygame.display.update(). This function updates the contents of the game window to reflect any changes made.\nThe game loop continues until the running variable is set to False, typically when the user closes the game window. Once the loop exits, Pygame is cleaned up using pygame.quit().\n\n\n[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",9106,3,0
sindresorhus/awesome,297783,1985,CLOSED,add SwiftyEdit to CMS section,2710,2023-07-04 17:47:30+00:00,2023-07-05 09:17:21+00:00,,15.4975,,0,1,1,0,"[https://github.com/SwiftyEdit/SwiftyEdit#readme]\n[It's an open source content management system and totally free]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7114,2,1
sindresorhus/awesome,297783,1985,CLOSED,Add Neuromorphic,2695,2023-06-23 22:54:41+00:00,2023-07-12 17:29:06+00:00,,450.5736111111111,,1,1,1,4,"Neuromorphic or spiking networks - brain-inspired, third generation neural networks, where neurons communicating via spikes.\n\n\nhttps://github.com/artiomn/awesome-neuromorphic#readme\nSpiking or neuromorphic neural networks are artificial neural networks that more closely mimic natural neural networks. In addition to neuronal and synaptic state, SNNs incorporate the concept of time into their operating model. The idea is that neurons in the SNN do not transmit information at each propagation cycle, but rather transmit information only when a membrane potential reaches a specific value, called the threshold.\nThis is the important and fast-grown area, that must be added to the Machine Learning page.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n\nOther PR's Reviewed prior to this PR\n#2692\n#2690\n#2647\n#2622\n\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n[N/A] Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7783,6,13
sindresorhus/awesome,297783,1985,CLOSED,Add Erlang and Elixir descriptions,2694,2023-06-23 13:44:05+00:00,2023-06-23 13:49:44+00:00,,0.09416666666666666,,0,1,2,2,"I think it would be beneficial to include description of the listed programming languages in a single sentence.\nThis provides orientation about language you may not have heard of, whether it is relevant to you, or creates curiosity to read further into it.\nI have some knowledge of Erlang and Elixir, so I thought I could help out in the same way that it would be beneficial for other awesome lists.",401,1,0
sindresorhus/awesome,297783,1985,CLOSED,add official docker awesome-compose,2692,2023-06-23 08:02:35+00:00,2023-12-25 17:59:48+00:00,,4449.953611111111,,5,0,0,0,"[https://github.com/docker/awesome-compose#readme]\n[official docker compose examples]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7085,10,6
sindresorhus/awesome,297783,1985,CLOSED,Add Tech Radars,2691,2023-06-22 19:03:51+00:00,2023-06-22 19:05:46+00:00,,0.03194444444444444,,0,1,1,0,"A curated list of Tech Radars\nA curated list of Technology Radars that helps software engineers to understand which technologies are used in organisations that publish Tech Radars\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7179,1,0
sindresorhus/awesome,297783,1985,MERGED,Add Bluetooth Low Energy,2690,2023-06-22 11:27:17+00:00,2024-02-14 07:53:55+00:00,2024-02-14 07:53:55+00:00,5684.443888888889,,1,1,1,0,"https://github.com/dotintent/awesome-ble\nBluetooth Low Energy (aka BLE) is nowadays the foundation for lots of IoT based project, the idea is to share our findings, solutions, and libraries about that as a giveback to the community.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7232,5,10
sindresorhus/awesome,297783,1985,CLOSED,add Repo Reviews,2689,2023-06-21 13:20:44+00:00,2023-06-21 13:27:54+00:00,,0.11944444444444445,,0,1,1,0,"adding Repo Reviews 🙏\n\n\n[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n No blockchain-related lists.\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7125,1,1
sindresorhus/awesome,297783,1985,CLOSED,Create Blog Website,2687,2023-06-20 15:34:48+00:00,2023-06-20 20:32:40+00:00,,4.964444444444444,,0,1,104,0,"Landing page to showing the offerings, considering blogs as the main offering.\n\n\n[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7151,2,0
sindresorhus/awesome,297783,1985,MERGED,Add Awesome Cosmos,2686,2023-06-20 14:42:41+00:00,2023-06-21 10:07:48+00:00,2023-06-21 10:07:48+00:00,19.41861111111111,,0,1,1,0,"https://github.com/cosmos/awesome-cosmos\nThis list contains all the resources necessary to start building in the Interchain/Cosmos ecosystem.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n[N/A] Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nPR reviewed:\n\n#2424 (comment)\n#2424 (comment)",7131,2,2
sindresorhus/awesome,297783,1985,CLOSED,Add Amazon Redshift,2666,2023-06-06 20:24:05+00:00,2023-06-06 20:27:04+00:00,,0.04972222222222222,,0,1,1,0,"[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7067,2,1
sindresorhus/awesome,297783,1985,CLOSED,Add Feature Flag Management,2658,2023-06-02 22:50:59+00:00,2024-02-14 07:47:03+00:00,,6152.934444444444,,1,1,1,0,"https://github.com/andrewdmaclean/awesome-feature-flag-management\nFeature flags, also known as feature toggles, are conditional statements that enable developers to control the availability and behavior of software features. They have become increasingly important in modern software development as they allow for safer and more flexible feature releases, enable A/B testing, facilitate gradual rollouts, and support targeted feature deployments. This repository aims to provide resources that will help developers manage these feature flags at any scale, and to help them level up their use of this tool.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n\nOther PR's Reviewed prior to this PR\n\n\n#2615 (comment)\n\n\n#2622 (comment)\n\n\n You have read and understood the instructions for creating a list.\n\n\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n\n Your entry should be added at the bottom of the appropriate category.\n\n\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n\n The suggested Awesome list complies with the below requirements.\n\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7676,5,5
sindresorhus/awesome,297783,1985,CLOSED,Add TON (The Open Network),2655,2023-05-30 17:59:48+00:00,2023-06-21 10:45:09+00:00,,520.7558333333334,,2,1,1,0,"https://github.com/ton-community/awesome-ton\nThis PR is to include the TON (The Open Network) in the Decentralized Systems list. TON is a scalable and flexible blockchain platform developed by Telegram, that aims to bring speed, efficiency, and broader usability to decentralized transactions and services.\nThe included resource, ton-community/awesome-ton, is a curated list of awesome resources, tools, and projects related to TON. It covers a wide range of categories from wallets and explorers to development resources, making it a valuable addition to the list for developers and enthusiasts in the blockchain community.\nThank you for considering this addition.\nPR Review\n\n#2647 (comment)\n#2642 (comment)\n#2640 (comment)\n#2618 (comment)\n\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\nton-community/awesome-ton#42\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\nton-community/awesome-ton#44\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\nton-community/awesome-ton#50\n Includes a project logo/illustration whenever possible.\nton-community/awesome-ton#44\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\nton-community/awesome-ton#48\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\nton-community/awesome-ton#42\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\nton-community/awesome-ton#43\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\nton-community/awesome-ton#42\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\nton-community/awesome-ton#44\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\nton-community/awesome-ton#42\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",8019,3,4
sindresorhus/awesome,297783,1985,CLOSED,Add The Open Network,2650,2023-05-29 08:54:33+00:00,2023-05-29 09:01:53+00:00,,0.12222222222222222,,0,1,1,0,"The Open Network is a high-performance blockchain platform that offers a secure and scalable environment for decentralized applications (dApps) and cryptocurrency transactions. Originally known as the Telegram Open Network (TON), it provides developers the tools to create industry-specific solutions while ensuring high-speed, reliable, and transparent digital financial exchanges.\nhttps://ton.org/",400,1,0
sindresorhus/awesome,297783,1985,CLOSED,Add E-Ink,2647,2023-05-28 18:33:53+00:00,2024-02-14 07:46:21+00:00,,6277.207777777778,,2,1,1,0,"Awesome E-Ink\nThis list is about E-Ink awesome links, projects and resources. This repository aims to provide a guide to E-ink technology, products, and development resources. Whether you're an E-ink enthusiast, a developer working on E-ink applications, or just curious about this technology, this list could be a valuable resource. Also, E-Ink can help people to deal with some problems related to eye strain.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7380,12,13
sindresorhus/awesome,297783,1985,CLOSED,Add Apache Kafka,2642,2023-05-26 14:16:44+00:00,2023-07-18 12:09:04+00:00,,1269.8722222222223,,1,1,1,1,"https://github.com/semantalytics/awesome-kafka\nThis list is about kafka which is an open-source distributed event streaming platform used by many teams to manage stateful events.\nPRs Reviewed:\n#2622\n#2607\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7176,5,14
sindresorhus/awesome,297783,1985,MERGED,Add High Performance Computing,2640,2023-05-25 14:29:31+00:00,2023-10-14 15:58:54+00:00,2023-10-14 15:58:54+00:00,3409.489722222222,,1,1,1,0,"https://github.com/dstdev/awesome-hpc\nA collection of tools an resources for High Performance Computing systems.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n\nReviewed PRs\n\n#2638 (comment)\n#2593 (comment)\n\n\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7137,6,11
sindresorhus/awesome,297783,1985,CLOSED,Add Persian,2635,2023-05-22 00:53:38+00:00,2023-05-22 00:59:21+00:00,,0.09527777777777778,,0,1,1,0,"https://github.com/rzashakeri/awesome-persian#awesome-persian--\nThis list of great things like courses, books, YouTube channels and ... is in the Persian speaking world\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7137,1,0
sindresorhus/awesome,297783,1985,CLOSED,Add Awesome lists about all kind of AI,2631,2023-05-18 09:58:07+00:00,2023-05-18 10:36:52+00:00,,0.6458333333333334,,0,1,5,0,"[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7067,2,1
sindresorhus/awesome,297783,1985,CLOSED,added Safurai coding tool,2630,2023-05-18 08:20:37+00:00,2023-05-18 08:23:28+00:00,,0.0475,,0,1,1,0,,0,2,0
sindresorhus/awesome,297783,1985,CLOSED,[Pull Request] Add drip project.,2628,2023-05-17 10:00:38+00:00,2023-05-17 10:53:33+00:00,,0.8819444444444444,,0,1,1,0,"https://github.com/leo-brad/drip\n[A new parrallel open source project.I hope you enjoy it ]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7060,2,2
sindresorhus/awesome,297783,1985,CLOSED,Add Substreams,2626,2023-05-14 15:35:36+00:00,2023-06-21 10:45:33+00:00,,907.1658333333334,,0,1,1,0,"https://github.com/pinax-network/awesome-substreams\nList for Substreams which is a powerful blockchain indexing technology, developed for The Graph Network.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\n\n#2612 (comment)\n#2569 (comment)\n\n\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",6569,3,3
sindresorhus/awesome,297783,1985,CLOSED,Add Substreams,2625,2023-05-14 02:24:40+00:00,2023-05-14 07:11:03+00:00,,4.773055555555556,,0,1,1,0,"https://github.com/pinax-network/awesome-substreams\nList for Substreams which is a powerful blockchain indexing technology, developed for The Graph Network.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\n\n#2612 (comment)\n#2569 (comment)\n\n\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",6569,2,3
sindresorhus/awesome,297783,1985,MERGED,Add Uno Platform,2622,2023-05-13 12:43:06+00:00,2024-02-13 21:51:16+00:00,2024-02-13 21:51:16+00:00,6633.136111111111,,1,1,1,0,"https://github.com/MartinZikmund/awesome-uno-platform\nThe list gathers most useful resources for developers working with Uno Platform.\nReviewed PRs\n\n#2509 (comment)\n#2482 (comment)\n\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have read and understood the instructions for creating a list.\n  You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n  The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n  Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n  The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n  The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\n\n\n To verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7059,6,12
sindresorhus/awesome,297783,1985,MERGED,Add Biological Image Analysis,2620,2023-05-11 18:02:46+00:00,2023-10-14 16:20:57+00:00,2023-10-14 16:20:57+00:00,3742.3030555555556,,1,1,1,0,"https://github.com/hallvaaw/awesome-biological-image-analysis\nImage analysis is commonly used as a means to gain insight and deeper understanding in biological studies. It is used on all levels of the biological sciences ranging from subcellular to ecosystem levels. Although some of the principles and standards are universal, the methodology and portfolio of tools are becoming increasingly complex. This list is a collection of awesome image analysis resources for use in biological studies.\nI have reviewed #2442 and #2512.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7497,4,5
sindresorhus/awesome,297783,1985,CLOSED,Add Digital Footprint Check,2619,2023-05-10 21:43:21+00:00,2023-05-11 07:38:55+00:00,,9.926111111111112,,0,1,1,0,"[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7067,2,2
sindresorhus/awesome,297783,1985,CLOSED,Add new link for attacks against AI,2618,2023-05-10 06:51:16+00:00,2023-10-14 15:45:48+00:00,,3776.9088888888887,,0,1,1,0,"[Insert URL to the list here]\nhttps://github.com/101010ai/awesome-attacks-ai\n[Explain what this list is about and why it should be included here]\nIt is a list that contains attacks against AI like ChatGPT etc\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7179,6,6
sindresorhus/awesome,297783,1985,CLOSED,Add Mojo,2615,2023-05-09 19:14:41+00:00,2023-06-23 14:09:18+00:00,,1074.9102777777778,,2,1,1,0,,0,4,3
sindresorhus/awesome,297783,1985,CLOSED,Add Mojo,2614,2023-05-09 18:36:34+00:00,2023-05-09 19:10:03+00:00,,0.5580555555555555,,0,1,1,0,,0,1,0
sindresorhus/awesome,297783,1985,CLOSED,Add Game AI DevTools,2612,2023-05-06 03:41:30+00:00,2023-05-21 03:16:22+00:00,,359.5811111111111,,2,1,1,0,"https://github.com/Yuan-ManX/awesome-game-ai-devtools\nHere is a awesome list of game AI development tools. Here we will keep track of the Game AI Development Tools, including programming, animation, effects, modeling, audio, music and more.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7209,7,4
sindresorhus/awesome,297783,1985,CLOSED,Mojo programming language,2610,2023-05-05 18:00:41+00:00,2023-05-06 06:58:26+00:00,,12.9625,,0,1,1,0,https://github.com/relatedcode/awesome-mojo,43,2,1
sindresorhus/awesome,297783,1985,CLOSED,Add Monolith Architecture,2608,2023-05-01 21:51:28+00:00,2023-10-14 16:02:50+00:00,,3978.1894444444442,,0,1,1,0,"[https://github.com/canerbasaran/awesome-monolith#readme]\n[List of content describing the benefits of starting projects with a monolith architecture]\n\n\n[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7223,3,6
sindresorhus/awesome,297783,1985,MERGED,Add Pest,2601,2023-04-25 06:08:34+00:00,2023-10-14 15:35:29+00:00,2023-10-14 15:35:29+00:00,4137.448611111111,,2,1,1,0,"https://github.com/pest-parser/awesome-pest\npest is a general purpose parser written in Rust with a focus on accessibility, correctness, and performance. It uses parsing expression grammars (or PEG) as input, which are similar in spirit to regular expressions, but which offer the enhanced expressivity needed to parse complex languages. The list contains links to awesome projects using pest and tools for pest.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7381,3,5
sindresorhus/awesome,297783,1985,CLOSED,Add Android apps and libraries list in readme.md,2598,2023-04-22 03:18:12+00:00,2023-04-22 04:10:43+00:00,,0.8752777777777778,,0,1,1,1,"Awesome lists about android apps and android libraries.\n\n\n[Insert URL to the list here]\n[Explain what this list is about and why it should be included here]\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7128,1,1
sindresorhus/awesome,297783,1985,CLOSED,Add Game AI DevTools,2593,2023-04-17 03:53:12+00:00,2023-05-06 03:25:55+00:00,,455.54527777777776,,4,1,1,0,"https://github.com/Yuan-ManX/awesome-game-ai-devtools\nHere is a awesome list of game AI development tools. Here we will keep track of the Game AI Development Tools, including programming, animation, effects, modeling, audio, music and more.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7209,7,6
sindresorhus/awesome,297783,1985,MERGED,Add Kustomize,2585,2023-04-10 08:13:23+00:00,2024-02-13 21:32:40+00:00,2024-02-13 21:32:40+00:00,7429.321388888889,,7,1,1,0,"https://github.com/DevOpsHiveHQ/awesome-kustomize\nKustomize introduces a template-free way to customize Kubernetes manifests. It's extensible and uses a purely declarative approach to configuration customization, which will help you efficiently manage your Infrastructure as a code (IaC).\nKustomize is one of the official tools for managing Kubernetes resources, and this list will be the entry point for anyone to learn about Kustomize.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\n\n#2571 (comment)\n#2736 (comment)\n#2737 (comment)\n\n\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.",6730,8,16
sindresorhus/awesome,297783,1985,MERGED,Add Tiny JS,2571,2023-04-02 13:01:27+00:00,2023-05-19 10:35:17+00:00,2023-05-19 10:35:17+00:00,1125.5638888888889,,7,1,1,0,"https://github.com/thoughtspile/awesome-tiny-js#readme\nThis is a list of small frontend libraries — mostly under 2Kb, with exceptions for select categories. Smaller frontend libraries help you build smaller apps, resulting in better user experience and fewer wasted resources. Apart from production usage:\n\nA well-organized list of small libraries helps open-source developers focus their efforts on fields that are not already well-covered.\nThe cruft-free code of small libraries is an excellent learning material to understand how a class of libraries works — e.g. hyperapp source is a great overview of virtual DOM.\nMany people put considerable effort into engineering size-conscious libraries, and deserve recognition for that.\n\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\n\n#2569 (comment)\n#2565 (comment)\n\n\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n It's the result of hard work and the best I could possibly produce.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n The heading title of your list should be in title case format: # Awesome Name of List.\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.",6027,7,7
sindresorhus/awesome,297783,1985,CLOSED,Add Control Theory,2569,2023-04-02 09:48:19+00:00,2023-10-14 15:30:37+00:00,,4685.705,,3,1,1,0,"https://github.com/A-make/awesome-control-theory\nProvides resources on Control Theory and Control Engineering. Getting pretty good traction.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7109,7,8
sindresorhus/awesome,297783,1985,MERGED,Add ADS-B list,2567,2023-03-30 20:36:53+00:00,2023-06-21 11:03:22+00:00,2023-06-21 11:03:22+00:00,1982.441388888889,,0,1,1,0,"[Insert URL to the list here]\nhttps://github.com/rickstaa/awesome-adsb\n[Explain what this list is about and why it should be included here]\nThis pull request contains an ADS-B awesome list that can be used as a reference for ADS-B enthusiasts. Automatic Dependent Surveillance–Broadcast (ADS-B) is a surveillance technology and form of Electronic Conspicuity in which an aircraft determines its position via satellite navigation or other sensors and periodically broadcasts it, enabling it to be tracked.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n\n#2565 (comment)\n#2509 (comment)\n#2449 (comment)\n\n\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7532,4,9
sindresorhus/awesome,297783,1985,CLOSED,Add Computational Intelligence in Sports,2565,2023-03-30 13:10:00+00:00,2024-02-13 21:23:48+00:00,,7688.23,,4,1,1,0,"https://github.com/firefly-cpp/awesome-computational-intelligence-in-sports#readme\nThis is a list of resources related to Computational Intelligence (CI) methods in sports. The list includes books, scientific literature, datasets, software, and web applications that are relevant to researchers who work on applying CI techniques in sports.\nThe list is curated to provide researchers with easy access to a wide range of resources on the topic. The resources in the list are cited using the MLA 8th edition format and cover a variety of sports such as cycling, soccer, track and field, triathlon, and wrestling.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\nRequirements for your pull request\n\n[✔️] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n[✔️] Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n[✔️] You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n\n#2560 -> Comment\n#2550 -> Comment\n\n\n[✔️] You have read and understood the instructions for creating a list.\n[✔️] This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n[✔️] Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n[✔️] Your entry should be added at the bottom of the appropriate category.\n[✔️] The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n[✔️] The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n[✔️] Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n[✔️] Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n[✔️] The default branch should be named main, not master.\n[✔️] Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n[✔️] It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n[✔️] The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n[✔️] The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n[✔️] Non-generated Markdown file in a GitHub repo.\n[✔️] The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n[✔️] Not a duplicate. Please search for existing submissions.\n[✔️] Only has awesome items. Awesome lists are curations of the best, not everything.\n[✔️] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n[✔️] Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n[✔️] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n[✔️] Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n[✔️] Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n[✔️] Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n[✔️] Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n[✔️] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n[✔️] Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n[✔️] Does not use hard-wrapping.\n[✔️] Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n[✔️] Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again.",7750,5,12
sindresorhus/awesome,297783,1985,CLOSED,Add GitHub Organizations,2560,2023-03-23 18:24:05+00:00,2024-02-13 21:22:48+00:00,,7850.978611111111,,11,1,1,0,"https://github.com/beansource/awesome-orgs\nThis is a list of awesome GitHub Organizations.\nBy submitting this pull request I confirm I've read and complied with the below requirements 🖖\nPlease read it multiple times. I spent a lot of time on these guidelines and most people miss a lot. ✅\nRequirements for your pull request\n\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\n You have to review at least 2 other open pull requests.\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting “looks good” or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review.\n\n#2525, #2539, & #2503\n\n\n You have read and understood the instructions for creating a list.\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\n\n✅ Add Swift\n✅ Add Software Architecture\n❌ Update readme.md\n❌ Add Awesome Swift\n❌ Add swift\n❌ add Swift\n❌ Adding Swift\n❌ Added Swift\n\n\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\n\n✅ - [iOS](…) - Mobile operating system for Apple phones and tablets.\n✅ - [Framer](…) - Prototyping interactive UI designs.\n❌ - [iOS](…) - Resources and tools for iOS development.\n❌ - [Framer](…)\n❌ - [Framer](…) - prototyping interactive UI designs\n\n\n Your entry should be added at the bottom of the appropriate category.\n The title of your entry should be title-cased and the URL to your list should end in #readme.\n\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\n\n\n The suggested Awesome list complies with the below requirements.\n\nRequirements for your Awesome list\n\n Has been around for at least 30 days.That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\n The default branch should be named main, not master.\n Includes a succinct description of the project/theme at the top of the readme. (Example)\n\n✅ Mobile operating system for Apple phones and tablets.\n✅ Prototyping interactive UI designs.\n❌ Resources and tools for iOS development.\n❌ Awesome Framer packages and tools.\n\n\n It's the result of hard work and the best I could possibly produce.\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\n\n✅ awesome-swift\n✅ awesome-web-typography\n❌ awesome-Swift\n❌ AwesomeWebTypography\n\n\n The heading title of your list should be in title case format: # Awesome Name of List.\n\n✅ # Awesome Swift\n✅ # Awesome Web Typography\n❌ # awesome-swift\n❌ # AwesomeSwift\n\n\n Non-generated Markdown file in a GitHub repo.\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\n Not a duplicate. Please search for existing submissions.\n Only has awesome items. Awesome lists are curations of the best, not everything.\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\n Includes a project logo/illustration whenever possible.\n\nEither centered, fullwidth, or placed at the top-right of the readme. (Example)\nThe image should link to the project website or any relevant website.\nThe image should be high-DPI. Set it to maximum half the width of the original image.\n\n\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\n Includes the Awesome badge.\n\nShould be placed on the right side of the readme heading.\n\nCan be placed centered if the list has a centered graphics header.\n\n\nShould link back to this list.\n\n\n Has a Table of Contents section.\n\nShould be named Contents, not Table of Contents.\nShould be the first section in the list.\nShould only have one level of nested lists, preferably none.\nMust not feature Contributing or Footnotes sections.\n\n\n Has an appropriate license.\n\nWe strongly recommend the CC0 license, but any Creative Commons license will work.\n\nTip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly).\n\n\nA code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense.\nPlace a file named license or LICENSE in the repo root with the license text.\nDo not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\nTo verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\n\n\n Has contribution guidelines.\n\nThe file should be named contributing.md. Casing is up to you.\nIt can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content.\nThe section should not appear in the Table of Contents.\n\n\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\n Has consistent formatting and proper spelling/grammar.\n\nThe link and description are separated by a dash. Example: - [AVA](…) - JavaScript test runner.\nThe description starts with an uppercase character and ends with a period.\nConsistent and correct naming. For example, Node.js, not NodeJS or node.js.\n\n\n Does not use hard-wrapping.\n Does not include a CI (e.g. GitHub Actions) badge.You can still use a CI for linting, but the badge has no value in the readme.\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\n\nGo to the top and read it again. ✅",7092,9,16
public-apis/public-apis,290400,2885,CLOSED,Remove anonfile API,3826,2024-04-08 08:58:40+00:00,2024-04-08 12:49:24+00:00,,3.8455555555555554,,0,1,0,1,Anonfile.com is not existing anymore\n\n\n\n[x ] My submission is formatted according to the guidelines in the contributing guide\n[ x] My addition is ordered alphabetically\n[ x] My submission has a useful description\n[ x] The description does not have more than 100 characters\n[ x] The description does not end with punctuation\n[ x] Each table column is padded with one space on either side\n[ x] I have searched the repository for any relevant issues or pull requests\n[ x] Any category I am creating has the minimum requirement of 3 items\n[ x] All changes have been squashed into a single commit,603,1,0
public-apis/public-apis,290400,2885,CLOSED,Add Nba GraphQL API,3813,2024-03-27 16:43:27+00:00,2024-03-27 17:09:02+00:00,,0.4263888888888889,,0,1,3,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Nba,3811,2024-03-27 07:44:09+00:00,2024-03-27 16:17:53+00:00,,8.562222222222223,,0,1,3,1,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Fix broken link for Deutscher Bundestag DIP,3806,2024-03-15 12:29:08+00:00,2024-03-17 11:53:21+00:00,,47.40361111111111,,0,1,1,1,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,1
public-apis/public-apis,290400,2885,CLOSED,Add Tracking API,3796,2024-03-12 04:13:53+00:00,2024-03-14 02:51:05+00:00,,46.62,,0,1,1,0,Add TrackingMore API to Tracking,32,2,1
public-apis/public-apis,290400,2885,CLOSED,added two new APIs,3788,2024-03-05 17:22:26+00:00,2024-03-06 12:50:18+00:00,,19.464444444444446,,0,1,3,0,[ x] My submission is formatted according to the guidelines in the contributing guide\n[ x] My addition is ordered alphabetically\n[x ] My submission has a useful description\n[ x] The description does not have more than 100 characters\n[x ] The description does not end with punctuation\n[x ] Each table column is padded with one space on either side\n[ x] I have searched the repository for any relevant issues or pull requests\n[x ] Any category I am creating has the minimum requirement of 3 items\n[x ] All changes have been squashed into a single commit,559,3,1
public-apis/public-apis,290400,2885,CLOSED,added two APIs,3787,2024-03-05 17:13:44+00:00,2024-03-05 17:21:05+00:00,,0.1225,,0,1,3,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,0
public-apis/public-apis,290400,2885,CLOSED,AYAAN_VIP,3785,2024-03-04 20:48:43+00:00,2024-03-15 18:20:54+00:00,,261.5363888888889,,0,2,10,1837,warp://auto/?ifp=5-10\nwarp://auto/?ifp=10-10\nwarp://162.159.192.51:1074/?ifp=5-10\nwarp://188.114.96.116:7103/?ifp=5-10\nwarp://188.114.96.106:903/?ifp=5-10\nwarp://188.114.99.6:7559/?ifp=5-10\nwarp://162.159.192.202:4177/?ifp=5-10\nwarp://78o4r6ZJ-c6um4T09-F28N3W0n/?ifp=5-10\nwarp://15t2TH3h-8yaY5G17-d5yr6G19/?ifp=5-10\nwarp://engage.cloudflareclient.com:2408/?ifp=5-10,374,3,1
public-apis/public-apis,290400,2885,CLOSED,Update and rename README.md to AYAAN_VIP🛰🇮🇷,3784,2024-03-04 20:45:08+00:00,2024-03-04 20:45:28+00:00,,0.005555555555555556,,0,2,10,1837,warp://auto/?ifp=5-10\nwarp://auto/?ifp=10-10\nwarp://162.159.192.51:1074/?ifp=5-10\nwarp://188.114.96.116:7103/?ifp=5-10\nwarp://188.114.96.106:903/?ifp=5-10\nwarp://188.114.99.6:7559/?ifp=5-10\nwarp://162.159.192.202:4177/?ifp=5-10\nwarp://78o4r6ZJ-c6um4T09-F28N3W0n/?ifp=5-10\nwarp://15t2TH3h-8yaY5G17-d5yr6G19/?ifp=5-10\nwarp://engage.cloudflareclient.com:2408/?ifp=5-10,374,1,1
public-apis/public-apis,290400,2885,CLOSED,Revert 1 09370294856 patch 1,3783,2024-03-04 19:21:58+00:00,2024-03-17 16:10:37+00:00,,308.81083333333333,,0,0,0,0,🛰AYAAN_VIP&&detour=warp://162.159.192.197:7156/?ifp=5-10#🇩🇪AYAAN_VIP-DE&&detour=warp://162.159.192.154:4233/?ifp=5-10#GE🇩🇪&&detour=warp://188.114.99.6:7559/?ifp=10-10#🛰AYAAN_VIP-DE3&&detour=warp://162.159.192.154:4233/?ifp=5-10#VPS&&detour=warp://188.114.98.165:1843/?ifp=5-10#IRAN🇮🇷&&detour=warp://162.159.192.155:7156/?ifp=5-10#IRAN_IR1🇮🇷&&detour=warp://162.159.192.161:890/?ifp=5-10#IR_2,390,2,0
public-apis/public-apis,290400,2885,CLOSED,AY1,3774,2024-02-27 20:23:57+00:00,2024-03-17 16:10:57+00:00,,451.78333333333336,,0,1,99,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,0
public-apis/public-apis,290400,2885,CLOSED,Update LICENSE,3773,2024-02-27 20:18:55+00:00,2024-03-17 16:13:03+00:00,,451.90222222222224,,0,1,99,21,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,0
public-apis/public-apis,290400,2885,CLOSED,Update README.md,3767,2024-02-22 21:31:43+00:00,2024-02-22 21:33:07+00:00,,0.023333333333333334,,0,1,1,1,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Nuh uh,3756,2024-02-01 09:06:24+00:00,2024-03-17 16:13:23+00:00,,1087.1163888888889,,0,1,1,60,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,0
public-apis/public-apis,290400,2885,CLOSED,New branch,3736,2024-01-06 06:17:14+00:00,2024-01-10 19:56:21+00:00,,109.65194444444444,,0,244,19929,1,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,1
public-apis/public-apis,290400,2885,CLOSED,Add manyapis.com to the Currency Exchange,3733,2023-12-28 08:16:01+00:00,2024-01-01 07:04:44+00:00,,94.81194444444445,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,adding tables and formatting for Postman Collections,3720,2023-12-14 18:01:12+00:00,2024-03-14 00:17:06+00:00,,2166.265,,0,3,2006,266,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Add Fygraph API,3716,2023-12-05 03:48:49+00:00,2023-12-05 12:15:44+00:00,,8.448611111111111,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n[x ] The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,526,1,0
public-apis/public-apis,290400,2885,CLOSED,Update README.md,3713,2023-12-04 07:38:51+00:00,2023-12-04 07:40:03+00:00,,0.02,,0,1,1,0,Added new tool for qr code with full support of api\n\n\n\n My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,582,1,1
public-apis/public-apis,290400,2885,CLOSED,Added Stephen King API to Books,3702,2023-11-17 00:12:47+00:00,2023-11-17 01:19:49+00:00,,1.1172222222222221,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Update README.md,3690,2023-10-31 07:28:46+00:00,2024-03-17 16:14:10+00:00,,3320.7566666666667,,0,1,1,1837,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,0
public-apis/public-apis,290400,2885,CLOSED,Update README.md,3688,2023-10-30 18:57:35+00:00,2024-03-17 16:14:35+00:00,,3333.2833333333333,,0,1,0,67,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,0
public-apis/public-apis,290400,2885,CLOSED,Update README.md,3679,2023-10-28 16:59:59+00:00,2024-03-17 16:14:55+00:00,,3383.248888888889,,1,1,1,1,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,3,1
public-apis/public-apis,290400,2885,CLOSED,Update README.md,3678,2023-10-28 16:57:56+00:00,2023-10-28 16:58:44+00:00,,0.013333333333333334,,0,1,1,1,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,2
public-apis/public-apis,290400,2885,CLOSED,Adding_Myself,3667,2023-10-17 06:13:50+00:00,2023-10-19 16:18:19+00:00,,58.07472222222222,,0,1,3,0,"Don't take this pull request seriously! There are no helpful modifications! I just needed practice for forking, cloning, and creating pull requests.",148,2,0
public-apis/public-apis,290400,2885,CLOSED,Test2023 10 16,3665,2023-10-16 06:48:20+00:00,2023-10-17 19:45:45+00:00,,36.956944444444446,,0,6,155,94,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,4,0
public-apis/public-apis,290400,2885,CLOSED,Update README.md,3655,2023-10-03 05:18:38+00:00,2023-10-17 16:40:40+00:00,,347.3672222222222,,0,1,0,1,IQAir API not accesible(Free tier)\n\n\n\n My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,565,2,1
public-apis/public-apis,290400,2885,CLOSED,added: monobank,3654,2023-10-01 19:11:38+00:00,2023-10-04 21:48:11+00:00,,74.60916666666667,,0,1,1,0,[ x ] My submission is formatted according to the guidelines in the contributing guide\n[ x ] My addition is ordered alphabetically\n[ x ] My submission has a useful description\n[ x ] The description does not have more than 100 characters\n[ x ] The description does not end with punctuation\n[ x ] Each table column is padded with one space on either side\n[ x ] I have searched the repository for any relevant issues or pull requests\n[ x ] Any category I am creating has the minimum requirement of 3 items\n[ x ] All changes have been squashed into a single commit,568,1,0
public-apis/public-apis,290400,2885,CLOSED,Kunal,3635,2023-09-19 20:12:13+00:00,2023-09-19 21:16:36+00:00,,1.0730555555555557,,0,1,1,1,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Create asd,3620,2023-09-01 10:54:21+00:00,2023-09-02 21:21:34+00:00,,34.45361111111111,,1,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,0
public-apis/public-apis,290400,2885,CLOSED,Update test_of_push_and_pull.yml,3618,2023-09-01 06:27:01+00:00,2023-09-02 21:21:49+00:00,,38.913333333333334,,1,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,3,0
public-apis/public-apis,290400,2885,CLOSED,Add Padelquest API,3600,2023-08-06 15:02:34+00:00,2023-08-06 15:07:25+00:00,,0.08083333333333333,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been [squashed][squash-link] into a single commit,537,1,0
public-apis/public-apis,290400,2885,CLOSED,Add realip.cc,3579,2023-07-18 07:35:09+00:00,2023-12-21 02:37:35+00:00,,3739.0405555555553,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,added jeyyapi to photography,3566,2023-07-07 10:10:20+00:00,2023-09-06 06:44:38+00:00,,1460.5716666666667,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,add NBA Stats API,3554,2023-06-26 19:55:26+00:00,2024-03-27 16:17:53+00:00,,6596.3741666666665,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,1
public-apis/public-apis,290400,2885,CLOSED,Update test_validate_links.py,3551,2023-06-23 08:40:43+00:00,2023-06-23 19:39:43+00:00,,10.983333333333333,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,0
public-apis/public-apis,290400,2885,CLOSED,Added Raindrop.io API,3550,2023-06-22 21:35:51+00:00,2023-06-26 17:11:39+00:00,,91.59666666666666,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Fixing Yahoo Finance API link on README.md,3549,2023-06-22 01:18:59+00:00,2023-07-08 01:49:32+00:00,,384.50916666666666,,0,1,1,1,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Create Final Assignment,3548,2023-06-20 15:44:08+00:00,2023-06-21 06:59:53+00:00,,15.2625,,0,1,4,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,0
public-apis/public-apis,290400,2885,CLOSED,Add Stores API by FindOpenHours.org,3542,2023-06-15 11:14:44+00:00,2023-06-15 11:17:42+00:00,,0.049444444444444444,,0,1,1,0,Add stores and brands API by FindOpenHours.org  to access ~3.1 million store locations and 45k brands across the US.\n\n\n\n My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,647,1,1
public-apis/public-apis,290400,2885,CLOSED,Add Italian Jokes to the Games & Comics section,3538,2023-06-12 22:57:15+00:00,2023-06-14 22:50:37+00:00,,47.88944444444444,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Added Reconmap API,3532,2023-06-10 04:55:11+00:00,2023-06-10 05:02:01+00:00,,0.11388888888888889,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Added ElevateAI,3530,2023-06-09 17:20:24+00:00,2024-02-01 17:39:48+00:00,,5688.323333333334,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Added Neplix Torrent API,3529,2023-06-09 16:13:53+00:00,2024-01-27 18:02:08+00:00,,5569.804166666667,,0,1,2,1,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,added buffy api,3527,2023-06-08 05:23:51+00:00,2023-06-08 05:39:25+00:00,,0.2594444444444444,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Update README.md Some Animal APIs,3525,2023-06-05 17:23:22+00:00,2023-06-10 06:29:55+00:00,,109.10916666666667,,0,1,7,0,Added Some Animal APIs\n\n\n\n My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,553,1,0
public-apis/public-apis,290400,2885,CLOSED,Added WhatsApp API,3524,2023-06-03 15:46:54+00:00,2023-10-18 20:43:59+00:00,,3292.9513888888887,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Add api.neotastisch.de,3523,2023-06-03 15:40:29+00:00,2023-06-03 15:41:24+00:00,,0.015277777777777777,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Grammar mistakes,3522,2023-05-31 16:56:06+00:00,2023-06-21 07:07:35+00:00,,494.19138888888887,,0,2,4,2,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,0
public-apis/public-apis,290400,2885,CLOSED,testing a pull request,3521,2023-05-31 16:36:05+00:00,2023-05-31 16:36:32+00:00,,0.0075,,0,1,2,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Create algo.py,3519,2023-05-27 09:42:09+00:00,2023-06-21 07:06:43+00:00,,597.4094444444445,,0,1,44,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,0
public-apis/public-apis,290400,2885,CLOSED,Added dadjokes.io api to line 1315 (personailty section),3514,2023-05-17 19:21:59+00:00,2023-05-24 12:04:44+00:00,,160.7125,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Add Databento API,3510,2023-05-09 01:11:31+00:00,2024-03-02 21:46:24+00:00,,7172.581388888889,,1,1,3,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,3,2
public-apis/public-apis,290400,2885,CLOSED,Test,3507,2023-04-29 10:14:16+00:00,2023-06-21 07:06:22+00:00,,1268.8683333333333,,0,1,102,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,0
public-apis/public-apis,290400,2885,CLOSED,Removing pixelencounter from public api,3505,2023-04-27 15:06:28+00:00,2023-04-27 15:13:55+00:00,,0.12416666666666666,,0,1,0,1,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit\n\nReason: The Pixel Encounter will soon shutdown due to cost and no time for maintenance and new development.,633,1,0
public-apis/public-apis,290400,2885,CLOSED,Added Archer API to Video category/section,3501,2023-04-21 06:47:11+00:00,2024-04-08 12:07:39+00:00,,8477.34111111111,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Pls accept my changes,3500,2023-04-20 12:06:39+00:00,2023-06-21 07:05:38+00:00,,1482.9830555555557,,0,1,1,1,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,4,1
public-apis/public-apis,290400,2885,CLOSED,Update and rename test_validate_format.py to Facebook,3492,2023-04-07 05:50:13+00:00,2023-06-21 07:05:12+00:00,,1801.2497222222223,,0,2,1,466,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,0
public-apis/public-apis,290400,2885,CLOSED,Add Kite API,3480,2023-03-26 18:51:12+00:00,2023-04-01 07:57:12+00:00,,133.1,,1,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,1
public-apis/public-apis,290400,2885,CLOSED,Add: Codeforces Readme Stats,3479,2023-03-26 08:17:51+00:00,2023-05-01 18:19:11+00:00,,874.0222222222222,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Added signNow eSignature API link for Documents & Productivity section,3476,2023-03-22 12:31:05+00:00,2023-11-01 10:32:10+00:00,,5374.018055555555,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Add Atlas Academy API,3471,2023-03-16 06:01:27+00:00,2023-04-04 06:05:25+00:00,,456.0661111111111,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Upgrade GitHub Actions,3468,2023-03-15 04:24:23+00:00,2024-02-10 10:02:26+00:00,,7973.634166666667,,0,3,9,9,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,remove deprecated and broken yahoo finance API,3461,2023-03-11 01:28:56+00:00,2023-08-15 15:26:58+00:00,,3781.967222222222,,0,1,8,9,Remove deprecated yahoo finance API,35,1,0
public-apis/public-apis,290400,2885,CLOSED,Add NLP-API to Text Analysis,3460,2023-03-10 14:17:48+00:00,2023-03-13 10:55:50+00:00,,68.63388888888889,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Add NLP-API to Text Analysis,3459,2023-03-10 14:12:20+00:00,2023-03-10 14:15:07+00:00,,0.04638888888888889,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Add OpenTripPlanner API,3455,2023-03-05 23:50:55+00:00,2024-02-03 13:54:13+00:00,,8030.055,,0,1,2,1,Add Open Trip Planner API to Transportation,43,1,0
public-apis/public-apis,290400,2885,CLOSED,Add kisi-missi to Contributors list,3454,2023-03-05 23:11:47+00:00,2023-03-05 23:20:45+00:00,,0.14944444444444444,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Add RandomBigCat API,3452,2023-03-04 12:01:04+00:00,2023-07-12 09:30:48+00:00,,3117.4955555555557,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,1
public-apis/public-apis,290400,2885,CLOSED,Complete API link of What3Words,3450,2023-03-01 21:20:48+00:00,2023-03-16 19:52:26+00:00,,358.52722222222224,,0,1,1,1,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,1
public-apis/public-apis,290400,2885,CLOSED,added   URL Summarization APIs,3449,2023-02-27 14:12:29+00:00,2023-03-13 13:59:23+00:00,,335.7816666666667,,0,1,14,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Create games devlopment,3448,2023-02-26 06:04:12+00:00,2023-09-04 20:14:42+00:00,,4574.175,,0,1,20,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,0,0
public-apis/public-apis,290400,2885,CLOSED,added pdfEndpoint - HTML and URL to PDF API,3446,2023-02-22 13:03:08+00:00,2023-10-02 13:19:42+00:00,,5328.276111111111,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,1
public-apis/public-apis,290400,2885,CLOSED,Update,3438,2023-02-15 23:46:08+00:00,2023-02-15 23:47:00+00:00,,0.014444444444444444,,0,10,13,112,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,1
public-apis/public-apis,290400,2885,CLOSED,Add AskEdith API,3435,2023-02-14 23:34:14+00:00,2023-03-16 19:50:45+00:00,,716.2752777777778,,0,1,1,0,Add the AskEdith API to the Open Data section\n\n\n\n My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,576,1,0
public-apis/public-apis,290400,2885,CLOSED,Update README.md,3428,2023-02-05 12:13:48+00:00,2023-02-22 14:08:24+00:00,,409.91,,0,1,1,1,Previous link was no longer working\nPrevious link: https://oyyi.xyz/docs/1.0 (error 404)\nUpdated link: https://docs.oyyi.xyz/,127,1,0
public-apis/public-apis,290400,2885,CLOSED,Add Yomi API,3422,2023-01-22 22:04:09+00:00,2023-01-23 17:40:03+00:00,,19.598333333333333,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Delete test_of_push_and_pull.yml,3417,2023-01-17 13:20:38+00:00,2023-01-17 13:20:55+00:00,,0.004722222222222222,,0,1,0,37,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Update README.md,3410,2023-01-10 04:20:38+00:00,2023-02-21 08:32:00+00:00,,1012.1894444444445,,1,1,1,1,AniApi link was changed as the old link was not working.\nError : Page not found,80,2,0
public-apis/public-apis,290400,2885,CLOSED,Remove extra chuck norris DB that does not work ,3409,2023-01-09 19:15:37+00:00,2023-08-25 20:14:41+00:00,,5472.984444444444,,0,1,0,1,There already is a chuck norris API that works. The 2nd one does not work.\n\n\n\n My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically - N/A\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side - Not applicable to this change\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items - Not applicable to this change\n All changes have been squashed into a single commit,675,1,2
public-apis/public-apis,290400,2885,CLOSED,I'm trying,3407,2023-01-07 18:26:46+00:00,2023-06-21 07:03:27+00:00,,3948.611388888889,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,3,1
public-apis/public-apis,290400,2885,CLOSED,Add ADVICE API,3400,2022-12-28 19:35:47+00:00,2023-12-26 04:16:23+00:00,,8696.676666666666,,0,1,1681,1579,This API I found provides free random advice and messages. It is really easy to integrate into different projects. It currently gives out over 10 million pieces of advice every year.\n\n My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been [squashed][squash-link] into a single commit,724,1,0
public-apis/public-apis,290400,2885,CLOSED,Updated Excuser API Link,3379,2022-12-15 07:58:41+00:00,2022-12-19 05:38:46+00:00,,93.66805555555555,,0,1,1,1,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,add YouTube Music API,3373,2022-12-09 06:30:52+00:00,2022-12-24 09:23:05+00:00,,362.8702777777778,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,updated link of Excuser API,3372,2022-12-08 19:40:09+00:00,2022-12-13 15:55:55+00:00,,116.26277777777777,,0,1,1,1,"Before the excuser API was hosted on Heroku, but now Heroku has stopped providing free dyno hours, so I had to redeploy it to AWS.\n\n\n\n My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit",661,1,0
public-apis/public-apis,290400,2885,CLOSED,Add quokka.pics API,3369,2022-12-07 10:44:27+00:00,2023-03-08 21:13:41+00:00,,2194.487222222222,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Update README.md,3368,2022-12-06 22:38:58+00:00,2023-01-25 05:48:56+00:00,,1183.1661111111111,,0,1,7,7,corrected a lot of spelling errors in the README.md file.\n\n\n\n My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,588,1,1
public-apis/public-apis,290400,2885,CLOSED,Update README.md,3364,2022-11-30 17:59:49+00:00,2023-01-18 10:08:29+00:00,,1168.1444444444444,,0,1,1,1,This PR has been created because I'm currently rewriting the Axolotl API.\n\n My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,600,1,0
public-apis/public-apis,290400,2885,CLOSED,Add Better Call Saul Quotes API,3361,2022-11-27 02:03:00+00:00,2023-01-04 00:53:57+00:00,,910.8491666666666,,0,1,1,0,Add Better Call Saul Quotes API to Video\n\n\n\n My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,571,1,0
public-apis/public-apis,290400,2885,CLOSED, Add Eltiempo.es  API to  Weather,3356,2022-11-24 15:23:30+00:00,2024-03-02 00:31:11+00:00,,11121.128055555555,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Update and correct owo.vc information,3344,2022-11-11 00:45:17+00:00,2023-12-17 23:44:06+00:00,,9646.980277777779,,0,1,1,1,"Updates owo.vc's link to point to the correct page for API documentation, as well as updates the link text with the full and more accurate name of the service.\n\n\n\n My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit",690,2,1
public-apis/public-apis,290400,2885,CLOSED,Fixed Chuck Norris Broken Link in Games section,3342,2022-11-08 04:47:08+00:00,2022-11-16 12:32:32+00:00,,199.75666666666666,,1,1,1,1,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,0
public-apis/public-apis,290400,2885,CLOSED,Add TimeZones iCal Library to Calendar,3328,2022-10-15 13:15:47+00:00,2023-08-17 09:29:37+00:00,,7340.230555555556,,0,1,1,0,The TimeZones iCal Library holds API endpoints to GET a list of IANA time zones; and can also GET corresponding ical VTIMEZONE blocks as ics file response to include in any .ica iCal file\n\n\n\n My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,718,1,0
public-apis/public-apis,290400,2885,CLOSED,Remove Base API,3325,2022-10-12 01:34:20+00:00,2022-10-31 00:37:00+00:00,,455.0444444444444,,0,1,0,1,Base api no longer exists. If you click the link you will see it directs you no where\n\n\n\n My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,616,2,1
public-apis/public-apis,290400,2885,CLOSED,Add .circleci/config.yml,3323,2022-10-08 23:08:17+00:00,2022-10-12 05:36:02+00:00,,78.4625,,0,1,26,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,1
public-apis/public-apis,290400,2885,CLOSED,test,3313,2022-09-23 10:04:14+00:00,2022-10-14 08:56:12+00:00,,502.86611111111114,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,1
public-apis/public-apis,290400,2885,CLOSED,Add Catbox API to Cloud Storage,3312,2022-09-22 18:00:02+00:00,2022-09-23 08:21:40+00:00,,14.360555555555555,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,1,0
public-apis/public-apis,290400,2885,CLOSED,Add DynamicDocs API,3306,2022-09-19 09:42:13+00:00,2022-11-23 12:52:53+00:00,,1563.1777777777777,,0,1,1,0,My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,522,2,1
public-apis/public-apis,290400,2885,CLOSED,typo correction for Tax data  line 779,3305,2022-09-17 08:04:54+00:00,2023-04-18 10:17:23+00:00,,5114.208055555556,,0,1,1,1,deleted 'unkown'\nreplaced it with 'unknown'\n\n\n\n My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,575,2,1
public-apis/public-apis,290400,2885,CLOSED,Add Meme API scraped from reddit,3300,2022-09-11 20:57:52+00:00,2022-12-03 21:39:57+00:00,,1992.701388888889,,0,1,1,0,A JSON API for a random meme scraped from reddit\n\n\n\n My submission is formatted according to the guidelines in the contributing guide\n My addition is ordered alphabetically\n My submission has a useful description\n The description does not have more than 100 characters\n The description does not end with punctuation\n Each table column is padded with one space on either side\n I have searched the repository for any relevant issues or pull requests\n Any category I am creating has the minimum requirement of 3 items\n All changes have been squashed into a single commit,579,2,1
jwasham/coding-interview-university,281804,939,CLOSED,Progress,1442,2024-04-01 15:11:32+00:00,2024-04-01 15:14:34+00:00,,0.050555555555555555,,0,1,5,5,,0,2,0
jwasham/coding-interview-university,281804,939,CLOSED,Update README.md,1441,2024-03-29 05:52:21+00:00,2024-03-29 05:54:24+00:00,,0.034166666666666665,,0,1,0,1255,Removed everything except the checklist section.,48,1,0
jwasham/coding-interview-university,281804,939,CLOSED,1. subline,1440,2024-03-28 20:31:27+00:00,2024-03-28 20:32:08+00:00,,0.01138888888888889,,0,0,0,0,,0,1,1
jwasham/coding-interview-university,281804,939,CLOSED,HOW TO HIRE MUYERN TRUST HACKER TO CATCH A CHEATER,1439,2024-03-14 14:38:38+00:00,2024-03-14 15:18:35+00:00,,0.6658333333333334,,0,2,1,1957,"Bumping into Muyern Trust Hacker changed everything for me. It helped me see through my boyfriend's lies. His Instagram account, which used to make me happy, turned into a treasure trove of evidence. With Muyern Trust Hacker, I found out he was flirting with other girls. It hurt, but it also gave me the proof I needed to confront him. When I confronted him, I learned he had cheated on me many times and had even fathered three children with different women. It was a shock, but it helped me break free from his lies. I realized I deserved better. After we broke up, I found comfort in knowing I dodged a bullet. The experience taught me to trust myself and set higher standards for treating me. Thanks to Muyern Trust Hacker and the support of my loved ones, I'm moving forward stronger than before. The discovery of Muyern Trust Hacker was like finding a lifeline in a sea of confusion. It was surprisingly easy to use and navigate, even for someone like me who isn't an IT expert. The tool allowed me to track my boyfriend's online activity, revealing the extent of his deceit and infidelity. His Instagram profile, once a source of joy and connection, became a haunting reminder of his betrayal. Every flirtatious comment and private message uncovered by Muyern Trust Hacker felt like a stab in the heart. Yet, it was also empowering to have concrete evidence of his wrongdoing. Confronting him was one of the hardest things I've ever done but also the most liberating. Armed with the evidence provided by Muyern Trust Hacker, I could confront him confidently and finally end the toxic cycle of lies and manipulation. What I uncovered was beyond anything I could have imagined. Not only had he cheated on me multiple times, but he had also fathered three children with three different women. It was a devastating blow, but it also opened my eyes to the true extent of his betrayal. Walking away from the relationship was a painful decision, but it was also a necessary one. With the support of my friends and family and the clarity provided by Muyern Trust Hacker, I found the strength to move forward. In the aftermath of the breakup, I found solace in knowing I had dodged a bullet. The experience, though painful, has taught me valuable lessons about self-worth and resilience. Thanks to Muyern Trust Hacker, I was able to reclaim my dignity and find closure in the aftermath of heartbreak. (web; https://muyerntrusthack.solutions/) muyerntrusted (at) mail-me (dot) c o m or  Telegram (at)  muyerntrusthackertech",2521,2,0
jwasham/coding-interview-university,281804,939,CLOSED,Prog,1437,2024-03-11 13:21:30+00:00,2024-03-11 13:24:09+00:00,,0.04416666666666667,,0,1,24,0,,0,1,0
jwasham/coding-interview-university,281804,939,MERGED,docs: Add new resource for practicing system design problems,1436,2024-03-05 13:01:51+00:00,2024-03-05 15:56:18+00:00,2024-03-05 15:56:18+00:00,2.9075,,0,1,1,0,,0,2,0
jwasham/coding-interview-university,281804,939,MERGED,Update README.md to include Codemia as a tool to practice system desi…,1435,2024-03-02 02:01:59+00:00,2024-03-03 18:44:14+00:00,2024-03-03 18:44:14+00:00,40.704166666666666,,0,1,1,0,…gn problems.\ncodemia.io is a platform for practicing and studying system design problem. Users can practice alone via AI tool or share their solution on the platform to get human feedback as well.,198,2,0
jwasham/coding-interview-university,281804,939,MERGED,docs: update Chinese translation for algorithm analysis video URL,1433,2024-02-22 11:26:10+00:00,2024-02-23 02:37:58+00:00,2024-02-23 02:37:58+00:00,15.196666666666667,,0,1,1,1,,0,2,0
jwasham/coding-interview-university,281804,939,CLOSED,Progress,1432,2024-02-15 16:18:01+00:00,2024-02-15 16:34:12+00:00,,0.2697222222222222,,0,2,2,2,,0,1,0
jwasham/coding-interview-university,281804,939,CLOSED,Tandai X,1431,2024-02-15 13:04:08+00:00,2024-02-15 13:10:13+00:00,,0.10138888888888889,,0,2,2,2,"I already read about the ABC section. And my conclusion is keeping code, because that's seems like practice.",108,1,0
jwasham/coding-interview-university,281804,939,MERGED,Update global translations,1430,2024-02-02 11:29:40+00:00,2024-02-02 17:58:10+00:00,2024-02-02 17:58:10+00:00,6.475,,0,16,345,298,"I've managed to fix the backwards orientation of the translations section in the master README.md and went to update the translations sections of each language.\nAside from that, I sorted the entries in alphabetical order.",222,2,2
jwasham/coding-interview-university,281804,939,MERGED,Update formatting and fix typos in README-bg.md,1428,2024-01-28 17:39:40+00:00,2024-01-28 18:42:24+00:00,2024-01-28 18:42:24+00:00,1.0455555555555556,,0,1,62,64,"Fixing some minor issues, that I've stumbled on the Bulgarian README.\n\nThere was a typo in one of the descriptions related to Nick White's sections\nFixing the indentation and unnecessary white spaces of the majority of the README\n\nAfaik it's ready to merge.",262,2,1
jwasham/coding-interview-university,281804,939,CLOSED,Bbb,1427,2024-01-28 15:22:45+00:00,2024-01-28 15:23:19+00:00,,0.009444444444444445,,0,0,0,0,,0,1,0
jwasham/coding-interview-university,281804,939,CLOSED,Progress,1426,2024-01-28 15:06:25+00:00,2024-01-28 15:08:19+00:00,,0.03166666666666667,,0,0,0,0,X,1,1,1
jwasham/coding-interview-university,281804,939,CLOSED,Update README.md,1425,2024-01-27 17:34:37+00:00,2024-01-27 17:35:01+00:00,,0.006666666666666667,,0,1,1,1,,0,1,0
jwasham/coding-interview-university,281804,939,CLOSED,updated from main,1422,2024-01-09 17:32:05+00:00,2024-01-10 04:29:53+00:00,,10.963333333333333,,0,1,1,1,,0,2,1
jwasham/coding-interview-university,281804,939,MERGED,"Update review video count, add playlist for algorithm analysis",1421,2024-01-06 18:15:45+00:00,2024-01-06 19:37:39+00:00,2024-01-06 19:37:39+00:00,1.365,,0,28,55,55,I added two videos on algorithm analysis.,41,2,1
jwasham/coding-interview-university,281804,939,MERGED,"Updated README-bn(Typo, Formatting, Linking issue).md ",1420,2024-01-01 06:47:43+00:00,2024-01-31 16:45:19+00:00,2024-01-31 16:45:19+00:00,729.96,,0,1,413,413,Updated\n\nTypo\nFormatting\nLinking,36,2,3
jwasham/coding-interview-university,281804,939,CLOSED,"Updated README-bn(typo, formatting, linking issue).md",1419,2024-01-01 06:37:42+00:00,2024-01-01 06:46:30+00:00,,0.14666666666666667,,0,1,414,414,"Updated Typo Error, Formatting, and some linking problem",56,1,0
jwasham/coding-interview-university,281804,939,MERGED,"Corrected translations, added punctuation and fixed spelling mistakes.",1418,2023-12-30 23:30:13+00:00,2023-12-31 01:05:54+00:00,2023-12-31 01:05:54+00:00,1.5947222222222222,,0,1,19,19,,0,2,1
jwasham/coding-interview-university,281804,939,MERGED,Complete migration of Japanese translation update,1416,2023-12-16 11:42:34+00:00,2023-12-17 02:57:36+00:00,2023-12-17 02:57:36+00:00,15.250555555555556,,0,1,653,570,"The work of updating and translating the Japanese md files, which had been in progress gradually for some time, is now complete!\nPlease check it out!",150,2,1
jwasham/coding-interview-university,281804,939,MERGED,Update README-tr.md,1415,2023-12-04 20:43:33+00:00,2023-12-04 23:12:23+00:00,2023-12-04 23:12:23+00:00,2.4805555555555556,,0,1,14,14,Translated few of the parts - more to come,42,2,1
jwasham/coding-interview-university,281804,939,MERGED,Update README-vi.md,1411,2023-11-15 08:53:31+00:00,2023-11-16 03:09:19+00:00,2023-11-16 03:09:19+00:00,18.263333333333332,,0,1,930,827,"The Vietnamese version has not been updated for a long time, so there is a lot of redundant information still available and the documents have not been updated according to the latest link.\n@jwasham please review and merge this PR.",232,2,1
jwasham/coding-interview-university,281804,939,CLOSED,test forking,1409,2023-11-04 13:38:07+00:00,2023-11-04 13:39:14+00:00,,0.01861111111111111,,0,1,1,0,just a simple test of forking 1st time,38,1,0
jwasham/coding-interview-university,281804,939,MERGED,End of Japanese translation of topic of study.,1408,2023-11-03 17:26:42+00:00,2023-11-03 23:50:57+00:00,2023-11-03 23:50:57+00:00,6.404166666666667,,0,2,301,472,Summary\nJapanese translation of the Study of topic section and some additional corrections in README.md have been made.\nThank you for your cooperation.,153,2,0
jwasham/coding-interview-university,281804,939,MERGED,Japanese translation of tree and sorting section,1406,2023-11-02 10:55:32+00:00,2023-11-03 15:22:25+00:00,2023-11-03 15:22:24+00:00,28.448055555555555,,0,1,98,80,Summary\nJapanese translation and updating of the Trees and Sorting sections of Topics of Study.\nThank you very much!,118,2,0
jwasham/coding-interview-university,281804,939,MERGED,Fixes where listings are not valid,1405,2023-11-01 13:15:50+00:00,2023-11-01 15:29:21+00:00,2023-11-01 15:29:21+00:00,2.225277777777778,,0,1,3,2,Summary\nCorrected areas where listings were not valid.\nThe Japanese translation has been corrected.,101,2,0
jwasham/coding-interview-university,281804,939,MERGED,Translated to other knowledge items in the research themes section,1404,2023-11-01 13:02:25+00:00,2023-11-01 15:26:26+00:00,2023-11-01 15:26:26+00:00,2.4002777777777777,,0,1,255,266,"Summary\nTranslations and unification of shaky terminology, even in the Other Knowledge section of the Research Themes section.",127,2,0
jwasham/coding-interview-university,281804,939,MERGED,Remove trailing spaces at end of text,1403,2023-10-30 12:53:23+00:00,2023-10-30 16:18:39+00:00,2023-10-30 16:18:39+00:00,3.421111111111111,,0,1,31,31,Summary\nWe found unnecessary white space at the end of the README text and removed all of it.,94,2,2
jwasham/coding-interview-university,281804,939,MERGED,Complete transition of study plan sections,1402,2023-10-30 12:46:39+00:00,2023-10-30 16:20:10+00:00,2023-10-30 16:20:09+00:00,3.558611111111111,,0,1,227,209,Summary\nWe have completely migrated sections of the study plan.\nSubsequent sections will be migrated and updated as needed.,125,2,0
jwasham/coding-interview-university,281804,939,CLOSED,Src/data structures/array,1401,2023-10-30 04:18:04+00:00,2023-10-30 04:20:26+00:00,,0.03944444444444444,,0,5,220,26,,0,1,0
jwasham/coding-interview-university,281804,939,MERGED,Corrected and updated Japanese translation.,1400,2023-10-29 01:39:26+00:00,2023-10-29 17:18:59+00:00,2023-10-29 17:18:59+00:00,15.659166666666666,,0,1,52,38,"Summary\nThe Japanese translation was adjusted and updated due to differences from the README.\nThe scope of this update is large, so we plan to update it little by little.\nThank you for your cooperation.",205,2,4
jwasham/coding-interview-university,281804,939,MERGED,Update README.md Grammatically,1398,2023-10-25 04:48:25+00:00,2023-10-25 15:26:42+00:00,2023-10-25 15:26:42+00:00,10.638055555555555,,0,1,94,94,Improved README.md grammatically.,33,2,1
jwasham/coding-interview-university,281804,939,CLOSED,update readme,1397,2023-10-24 01:58:52+00:00,2023-10-24 02:03:07+00:00,,0.07083333333333333,,0,29,1111,53274,,0,1,0
jwasham/coding-interview-university,281804,939,MERGED,"Correct translation for Graphs is ""Grafos"" instead of ""Graficos"". Fixed that!",1396,2023-10-23 23:36:24+00:00,2023-10-24 00:24:02+00:00,2023-10-24 00:24:02+00:00,0.7938888888888889,,0,1,5,5,"Fixed mistaken translation to spanish. Replaced ""Graficos"" (wrong) with ""Grafos"" (right) for Graphs.",100,2,1
jwasham/coding-interview-university,281804,939,MERGED,Fix french typos in README-fr.md,1395,2023-10-19 13:04:20+00:00,2023-10-19 14:54:53+00:00,2023-10-19 14:54:53+00:00,1.8425,,0,1,5,5,Just fix some small typos,25,2,1
jwasham/coding-interview-university,281804,939,CLOSED,Create CodingInterview.java,1394,2023-10-16 07:50:23+00:00,2023-10-16 16:06:49+00:00,,8.273888888888889,,0,1,99,0,My code,7,3,4
jwasham/coding-interview-university,281804,939,MERGED,update README-cn.md,1393,2023-10-15 03:47:21+00:00,2023-10-15 06:41:05+00:00,2023-10-15 06:41:05+00:00,2.8955555555555557,,0,1,1,0,update README-cn.md,19,2,0
jwasham/coding-interview-university,281804,939,CLOSED,Update .gitignore,1391,2023-10-02 14:46:57+00:00,2023-10-02 14:47:37+00:00,,0.011111111111111112,,0,1,4,1,,0,2,2
jwasham/coding-interview-university,281804,939,MERGED,Add Hello Interview to mock interview resources,1389,2023-09-30 00:12:51+00:00,2023-10-02 14:57:51+00:00,2023-10-02 14:57:51+00:00,62.75,,0,1,1,0,Thanks so much for creating CIU! I've added a link to Hello Interview (disclosure: I am one of the cofounders) for prospective engineers to help prepare.\nSeparately: we have a budget to sponsor great resources like CIU. If you accept sponsorships I'd love to talk!,265,2,1
jwasham/coding-interview-university,281804,939,MERGED,feat: Updated README-tr.md,1388,2023-09-28 21:18:55+00:00,2023-09-29 02:56:02+00:00,2023-09-29 02:56:02+00:00,5.618611111111111,,0,1,1,1,I updated README-tr.md\nPlease add me as contributor,52,2,1
jwasham/coding-interview-university,281804,939,CLOSED,cn: make the links clickable,1386,2023-09-27 10:12:21+00:00,2023-09-27 15:58:03+00:00,,5.761666666666667,,0,1,4,4,,0,3,2
jwasham/coding-interview-university,281804,939,MERGED,Update README-cn.md 'is trivial' => 微不足道,1385,2023-09-25 03:46:25+00:00,2023-09-25 15:29:29+00:00,2023-09-25 15:29:29+00:00,11.717777777777778,,0,1,1,1,Update README-cn.md 'is trivial' => 微不足道,40,2,1
jwasham/coding-interview-university,281804,939,CLOSED,Modify: REAMD.md,1383,2023-09-10 07:59:56+00:00,2023-09-10 08:00:14+00:00,,0.005,,0,1,2,505,,0,1,0
jwasham/coding-interview-university,281804,939,MERGED,Fix french typos,1381,2023-09-03 21:09:24+00:00,2023-09-04 01:27:28+00:00,2023-09-04 01:27:28+00:00,4.301111111111111,,0,1,19,19,Fix french typos,16,2,1
jwasham/coding-interview-university,281804,939,CLOSED,completed Harvard CS50 - Asymptotic Notation (video),1380,2023-09-02 06:04:52+00:00,2023-09-02 17:50:19+00:00,,11.7575,,0,1,40,40,,0,2,1
jwasham/coding-interview-university,281804,939,CLOSED,exemple_file,1379,2023-08-22 14:17:54+00:00,2023-08-22 15:13:47+00:00,,0.9313888888888889,,0,1,3,0,IT JUST EXEMPLE!,16,2,0
jwasham/coding-interview-university,281804,939,CLOSED,Create Learn,1378,2023-08-18 16:16:59+00:00,2023-08-19 01:12:38+00:00,,8.9275,,0,1,1,0,,0,2,0
jwasham/coding-interview-university,281804,939,MERGED,Update the full Chinese documentation,1376,2023-08-08 09:37:47+00:00,2023-08-08 15:19:55+00:00,2023-08-08 15:19:55+00:00,5.702222222222222,,0,1,656,653,"Changes:\n\nThe complete translation in the file ""translations/README-cn.md"" has been modified.",95,2,1
jwasham/coding-interview-university,281804,939,MERGED,Update section of Chinese documents,1375,2023-08-06 04:35:39+00:00,2023-08-06 17:22:17+00:00,2023-08-06 17:22:17+00:00,12.777222222222223,,0,1,8,7,Changes:\n\nSome translations in the file 'translations/README-cn.md' have been modified,88,2,1
jwasham/coding-interview-university,281804,939,MERGED,Fixed duplicated bullet point,1372,2023-07-18 06:27:28+00:00,2023-07-19 02:53:35+00:00,2023-07-19 02:53:35+00:00,20.435277777777777,,1,1,0,1,,0,3,1
jwasham/coding-interview-university,281804,939,CLOSED,Translation of three chapters ,1371,2023-07-17 15:47:43+00:00,2023-07-18 06:20:18+00:00,,14.543055555555556,,0,1,1253,1193,from 227 to 257 line,20,1,0
jwasham/coding-interview-university,281804,939,CLOSED,Preparation for Full Stack Web Developer,1368,2023-07-12 05:50:14+00:00,2023-07-12 16:50:24+00:00,,11.002777777777778,,1,1,1247,1128,I have added a few steps to Become a Full Stack Web Developer. I have also added a list of concepts which are relevant to develop a full stack website.\nThank You,162,3,1
jwasham/coding-interview-university,281804,939,CLOSED,change site for new languages,1367,2023-07-10 04:55:55+00:00,2023-08-06 17:23:08+00:00,,660.4536111111111,,0,1,1217,1128,,0,2,1
jwasham/coding-interview-university,281804,939,CLOSED,add this to me,1366,2023-07-09 07:19:52+00:00,2023-07-09 19:54:56+00:00,,12.584444444444445,,0,1,1,0,,0,2,1
jwasham/coding-interview-university,281804,939,MERGED,Updated Readme.md,1365,2023-07-06 09:42:45+00:00,2023-07-07 02:16:15+00:00,2023-07-07 02:16:15+00:00,16.558333333333334,,0,1,5,5,"Put some links for the problems and updated a link in Readme.md , and thankfully there aren't formatting changes this time.",123,2,1
jwasham/coding-interview-university,281804,939,CLOSED,Updated Readme.md for Non-Working Links,1364,2023-07-05 14:29:45+00:00,2023-07-06 09:06:01+00:00,,18.604444444444443,,0,1,1209,1127,Saw the nonworking sites issues section by the bot and tested them for myself and with Is The website down programs. Found one that was not working and replaced it with similar content.,185,2,1
jwasham/coding-interview-university,281804,939,CLOSED,Progress branch merge,1363,2023-07-03 20:45:50+00:00,2023-07-03 20:46:06+00:00,,0.0044444444444444444,,0,1,1273,1159,,0,1,0
jwasham/coding-interview-university,281804,939,CLOSED,Revert 1 main,1361,2023-06-29 03:42:12+00:00,2023-06-29 03:42:28+00:00,,0.0044444444444444444,,0,28,36,43,,0,1,0
jwasham/coding-interview-university,281804,939,MERGED,"Add review videos for AVL trees, code examples",1360,2023-06-26 22:14:49+00:00,2023-07-06 02:12:58+00:00,2023-07-06 02:12:58+00:00,219.96916666666667,,0,27,109,55,"Add review playlist for AVL trees\nAdd code examples for review videos\nUpdate channel URL to the ""friendly"" one",112,2,10
jwasham/coding-interview-university,281804,939,MERGED,Update video count for review videos,1357,2023-06-13 18:13:51+00:00,2023-06-15 02:15:38+00:00,2023-06-15 02:15:38+00:00,32.02972222222222,,1,27,27,27,"I added a few more videos to round out Fibonacci heaps, updating video count.",77,3,0
jwasham/coding-interview-university,281804,939,CLOSED,Update README-uk.md,1355,2023-05-31 12:07:06+00:00,2023-12-28 23:27:21+00:00,,5075.3375,,0,1,31,33,translated some parts to Ukrainian,34,2,1
jwasham/coding-interview-university,281804,939,CLOSED,Progress,1354,2023-05-17 22:53:04+00:00,2023-05-17 22:53:43+00:00,,0.010833333333333334,,0,1,10,409,,0,1,0
jwasham/coding-interview-university,281804,939,MERGED,Added a new resource,1352,2023-05-15 11:14:44+00:00,2023-05-15 19:01:50+00:00,2023-05-15 19:01:50+00:00,7.785,,1,1,1,0,"Hey, I have added a reference link for Python Guide. I came upon this article while looking for resources to learn Python. This citation, in my opinion, will enhance the content of this article. Hope that my contribution will benefit other learners.",249,3,1
jwasham/coding-interview-university,281804,939,CLOSED,Merge pull request #1 from jwasham/main,1349,2023-04-30 08:14:49+00:00,2023-04-30 08:15:16+00:00,,0.0075,,0,0,0,0,,0,1,0
jwasham/coding-interview-university,281804,939,MERGED,Update README-uz.md,1347,2023-04-25 10:23:21+00:00,2023-04-25 15:12:30+00:00,2023-04-25 15:12:30+00:00,4.819166666666667,,0,1,8,0,Added websites for data structure and algorithm visualizations.\nThese websites help to understand how data structures and algorithms work.,139,2,2
jwasham/coding-interview-university,281804,939,CLOSED,Code files,1345,2023-04-02 08:19:26+00:00,2023-04-02 20:49:35+00:00,,12.5025,,0,15,606,0,"added C programs for topics like arrays,searching and sorting to help biginners get into the world of programming. TX :)",120,2,1
jwasham/coding-interview-university,281804,939,CLOSED,Marked X,1344,2023-03-30 19:17:02+00:00,2023-04-23 18:10:16+00:00,,574.8872222222222,,0,1,11,11,"Sorry for asking this rudiment question, but I'm trying to understand how to use this repo to track the progress, I marked an item as 'X' and then\ngit rebase jwasham/main\ngit push --set-upstream origin progress\ngit push --force\nwhich created this personal progress pull request (PR). I'm confused if marking other items as 'X' in the future will create additional PRs, or if it only happens once.\nThanks for clarifying!",424,3,4
jwasham/coding-interview-university,281804,939,CLOSED,Add Coding Challenges Newsletter,1342,2023-03-28 19:58:16+00:00,2023-04-23 17:40:11+00:00,,621.6986111111111,,0,1,1,0,Adds the newsletter that provides coding challenges aimed at helping software engineers improve their craft by building real-world applications.,144,2,1
jwasham/coding-interview-university,281804,939,CLOSED,Progress,1339,2023-03-27 09:55:13+00:00,2023-03-27 09:55:26+00:00,,0.003611111111111111,,0,1,42,42,Sorry my mistake please ignore this PR,38,1,0
jwasham/coding-interview-university,281804,939,MERGED,Fix broken link to a Python resource,1338,2023-03-19 15:10:43+00:00,2023-03-19 18:45:09+00:00,2023-03-19 18:45:09+00:00,3.573888888888889,,0,1,1,1,,0,2,1
jwasham/coding-interview-university,281804,939,CLOSED,By syed Dayim shah,1337,2023-03-18 11:24:00+00:00,2023-03-18 18:13:07+00:00,,6.818611111111111,,0,2,167,0,,0,2,3
jwasham/coding-interview-university,281804,939,MERGED,Update Meetapro link,1336,2023-03-17 16:00:03+00:00,2023-03-22 15:06:26+00:00,2023-03-22 15:06:26+00:00,119.10638888888889,,0,1,1,1,@jwasham  Thank you very much for merging the previous change!,62,2,0
jwasham/coding-interview-university,281804,939,MERGED,Add a new mock interview website,1335,2023-03-17 06:24:43+00:00,2023-03-17 15:08:08+00:00,2023-03-17 15:08:08+00:00,8.723611111111111,,0,1,1,0,It is a great mock interview option for job seekers to prepare for upcoming interviews. The interviewers on Meetapro are very experienced.,138,2,0
jwasham/coding-interview-university,281804,939,CLOSED,Create readme.txt,1331,2023-03-05 06:19:59+00:00,2023-03-05 06:22:20+00:00,,0.03916666666666667,,0,1,1,0,,0,1,0
jwasham/coding-interview-university,281804,939,CLOSED,Progress,1330,2023-02-27 18:45:51+00:00,2023-02-28 02:35:42+00:00,,7.8308333333333335,,1,1,10,10,,0,3,1
jwasham/coding-interview-university,281804,939,MERGED,Fixed missing links and translation errors,1329,2023-02-27 05:21:59+00:00,2023-03-06 16:07:42+00:00,2023-03-06 16:07:42+00:00,178.76194444444445,,0,1,404,300,Missing links and translation error has been fixed,50,2,5
jwasham/coding-interview-university,281804,939,CLOSED,Revise and rewrite the sections given below:,1328,2023-02-21 18:17:54+00:00,2023-02-23 03:11:18+00:00,,32.89,,0,2,94,97,Stack\nQueue\nTrees,19,2,2
jwasham/coding-interview-university,281804,939,MERGED,Update translation links,1327,2023-02-20 09:52:35+00:00,2023-02-20 18:10:13+00:00,2023-02-20 18:10:13+00:00,8.293888888888889,,0,1,1,1,"removing the Urdu translation link from ""Translation in progress"" and adding it to ""Translations""",97,2,0
jwasham/coding-interview-university,281804,939,MERGED,Complete Urdu Translation,1326,2023-02-19 22:01:34+00:00,2023-02-20 04:26:11+00:00,2023-02-20 04:26:11+00:00,6.410277777777778,,0,1,676,729,@jwasham please merge it now,28,2,1
jwasham/coding-interview-university,281804,939,MERGED,Minor changes and updates,1325,2023-02-15 21:00:55+00:00,2023-02-16 01:36:48+00:00,2023-02-16 01:36:48+00:00,4.598055555555556,,0,1,453,394,"This pull request is mostly covering typos, fixing indentation, updates the languages list and adds a small new section to the Bulgarian translation about git.",159,2,1
jwasham/coding-interview-university,281804,939,MERGED,Add short review videos in other languages,1322,2023-02-10 17:32:05+00:00,2023-02-12 18:54:09+00:00,2023-02-12 18:54:09+00:00,49.367777777777775,,0,28,613,35,"Adding these for parity with the English version.\nAt first, I translated the titles to the corresponding language, but realized that it\nmay change the meaning. It seems like most of the video titles are in English,\nbut it's not 100% consistent. However, happy to translate titles if desired.",294,2,1
jwasham/coding-interview-university,281804,939,CLOSED,Contributing.md,1321,2023-02-10 11:05:13+00:00,2023-02-10 16:58:04+00:00,,5.880833333333333,,0,1,47,0,Added contributing guidelines for the coding-interview-university.,66,2,1
jwasham/coding-interview-university,281804,939,CLOSED,Reading update,1320,2023-02-07 18:58:18+00:00,2023-02-07 18:58:50+00:00,,0.008888888888888889,,0,1,4,4,,0,1,0
jwasham/coding-interview-university,281804,939,CLOSED,Update Urdu readme,1319,2023-02-03 23:50:06+00:00,2023-02-19 21:54:41+00:00,,382.0763888888889,,0,0,0,0,update Urdu translation as per the latest version of English readme file contents,81,2,3
jwasham/coding-interview-university,281804,939,MERGED,Correction of Introductory para,1318,2023-02-03 12:12:02+00:00,2023-02-03 17:01:48+00:00,2023-02-03 17:01:47+00:00,4.829444444444444,,0,1,7,8,conventional and idiomatic correction of the introductory paragraph according to the speaking style of native people.,117,3,2
jwasham/coding-interview-university,281804,939,MERGED,translate table of contents in Urdu,1316,2023-02-02 23:27:04+00:00,2023-02-03 01:08:04+00:00,2023-02-03 01:08:04+00:00,1.6833333333333333,,0,1,122,125,,0,2,1
jwasham/coding-interview-university,281804,939,CLOSED,Update README.md,1314,2023-02-02 13:38:24+00:00,2023-02-02 16:34:40+00:00,,2.937777777777778,,0,1,1,1,,0,2,0
jwasham/coding-interview-university,281804,939,CLOSED,first note,1310,2023-01-24 09:07:56+00:00,2023-01-24 16:42:29+00:00,,7.575833333333334,,0,1,1,1,https://github.com/abdullahameromran/coding-interview-universityhttps://github.com/abdullahameromran/coding-interview-universityhttps://github.com/abdullahameromran/coding-interview-university,192,2,0
jwasham/coding-interview-university,281804,939,CLOSED,Update README-ru.md,1308,2023-01-18 13:08:57+00:00,2023-01-18 13:10:18+00:00,,0.0225,,0,1,5,5,18,2,1,0
jwasham/coding-interview-university,281804,939,CLOSED,Big-O notation in simple English and arithmetic,1307,2023-01-17 12:22:45+00:00,2023-01-17 17:43:40+00:00,,5.348611111111111,,0,1,1,0,Simple explanation of Big-0 notation,36,2,1
jwasham/coding-interview-university,281804,939,MERGED,Correct book name in README,1305,2023-01-14 02:49:44+00:00,2023-01-14 18:58:47+00:00,2023-01-14 18:58:47+00:00,16.150833333333335,,0,1,1,1,"The C Programming Language by Brian Kernighan and Dennis Ritchie has one volume and two editions. This would replace ""Vol 2"" with ""2nd Edition"".",144,2,1
jwasham/coding-interview-university,281804,939,CLOSED,Marked x,1303,2023-01-10 20:09:12+00:00,2023-01-11 01:01:41+00:00,,4.874722222222222,,0,1,1,1,,0,2,2
jwasham/coding-interview-university,281804,939,MERGED,Fix Japanese translation,1299,2023-01-08 10:49:30+00:00,2023-01-10 04:40:22+00:00,2023-01-10 04:40:22+00:00,41.84777777777778,,0,1,52,35,"Signed-off-by: Shogo Hida shogo.hida@gmail.com\nI will add Japanese translations to recent content in English like the parts below and try to improve existing translations.\n\nI studied about 8-12 hours a day, for several months. This is my story: Why I studied full-time for 8 months for a Google interview\nPlease Note: You won't need to study as much as I did. I wasted a lot of time on things I didn't need to know. More info about that below. I'll help you get there without wasting your precious time.\n\nAdditional changes\n\nThere were unnecessary spaces after some sentences and they were removed thanks to my Visual Studio Code settings",646,2,4
jwasham/coding-interview-university,281804,939,MERGED,Bangla translation,1298,2023-01-07 15:55:41+00:00,2023-01-10 16:24:14+00:00,2023-01-10 16:24:13+00:00,72.47583333333333,,0,1,92,121,Revise and rewrite the sections given below:\n\nAlgorithmic complexity / Big-O / Asymptotic analysis\nData Structures\nArrays\nLinked Lists,139,2,3
jwasham/coding-interview-university,281804,939,CLOSED,Marked x,1297,2023-01-05 17:56:11+00:00,2023-01-05 18:30:03+00:00,,0.5644444444444444,,0,1,1,1,,0,2,1
jwasham/coding-interview-university,281804,939,MERGED,Fixing link.,1296,2023-01-04 15:08:22+00:00,2023-01-04 20:53:32+00:00,2023-01-04 20:53:32+00:00,5.752777777777778,,0,1,2,2,"The current playlist link for ""SOLID Design Patterns in C#"" is inactive.",72,2,1
jwasham/coding-interview-university,281804,939,MERGED,add Algorithm book from Jeff Erickson from University of Illionis,1293,2022-12-28 06:47:30+00:00,2022-12-29 02:46:09+00:00,2022-12-29 02:46:09+00:00,19.9775,,0,1,1,0,"This is one of decent free text Algorithm book from Jeff Erickson, alternative to paid one, but with high quality material.",123,2,1
jwasham/coding-interview-university,281804,939,MERGED,add NAND to Tetris,1292,2022-12-26 05:07:06+00:00,2022-12-27 16:32:59+00:00,2022-12-27 16:32:59+00:00,35.43138888888889,,2,1,2,1,"add Nand to Tetris, make us more strongly grip on what computer is.",67,2,1
jwasham/coding-interview-university,281804,939,MERGED,Added new linked list resource,1288,2022-12-18 03:53:08+00:00,2022-12-18 19:09:37+00:00,2022-12-18 19:09:37+00:00,15.274722222222222,,1,1,1,0,The first video in the linked lists section goes quickly into the concept. This video will lay a foundation to understand linked lists.,135,2,2
kamranahmedse/developer-roadmap,272764,2700,MERGED,Fix typo for the content typo of 102-chatty-io.md,5471,2024-04-05 23:09:29+00:00,2024-04-07 07:06:03+00:00,2024-04-07 07:06:03+00:00,31.942777777777778,APPROVED,1,1,1,1,"The content's title should be ""Chatty I/O"" instead of ""Chat I/O""",64,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,fix: ai badge text wrap,5462,2024-04-03 16:21:51+00:00,2024-04-03 18:20:38+00:00,2024-04-03 18:20:38+00:00,1.9797222222222222,REVIEW_REQUIRED,0,1,2,2,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,feat: add footer for ai generated roadmaps,5461,2024-04-03 16:12:48+00:00,2024-04-03 19:57:51+00:00,2024-04-03 19:57:51+00:00,3.7508333333333335,REVIEW_REQUIRED,0,4,16,17,,0,3,1
kamranahmedse/developer-roadmap,272764,2700,CLOSED,feat: implement guide table of content,5446,2024-04-01 19:35:22+00:00,2024-04-03 16:26:25+00:00,,44.850833333333334,CHANGES_REQUESTED,1,10,209,38,,0,2,1
kamranahmedse/developer-roadmap,272764,2700,MERGED,Fixed typo,5443,2024-04-01 14:21:09+00:00,2024-04-01 14:22:12+00:00,2024-04-01 14:22:12+00:00,0.0175,REVIEW_REQUIRED,0,1,1,1,Fixes : #5390\nFixed typo in Lazy Eager Explicit Loading of ASP.NET Core Roadmap,80,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Improve NavigationDropdown accessibility ,5442,2024-04-01 14:15:35+00:00,2024-04-01 14:21:47+00:00,,0.10333333333333333,REVIEW_REQUIRED,0,1,6,12,"fixes : #5354\nThis PR addresses:\n\n\nKeyboard accessibility issue: Dropdown menu content is now conditionally rendered based on isOpen state to prevent focus from moving inside when closed.\n\n\nHover effect issue: Added onMouseLeave handler to set isOpen to false when mouse leaves the button area.\n\n\nAdditionally, a smooth 300ms transition has been added for opening and closing the dropdown menu.",404,2,4
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Fix: Updated broken url for javascript and nodejs roadmap ,5437,2024-03-31 19:40:56+00:00,2024-03-31 20:21:30+00:00,,0.6761111111111111,REVIEW_REQUIRED,0,7,33,34,fixes : #5231\nUpdated broken link in javascript and nodejs roadmap for settimeout Explained in 5 minutes!,106,1,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Fix: Updated React Router resource link,5436,2024-03-31 19:23:25+00:00,2024-03-31 20:20:39+00:00,,0.9538888888888889,REVIEW_REQUIRED,0,5,31,32,Fixes : #5270\nUpdated resource for React Router cheatsheet (previous article is deleted),89,1,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Fix: Tab navigation,5433,2024-03-31 17:37:56+00:00,2024-03-31 20:18:39+00:00,,2.678611111111111,REVIEW_REQUIRED,0,3,29,30,Fixes : #5354\nKeyboard only navigation only on visible elements,64,1,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Fix typo,5432,2024-03-31 17:19:42+00:00,2024-03-31 20:12:35+00:00,,2.881388888888889,REVIEW_REQUIRED,0,2,3,3,Fixes :  #5390\nFixed typo in Lazy Eager Explicit Loading of ASP.NET Core Roadmap,81,1,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Fix : Invalid link in Java Developer roadmap #5408,5425,2024-03-30 03:28:01+00:00,2024-03-30 21:14:27+00:00,2024-03-30 21:14:26+00:00,17.773888888888887,APPROVED,1,1,1,1,changed the  original link : https://www.youtube.com/watch?v=xxoacv5xm9s\nupdated uppercase link : https://www.youtube.com/watch?v=XXOaCV5xm9s,142,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Update 103-loadshifting.md,5420,2024-03-28 03:47:49+00:00,2024-03-28 03:48:43+00:00,,0.015,REVIEW_REQUIRED,0,1,1,1,change url aws url is not working,33,1,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,feat: implement checklist,5418,2024-03-27 20:53:50+00:00,2024-03-27 20:56:05+00:00,2024-03-27 20:56:05+00:00,0.0375,REVIEW_REQUIRED,0,3,36,12,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Update 100-mediatr.md (fix a broken link),5417,2024-03-27 18:21:53+00:00,2024-03-27 21:17:00+00:00,2024-03-27 21:17:00+00:00,2.9186111111111113,APPROVED,1,1,1,1,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Update 101-value-comparison-operators.md,5415,2024-03-27 12:46:32+00:00,2024-03-27 12:47:39+00:00,,0.01861111111111111,REVIEW_REQUIRED,0,1,4,0,adding example for this,23,1,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Update 100-osi-model.md,5414,2024-03-27 11:20:18+00:00,2024-03-27 21:18:08+00:00,2024-03-27 21:18:08+00:00,9.963888888888889,APPROVED,1,1,2,2,OCI text corrected to OSI under Application Layer section,57,2,1
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Update 100-render-equation.md,5409,2024-03-25 11:33:50+00:00,2024-03-26 03:03:44+00:00,,15.498333333333333,REVIEW_REQUIRED,0,1,2,1,,0,2,1
kamranahmedse/developer-roadmap,272764,2700,MERGED,Fix typo in Java Developer roadmap,5406,2024-03-24 23:59:58+00:00,2024-03-26 03:04:36+00:00,2024-03-26 03:04:36+00:00,27.077222222222222,REVIEW_REQUIRED,0,1,1,1,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Update 101-value-comparison-operators.md (Added a new link),5401,2024-03-24 08:04:36+00:00,2024-03-26 03:05:13+00:00,,43.01027777777778,REVIEW_REQUIRED,0,1,1,0,Added a  new link,17,2,1
kamranahmedse/developer-roadmap,272764,2700,MERGED,feat/ Added complexity video resource,5399,2024-03-24 07:37:39+00:00,2024-03-26 22:43:14+00:00,2024-03-26 22:43:14+00:00,63.09305555555556,REVIEW_REQUIRED,1,1,3,1,Added video resource for time and space complexity in Data structures and Algorithms section.,93,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Update 103-order-by.md,5398,2024-03-24 06:15:55+00:00,2024-03-24 06:17:41+00:00,,0.029444444444444443,REVIEW_REQUIRED,0,1,2,1,I am adding one other column in this atricle,44,1,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,feat: add increase generation limit options,5388,2024-03-21 16:31:44+00:00,2024-03-26 15:40:27+00:00,2024-03-26 15:40:26+00:00,119.14527777777778,REVIEW_REQUIRED,0,12,577,150,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,feat: add search on the AI explore page,5383,2024-03-20 15:37:32+00:00,2024-03-20 15:38:08+00:00,2024-03-20 15:38:08+00:00,0.01,REVIEW_REQUIRED,0,11,523,113,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Fix typo in System Design Roadmap,5380,2024-03-20 09:19:16+00:00,2024-03-22 08:47:48+00:00,2024-03-22 08:47:48+00:00,47.47555555555556,APPROVED,1,1,1,1,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Fullovka-README-1,5374,2024-03-19 09:53:35+00:00,2024-03-19 09:55:21+00:00,,0.029444444444444443,REVIEW_REQUIRED,0,1,7,7,,0,1,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,README.md,5373,2024-03-19 09:29:11+00:00,2024-03-19 09:55:03+00:00,,0.4311111111111111,REVIEW_REQUIRED,0,1,4,4,,0,1,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,feat: ability to update email,5370,2024-03-18 15:53:29+00:00,2024-03-27 15:38:47+00:00,2024-03-27 15:38:47+00:00,215.755,REVIEW_REQUIRED,0,9,430,67,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Update 104-undefined.md,5369,2024-03-18 14:48:04+00:00,2024-03-18 17:28:58+00:00,2024-03-18 17:28:58+00:00,2.6816666666666666,REVIEW_REQUIRED,0,1,1,1,Correcting the typo.,20,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Updated index.md,5365,2024-03-18 10:13:45+00:00,2024-03-18 15:43:49+00:00,2024-03-18 15:43:49+00:00,5.501111111111111,APPROVED,1,1,2,2,Updated the row query definition. Row queries can return not just one but multiple rows.,88,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,fix: focus disappears in navigation,5355,2024-03-16 09:52:50+00:00,2024-04-01 14:20:16+00:00,2024-04-01 14:20:16+00:00,388.45722222222224,REVIEW_REQUIRED,0,1,2,2,"Fixes #5354\nNow focus works as expected. Focus doesn't disappear, and goes to menu items if the menu is open. Otherwise it goes to next focusable element.",155,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,feat: ai term suggestion input,5349,2024-03-14 20:06:58+00:00,2024-03-19 20:42:30+00:00,2024-03-19 20:42:30+00:00,120.59222222222222,REVIEW_REQUIRED,0,4,395,73,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,feat: implement open graph,5340,2024-03-13 09:49:59+00:00,2024-03-19 03:33:04+00:00,2024-03-19 03:33:04+00:00,137.71805555555557,REVIEW_REQUIRED,0,104,981,19,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Update 102-big-omega.md,5327,2024-03-11 09:42:59+00:00,2024-03-11 09:43:44+00:00,,0.0125,REVIEW_REQUIRED,0,1,1,1,big-omega notation describes the best-case of an algorithm not describe the worst-case as mentioned in the repo.,112,1,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,DSA roadmap change,5316,2024-03-09 12:55:26+00:00,2024-03-11 15:44:40+00:00,,50.82055555555556,REVIEW_REQUIRED,0,1,2,1,"Wants to add the link for study (GFG) in DSA roadmap, for easy navigation\nLike in the array section, there we can add a link of any tutorial page like GFG, so that students can directly go to that page.",203,1,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Remove duplication,5311,2024-03-08 10:47:26+00:00,2024-03-11 05:14:53+00:00,2024-03-11 05:14:52+00:00,66.4575,REVIEW_REQUIRED,0,1,2,2,Near identical sentences appeared in two paragraphs. This condenses that.,73,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,fix: re-fetching roadmaps after rendering,5300,2024-03-06 16:39:20+00:00,2024-03-11 05:14:32+00:00,2024-03-11 05:14:32+00:00,108.58666666666667,REVIEW_REQUIRED,0,11,1224,216,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Adds AI roadmap generator,5289,2024-03-04 17:56:06+00:00,2024-03-04 17:56:15+00:00,2024-03-04 17:56:15+00:00,0.0025,REVIEW_REQUIRED,0,11,688,38,,0,3,1
kamranahmedse/developer-roadmap,272764,2700,MERGED,Fix: Corrected a typo in get started page,5282,2024-03-03 10:15:18+00:00,2024-03-03 16:38:37+00:00,2024-03-03 16:38:37+00:00,6.3886111111111115,APPROVED,1,1,1,1,"Corrected the description of the blockchain roadmap card to ""Blockchain Developer"" instead of ""Technical Writer"".",113,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Fix : typo for route in devops suggestion block  of dock…,5273,2024-03-01 18:29:47+00:00,2024-03-01 18:50:24+00:00,,0.3436111111111111,REVIEW_REQUIRED,0,2,12691,1,Issue : typo in docker roadmap for devops roadmap route,55,1,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Update 100-what-are-datastructures.md,5272,2024-03-01 18:21:03+00:00,2024-03-09 23:56:07+00:00,,197.58444444444444,REVIEW_REQUIRED,0,1,20,2,"I've been exploring your project and noticed that the README could benefit from additional resources on data structures. I believe these resources could provide valuable insights to both new and seasoned developers who are looking to deepen their understanding of data structures.\nIn this pull request, I've added links to:\nGeeksforGeeks - Data Structures: Offers comprehensive coverage from basic to advanced data structure concepts.\nCoursera - Data Structures and Algorithms Specialization: Provides a structured learning path with hands-on projects, offered by UC San Diego & HSE.\nYouTube - mycodeschool: Visual tutorials that make complex data structure concepts easier to grasp.\nThese additions aim to enhance the README by making it a more informative and resourceful document for readers who wish to explore data structures further.\nI hope you find these contributions beneficial. I'm open to feedback and happy to make any adjustments you suggest.",961,1,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,feat: implement generate AI roadmap,5267,2024-02-29 15:41:11+00:00,2024-02-29 15:42:00+00:00,,0.01361111111111111,REVIEW_REQUIRED,0,10,361,83,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Fix Typo in reinforcements-learning.md,5258,2024-02-27 21:20:14+00:00,2024-02-27 21:22:52+00:00,,0.04388888888888889,REVIEW_REQUIRED,0,1,2,2,"Change title from ""Reinforcements"" to ""Reinforcement"". I believe this was a typo when the document was originally created.",122,1,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Fix formatting,5247,2024-02-26 10:53:12+00:00,2024-03-04 13:41:11+00:00,2024-03-04 13:41:11+00:00,170.79972222222221,APPROVED,1,1,1,1,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Update 103-blockchain-forking.md,5230,2024-02-22 02:23:05+00:00,2024-02-22 15:36:29+00:00,2024-02-22 15:36:29+00:00,13.223333333333333,REVIEW_REQUIRED,0,1,0,1,This video isn't available any more,35,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Fixing typo in typescript as type,5227,2024-02-21 13:44:33+00:00,2024-03-04 13:46:22+00:00,2024-03-04 13:46:22+00:00,288.03027777777777,APPROVED,1,1,1,1,"The length of this is 18 but it says 20\n'let someValue: any = ""Hello, TypeScript!"";\nlet strLength: number = (someValue as string).length;\nconsole.log(strLength); // Outputs: 20'",180,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Correct memory occupation from Boolean,5215,2024-02-19 23:34:46+00:00,2024-02-19 23:36:36+00:00,,0.030555555555555555,REVIEW_REQUIRED,0,1,1,1,"Booleans occupy 1 bit (0 or 1), not 1 byte. Edit: It's fake, it uses 1 byte for memory alignment",96,1,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,docs: Added a definition from Technical Writing process book,5188,2024-02-15 01:50:19+00:00,2024-02-15 01:53:19+00:00,,0.05,REVIEW_REQUIRED,0,1,3,1,Added more context and a link to a glossary item from the Technical Writing Process book,88,1,1
kamranahmedse/developer-roadmap,272764,2700,MERGED,fix: set cookie's `SameSite` and `Secure`,5186,2024-02-14 20:18:51+00:00,2024-02-26 12:43:32+00:00,2024-02-26 12:43:32+00:00,280.4113888888889,REVIEW_REQUIRED,0,10,46,56,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,MongoDB Roadmap: VS Analyzer broken link fix,5182,2024-02-14 11:05:38+00:00,2024-02-14 11:11:03+00:00,2024-02-14 11:11:02+00:00,0.09027777777777778,REVIEW_REQUIRED,0,1,15,12,changed broken link for VS Analyzer\nchanged installation steps,63,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,fix: disable login buttons,5179,2024-02-14 08:51:18+00:00,2024-02-14 11:10:09+00:00,2024-02-14 11:10:09+00:00,2.3141666666666665,REVIEW_REQUIRED,2,9,116,61,"It solves the multi-click issue, when you click any two social login buttons at a time it will throw an error. It solves the issue by disabling them when you click one of the buttons until it resolves.",201,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Update MongoDB Documentation Date url,5178,2024-02-14 06:51:43+00:00,2024-02-14 11:11:41+00:00,2024-02-14 11:11:40+00:00,4.332777777777777,REVIEW_REQUIRED,0,1,1,1,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Made Changes to quarternions,5177,2024-02-13 15:10:03+00:00,2024-02-14 11:13:35+00:00,2024-02-14 11:13:35+00:00,20.058888888888887,REVIEW_REQUIRED,1,1,5,1,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Update index.md,5175,2024-02-12 18:57:31+00:00,2024-02-14 11:13:58+00:00,2024-02-14 11:13:58+00:00,40.274166666666666,REVIEW_REQUIRED,0,1,1,1,"change the link to react router tutorial, previous link was outdated",68,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Added two Rust courses,5172,2024-02-12 10:18:52+00:00,2024-02-14 11:15:27+00:00,2024-02-14 11:15:27+00:00,48.94305555555555,REVIEW_REQUIRED,1,1,3,1,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Update 104-hateoas.md: remove unavailable okta's video,5170,2024-02-11 22:39:17+00:00,2024-02-14 11:15:42+00:00,2024-02-14 11:15:42+00:00,60.606944444444444,REVIEW_REQUIRED,0,1,1,5,the video is no longer available. see: https://www.okta.com/video/oktane17-appdev-designing-beautiful-rest-plus-json-apis/,122,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,feat: add use-freeze-scroll hook to topic detail,5168,2024-02-11 15:53:15+00:00,2024-02-14 11:19:21+00:00,,67.435,REVIEW_REQUIRED,0,2,356,336,"The useFreezeScroll hook freezes the scroll and removes the scrollbar from the browser window when it is active, without causing any layout shifts. This is particularly useful, for example, when a modal is opened.\nThis pull request removes the scrollbar from the body when the topic detail is opened. It does not remove the scrollbar from the topic detail itself, so you can still scroll the content of topic while the background is locked.\nI have tested this across different browsers on macOS, Linux, and Windows, and it's almost the only way to avoid layout shifts.",570,2,2
kamranahmedse/developer-roadmap,272764,2700,MERGED,Typo Fix,5166,2024-02-11 12:23:37+00:00,2024-02-11 15:45:57+00:00,2024-02-11 15:45:57+00:00,3.3722222222222222,CHANGES_REQUESTED,1,2,2,2,Fixed Typo in Getting Started page in Frontend section: framewor ~> framework,77,2,2
kamranahmedse/developer-roadmap,272764,2700,CLOSED,fix: navigation dropdown menu in navigation bar that is not 100% hidden,5165,2024-02-11 07:34:44+00:00,2024-02-11 15:47:13+00:00,,8.208055555555555,REVIEW_REQUIRED,0,1,1,0,"Fix\n\nfix: fix navigation dropdown menu in navigation, that is not hidden if not open which it still can be click, but not anymore\n\nScreenshot (before fix)\n\nnavigation open\n\n\n\nnavigation closed\n\n\nnotice the link in the bottom left corner? it means the links is not 100% disappear which makes it still can be clicked even though the navigation dropdown is not opened.\nScreenshot (after fix)\n\nnavigation open\n\n\n\nnavigation closed",446,2,1
kamranahmedse/developer-roadmap,272764,2700,MERGED,fix foundry in blockchain roadmap,5164,2024-02-10 19:33:24+00:00,2024-02-11 15:47:43+00:00,2024-02-11 15:47:43+00:00,20.238611111111112,REVIEW_REQUIRED,0,1,1,1,This PR fixes issue #5159,25,2,1
kamranahmedse/developer-roadmap,272764,2700,MERGED,Fix: Argo CD documentation link,5162,2024-02-10 11:34:22+00:00,2024-02-11 15:48:23+00:00,2024-02-11 15:48:23+00:00,28.23361111111111,REVIEW_REQUIRED,0,1,1,1,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Fix: #5142,5156,2024-02-09 17:46:58+00:00,2024-02-14 11:20:33+00:00,2024-02-14 11:20:33+00:00,113.55972222222222,REVIEW_REQUIRED,0,1,1,1,Fix: #5142,10,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,feat: add all page views,5154,2024-02-09 00:50:53+00:00,2024-02-09 16:14:03+00:00,2024-02-09 16:14:03+00:00,15.386111111111111,REVIEW_REQUIRED,0,6,42,29,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Change Coursera Link about Selection Sort,5153,2024-02-08 09:04:11+00:00,2024-02-08 09:10:02+00:00,,0.0975,REVIEW_REQUIRED,0,1,2,2,"I have watched the Coursera video about selection sort and didn't find any code or explanation about selection sort, most I found about quick sort not selection sort.\nso we can replace it with another source.",209,1,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Update 101-sum.md,5151,2024-02-07 10:02:36+00:00,2024-02-07 15:47:22+00:00,2024-02-07 15:47:22+00:00,5.746111111111111,APPROVED,1,1,7,7,Small Alignment correction,26,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,fix all nodejs doc redirection from .dev to .org,5134,2024-02-04 10:54:36+00:00,2024-02-04 16:09:29+00:00,2024-02-04 16:09:29+00:00,5.248055555555555,APPROVED,1,11,12,11,"Hi, the Node.js official documentation was redirected from .dev to .org, resulting in numerous 404 errors. In this pull request, I have replaced all .dev links with their corresponding .org links.",196,2,1
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Replaced `process.nextTick`  boken link in learning section in `NodeJS`  .,5129,2024-02-03 15:32:27+00:00,2024-02-15 12:38:14+00:00,,285.0963888888889,REVIEW_REQUIRED,0,1,1,1,The first link in NodeJS/async-programming/process.nextTick() leads to a 404 page.\n\n\nChanged the link to the process.nextTick() section in the NodeJS learning page.\n\n\nold link: here\n\n\nupdated link: here,211,1,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Fix #5058 : Add Pointers chapter in GoLang Roadmap,5121,2024-02-01 17:56:00+00:00,2024-02-02 08:07:03+00:00,,14.184166666666666,REVIEW_REQUIRED,1,1,11,0,"This pull request enhances the existing documentation on pointers in Go by providing additional resources for further learning. The current content provides a solid foundation on the fundamentals of pointers in Go, and these resources aim to complement that knowledge. The added references cover a variety of formats, including written tutorials and video explanations, to cater to diverse learning preferences.\nChanges Made:\n\nAdded a section titled ""Visit the following resources to learn more"" with a list of links to external content.\nIncluded a link to a geeksforgeeks.org article providing an in-depth explanation of pointers in Go.\nAdded a link to the ""Go by Example: Structs"" chapter for a more comprehensive understanding of Go's data structures.\nIncluded two video resources (""Go Pointer Explained"" and ""Go Pointer Explained 2"") for visual learners who prefer video tutorials.\nAdded a link to the official Go tour page on pointers for hands-on interactive learning.",981,3,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Fix: adding details and definitions to this article.,5104,2024-01-29 13:55:19+00:00,2024-01-29 14:01:27+00:00,,0.10222222222222223,REVIEW_REQUIRED,0,1,39,1,Adding extra information and descriptions to Application Level Architecture.,76,1,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,fix: remove the non-English youtube video from blockchain roadmap,5088,2024-01-25 04:13:13+00:00,2024-01-25 16:52:19+00:00,2024-01-25 16:52:18+00:00,12.651666666666667,APPROVED,1,1,0,1,"This PR removes the non-English Youtube video from the blockchain roadmap, cryptography.",88,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Create 104-opentofu.md,5085,2024-01-24 16:56:02+00:00,2024-01-25 00:15:41+00:00,,7.3275,REVIEW_REQUIRED,1,1,9,0,"Add OpenTofu as an alternative to Terraform, which is an Open-source infrastructure-provisioning tool that is maintened by Linux Foundation.",140,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Update 101-esbuild.md,5078,2024-01-23 19:03:03+00:00,2024-01-24 16:02:01+00:00,2024-01-24 16:02:01+00:00,20.982777777777777,APPROVED,2,1,1,1,fixing a dead youtube link caused by a change of channel name\nlinked to this issue: #5076,90,3,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,feat: upgrade package to latest versions,5077,2024-01-23 17:20:27+00:00,2024-01-26 16:01:12+00:00,2024-01-26 16:01:12+00:00,70.67916666666666,REVIEW_REQUIRED,0,3,1149,1156,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Added TypeScript and replaced Postgres with MongoDB in Full Stack Roadmap,5069,2024-01-22 06:48:50+00:00,2024-01-29 09:12:45+00:00,,170.3986111111111,REVIEW_REQUIRED,1,28,199,139,"As TypeScript and MongoDB are the most wanted skills as a Full Stack Developer in the Job Market and Postgres is only used in specific projects of Full Stack, it can be learned later easily by the person.",204,1,3
kamranahmedse/developer-roadmap,272764,2700,MERGED,fix: broken link in frontend performance recommended guides,5061,2024-01-20 22:32:50+00:00,2024-01-25 15:43:13+00:00,2024-01-25 15:43:13+00:00,113.17305555555555,APPROVED,1,1,1,1,This PR replace this broken link with https://www.harrytheo.com/blog/2021/09/dom-reflow-and-layout-thrashing/\nThis is the same article; only Charistheo changed the name to Harrytheo,182,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,feat: add Node.js questions,5056,2024-01-19 17:51:03+00:00,2024-01-22 10:44:48+00:00,2024-01-22 10:44:48+00:00,64.89583333333333,REVIEW_REQUIRED,0,9,409,0,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Update 100-primitive-types.md,5054,2024-01-19 02:13:38+00:00,2024-02-24 13:28:54+00:00,,875.2544444444444,REVIEW_REQUIRED,0,1,18,1,Added One Two liner description in all the primitive data types to make it more understandable.,95,1,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Update 104-using-gradle.md,5051,2024-01-18 15:57:24+00:00,2024-01-19 13:09:11+00:00,2024-01-19 13:09:11+00:00,21.19638888888889,APPROVED,4,1,7,1,Added a link to a YouTube video.\nGradle for complete beginners.,64,3,2
kamranahmedse/developer-roadmap,272764,2700,MERGED,fix: replace a broken link in the backend roadmap,5049,2024-01-18 04:37:16+00:00,2024-01-18 17:08:14+00:00,2024-01-18 17:08:14+00:00,12.516111111111112,APPROVED,2,1,1,1,"This PR fixes issue #5044 by changing the broken link under ""Complete Java Course"" to the right url from internet archive.",122,3,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,fix: broken link in python and also add another similar resource,5045,2024-01-18 00:47:14+00:00,2024-02-04 16:02:18+00:00,2024-02-04 16:02:18+00:00,423.25111111111113,APPROVED,2,1,3,1,This PR fixes issue #5043\nchange this link to archive version as the site is unavailable and redirected to host provider.\nalso added another similar resource: https://blog.boot.dev/computer-science/binary-search-tree-in-python/,229,3,3
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Add WaitGroups to Go - Going Deeper,5042,2024-01-17 12:11:03+00:00,2024-01-18 16:37:45+00:00,,28.445,REVIEW_REQUIRED,0,2,104,49,"Adds a new - WaitGroups - node to Go roadmap, for Going Deeper. I believe it's good to have this here as it teaches about a type of concurrency in Go.\nThis is also done by a request here",187,2,5
kamranahmedse/developer-roadmap,272764,2700,CLOSED,update,5041,2024-01-16 11:39:50+00:00,2024-01-18 01:33:39+00:00,,37.89694444444444,REVIEW_REQUIRED,0,165,630221,32,,0,55,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Fix typo: fix badly conjugated verb in typescript roadmap 108-enum.md ,5030,2024-01-14 17:26:06+00:00,2024-01-18 06:57:34+00:00,2024-01-18 06:57:34+00:00,85.52444444444444,REVIEW_REQUIRED,0,1,1,1,"Fix a typo with a third person verb badly conjugated. I added an ""s"" at the end of ""It allow"".",94,2,1
kamranahmedse/developer-roadmap,272764,2700,CLOSED,typo-fix: typescript roadmap update 108-enum.md,5029,2024-01-14 17:21:42+00:00,2024-01-14 17:22:41+00:00,,0.01638888888888889,REVIEW_REQUIRED,0,1,1,1,"Fix a typo with a third person verb badly conjugated. I added an ""s"" at the end of ""It allow"".",94,1,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,fixed broken link issue,5027,2024-01-14 08:33:55+00:00,2024-01-15 16:35:37+00:00,,32.028333333333336,REVIEW_REQUIRED,0,1,1,1,"This PR fixes #5019\nNew link has been added .\nChanges have been made to the file ""104.hateoas.md"" in the path\n/src/data/roadmaps/backend/content/109-apis",156,3,5
kamranahmedse/developer-roadmap,272764,2700,MERGED,Correction in as type operator example,5017,2024-01-11 04:35:00+00:00,2024-01-11 06:11:38+00:00,2024-01-11 06:11:38+00:00,1.6105555555555555,REVIEW_REQUIRED,0,1,8,6,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,fix: replace the broken youtube link with the correct one in ux-design,5014,2024-01-10 13:01:59+00:00,2024-01-25 15:44:52+00:00,2024-01-25 15:44:52+00:00,362.71472222222224,APPROVED,3,1,1,1,This PR fixes issue #4995\nbased on data in archive.org,55,4,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Update index.md,5005,2024-01-09 08:33:40+00:00,2024-01-09 08:44:25+00:00,2024-01-09 08:44:25+00:00,0.17916666666666667,APPROVED,1,1,1,1,Fixed a mistake in the article.,31,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,docs: add vitest in testing category for vue roadmap,5003,2024-01-09 04:11:00+00:00,2024-01-09 08:12:49+00:00,,4.030277777777778,REVIEW_REQUIRED,0,8,95,38,Description\nI added Vitest in testing category for Vue roadmap because you know Vitest is a good testing framework and Vitest is a team of Vue contributors like Anthony Fu and Patak. Can be seen on Meet The Team.\nI think it would be good if it was included in the Vue roadmap. Thanks\nPreview\nBefore\n\nAfter,311,2,2
kamranahmedse/developer-roadmap,272764,2700,MERGED,Update 105-high-order-components.md,5002,2024-01-08 21:03:13+00:00,2024-01-09 11:00:57+00:00,2024-01-09 11:00:57+00:00,13.962222222222222,APPROVED,1,1,1,0,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,fix: replace broken link with a valid one in frontend performance,5001,2024-01-08 20:51:06+00:00,2024-01-09 08:15:17+00:00,2024-01-09 08:15:17+00:00,11.403055555555556,APPROVED,1,1,1,1,This PR replaces this broken link https://www.loxodrome.io/post/web-worker-performance with another resource with similar material https://www.jameslmilner.com/posts/web-worker-performance,188,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,fix: markdown missing closing parenthesis for link,4999,2024-01-08 19:55:18+00:00,2024-01-09 08:13:38+00:00,2024-01-09 08:13:38+00:00,12.305555555555555,APPROVED,1,1,1,1,This PR fixes the missing closing parenthesis in the Markdown link,66,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Update 102-javascript-versions.md,4992,2024-01-07 13:07:31+00:00,2024-01-08 17:35:47+00:00,2024-01-08 17:35:47+00:00,28.47111111111111,APPROVED,2,1,2,1,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Update 103-implementation-semantics.md,4989,2024-01-06 23:25:16+00:00,2024-01-08 17:49:59+00:00,2024-01-08 17:49:59+00:00,42.411944444444444,APPROVED,1,1,3,3,Proper and consistent styling,29,2,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,feat: custom roadmap slug routes,4987,2024-01-06 13:18:11+00:00,2024-01-06 17:03:00+00:00,2024-01-06 17:03:00+00:00,3.7469444444444444,,0,18,105,71,,0,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Update 103-implementation-semantics.md,4986,2024-01-06 00:54:37+00:00,2024-01-06 23:26:23+00:00,,22.529444444444444,REVIEW_REQUIRED,1,1,1,1,Fixed consistency with periods,30,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Update Serverless index.md,4983,2024-01-05 10:34:58+00:00,2024-03-17 01:23:54+00:00,,1718.8155555555556,REVIEW_REQUIRED,0,1,16,1,"Added an overview of serverless computing\n\n\nIntroduced the concept of serverless computing, detailing its key characteristics such as no server management, automatic scaling, and usage-based billing.\n\n\nDescribed the common applications of serverless computing, focusing on its suitability for microservices, API backends, and event-driven workflows.\n\n\nEnsured the content is generalized and does not include specific references to platforms like Vercel or GCP, keeping the overview broad and platform-agnostic.\n\n\nProvided a clear, concise introduction suitable for readers new to the concept, while still being informative for those with some background in cloud computing.",685,1,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Updated: all occurrences of the year 2023 to 2024 in relevant files.,4979,2024-01-04 17:43:25+00:00,2024-01-08 17:29:50+00:00,2024-01-08 17:29:49+00:00,95.77361111111111,APPROVED,1,42,150,150,Updated: all occurrences of the year 2023 to 2024 in relevant files.\nAfter\n\nBefore,85,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Add files via upload,4977,2024-01-04 14:00:15+00:00,2024-01-06 09:07:20+00:00,,43.11805555555556,REVIEW_REQUIRED,1,1,10,0,I have added a new practice for good prompt\n108-Clear-and-precise.md,69,2,0
kamranahmedse/developer-roadmap,272764,2700,CLOSED,Updated: all occurrences of the year 2023 to 2024 in relevant files.,4975,2024-01-04 06:34:46+00:00,2024-01-04 16:30:41+00:00,,9.931944444444444,REVIEW_REQUIRED,0,43,13473,148,Updated: all occurrences of the year 2023 to 2024 in relevant files.\nclosed because of package-lock.json\nPlease check PR #4979,128,1,0
kamranahmedse/developer-roadmap,272764,2700,MERGED,Update 101-flask.md,4973,2024-01-03 21:06:37+00:00,2024-01-08 17:59:44+00:00,2024-01-08 17:59:44+00:00,116.88527777777777,APPROVED,1,1,1,1,added clarity about flask features,34,2,0
